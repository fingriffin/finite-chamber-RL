(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    407737,       8261]
NotebookOptionsPosition[    404782,       8206]
NotebookOutlinePosition[    405274,       8224]
CellTagsIndexPosition[    405231,       8221]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Loading LieART", "Section",
 CellChangeTimes->{{3.9333041370392838`*^9, 
  3.9333041520084953`*^9}},ExpressionUUID->"01051dae-a0a2-6344-87fd-\
9f7a84cfa9a8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{"q", ">", "0"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getLieART", "[", "]"}], ":=", "\n", "  ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"paclet", ",", " ", "res", ",", " ", "setStdForm"}], "}"}], 
      ",", "\n", "    ", 
      RowBox[{
       RowBox[{
        RowBox[{"setStdForm", "[", "]"}], " ", ":=", " ", 
        RowBox[{"SetOptions", "[", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "\n", "      ", 
          RowBox[{"CommonDefaultFormatTypes", " ", "->", " ", 
           RowBox[{"{", 
            RowBox[{"\"\<Output\>\"", " ", "->", " ", "StandardForm"}], 
            "}"}]}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"AnyTrue", "[", 
          RowBox[{"$Packages", ",", " ", 
           RowBox[{"StringMatchQ", "[", "\"\<LieART`\>\"", "]"}]}], " ", 
          "]"}], ",", "\n", "      ", 
         RowBox[{
          RowBox[{"setStdForm", "[", "]"}], ";", " ", 
          RowBox[{"Return", "[", "Null", "]"}]}]}], "\n", "    ", "]"}], ";", 
       "\n", "    ", 
       RowBox[{"paclet", " ", "=", " ", 
        RowBox[{"PacletFind", "[", "\"\<LieART\>\"", "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{"paclet", ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", " ", "\n", "      ", 
         RowBox[{"Check", "[", 
          RowBox[{
           RowBox[{"installLieART", "[", "]"}], ",", " ", 
           RowBox[{"Return", "@", "$Failed"}]}], "]"}]}], "\n", "    ", "]"}],
        ";", "\n", "    ", 
       RowBox[{"res", " ", "=", " ", 
        RowBox[{"Quiet", "@", 
         RowBox[{"Needs", "[", "\"\<LieART`\>\"", "]"}]}]}], ";", "\n", 
       "    ", 
       RowBox[{"setStdForm", "[", "]"}], ";", "\n", "    ", "res"}]}], "\n", 
     "  ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"installLieART", "[", "]"}], " ", ":=", " ", "\n", "  ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "json", ",", " ", "download", ",", " ", "tempDir", ",", " ", "target", 
        ",", " ", "pacletObj", ",", " ", "paclet", ",", " ", "res"}], "}"}], 
      ",", "\n", "    ", 
      RowBox[{
       RowBox[{"Check", "[", "\n", "      ", 
        RowBox[{
         RowBox[{
          RowBox[{
          "download", "=", 
           "\"\<https://lieart.hepforge.org/downloads/LieART-2.0.2.zip\>\""}],
           ";", "\n", "      ", 
          RowBox[{"tempDir", " ", "=", " ", 
           RowBox[{"CreateDirectory", "@", 
            RowBox[{"FileNameJoin", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Directory", "[", "]"}], ",", " ", "\"\<temp\>\""}], 
              "}"}], "]"}]}]}], ";", "\n", "      ", 
          RowBox[{"target", "=", " ", 
           RowBox[{"FileNameJoin", "[", 
            RowBox[{"{", 
             RowBox[{"tempDir", ",", " ", "\"\<LieART-2.0.2.zip\>\""}], "}"}],
             "]"}]}], ";", "\n", "      ", 
          RowBox[{"If", "[", 
           RowBox[{"$Notebooks", ",", " ", "\n", "        ", 
            RowBox[{"PrintTemporary", "@", 
             RowBox[{"Labeled", "[", 
              RowBox[{
               RowBox[{"ProgressIndicator", "[", 
                RowBox[{"Appearance", "->", "\"\<Necklace\>\""}], "]"}], ",", 
               " ", "\"\<Downloading LieART...\>\"", ",", " ", "Right"}], 
              "]"}]}], ",", "\n", "        ", 
            RowBox[{"Print", "[", "\"\<Downloading LieART...\>\"", "]"}]}], 
           "\n", "      ", "]"}], ";", "\n", "      ", 
          RowBox[{"Echo", "@", 
           RowBox[{"URLSave", "[", 
            RowBox[{"download", ",", "target"}], "]"}]}]}], ",", "\n", 
         "      ", 
         RowBox[{"Return", "[", "$Failed", "]"}]}], "\n", "    ", "]"}], ";", 
       "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"FileExistsQ", "[", "target", "]"}], ",", "\n", "      ", 
         RowBox[{
          RowBox[{"ExtractArchive", "[", 
           RowBox[{"target", ",", " ", "tempDir", ",", " ", 
            RowBox[{"OverwriteTarget", "->", "True"}]}], "]"}], ";", "\n", 
          "      ", 
          RowBox[{"res", " ", "=", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"$VersionNumber", " ", ">=", " ", "12.1"}], ",", "\n", 
             "        ", 
             RowBox[{
              RowBox[{"pacletObj", " ", "=", " ", 
               RowBox[{"PacletObject", "[", 
                RowBox[{"<|", "\n", "          ", 
                 RowBox[{
                  RowBox[{"\"\<Name\>\"", " ", "->", " ", "\"\<LieART\>\""}], 
                  ",", "\n", "          ", 
                  RowBox[{
                  "\"\<Version\>\"", " ", "->", " ", "\"\<2.0.2\>\""}], ",", 
                  " ", "\n", "          ", 
                  RowBox[{
                  "\"\<MathematicaVersion\>\"", " ", "->", " ", 
                   "\"\<6+\>\""}], ",", "\n", "          ", 
                  RowBox[{"\"\<Extensions\>\"", " ", "->", " ", 
                   RowBox[{"{", "\n", "            ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<Kernel\>\"", ",", " ", 
                    RowBox[{
                    "\"\<Context\>\"", " ", "->", " ", "\"\<LieART`\>\""}]}], 
                    "}"}], ",", "\n", "            ", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Documentation\>\"", ",", " ", 
                    RowBox[{"Language", " ", "->", " ", "All"}], ",", " ", 
                    RowBox[{
                    "MainPage", " ", "->", " ", "\"\<Guides/LieART\>\""}]}], 
                    "}"}]}], "\n", "        ", "}"}]}]}], "|>"}], "]"}]}], 
              ";", "\n", "        ", 
              RowBox[{"Put", "[", 
               RowBox[{"pacletObj", ",", " ", 
                RowBox[{"FileNameJoin", "[", 
                 RowBox[{"{", 
                  RowBox[{"tempDir", ",", " ", "\"\<LieART\>\""}], "}"}], 
                 "]"}]}], " ", "]"}], ";", "\n", "        ", 
              RowBox[{"paclet", " ", "=", " ", 
               RowBox[{"CreatePacletArchive", "@", 
                RowBox[{"FileNameJoin", "[", 
                 RowBox[{"{", 
                  RowBox[{"tempDir", ",", " ", "\"\<LieART\>\""}], "}"}], 
                 "]"}]}]}], ";", "\n", "        ", 
              RowBox[{"PacletInstall", "[", 
               RowBox[{"paclet", ",", " ", 
                RowBox[{"ForceVersionInstall", "->", "True"}]}], "]"}]}], ",",
              "\n", "        ", 
             RowBox[{
              RowBox[{"pacletObj", " ", "=", " ", 
               RowBox[{"Paclet", "[", "\n", "          ", 
                RowBox[{
                 RowBox[{"Name", " ", "->", " ", "\"\<LieART\>\""}], ",", 
                 "\n", "          ", 
                 RowBox[{"Version", " ", "->", " ", "\"\<2.0.2\>\""}], ",", 
                 "\n", "          ", 
                 RowBox[{"MathematicaVersion", " ", "->", " ", "\"\<6+\>\""}],
                  ",", "\n", "          ", 
                 RowBox[{"Extensions", " ", "->", " ", 
                  RowBox[{"{", "\n", "            ", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<Kernel\>\"", ",", " ", 
                    RowBox[{"\"\<Root\>\"", " ", "->", " ", "\"\<.\>\""}], 
                    ",", " ", 
                    RowBox[{
                    "\"\<Context\>\"", " ", "->", " ", "\"\<LieART`\>\""}]}], 
                    "}"}], ",", "\n", "            ", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Documentation\>\"", ",", " ", 
                    RowBox[{"Language", " ", "->", " ", "All"}], ",", " ", 
                    RowBox[{
                    "MainPage", " ", "->", " ", "\"\<Guides/LieART\>\""}]}], 
                    "}"}]}], "\n", "          ", "}"}]}]}], "\n", "        ", 
                "]"}]}], ";", "\n", "        ", 
              RowBox[{"Put", "[", 
               RowBox[{"pacletObj", ",", " ", 
                RowBox[{"FileNameJoin", "[", 
                 RowBox[{"{", 
                  RowBox[{
                  "tempDir", ",", " ", "\"\<LieART\>\"", ",", " ", 
                   "\"\<PacletInfo.m\>\""}], "}"}], "]"}]}], " ", "]"}], ";", 
              "\n", "        ", 
              RowBox[{"paclet", " ", "=", " ", 
               RowBox[{"PackPaclet", "@", 
                RowBox[{"FileNameJoin", "[", 
                 RowBox[{"{", 
                  RowBox[{"tempDir", ",", " ", "\"\<LieART\>\""}], "}"}], 
                 "]"}]}]}], ";", "\n", "        ", 
              RowBox[{"PacletInstall", "[", 
               RowBox[{"paclet", ",", " ", 
                RowBox[{"IgnoreVersion", "->", "True"}]}], "]"}]}]}], "\n", 
            "      ", "]"}]}], ";", "\n", "      ", 
          RowBox[{"DeleteDirectory", "[", 
           RowBox[{"tempDir", ",", " ", 
            RowBox[{"DeleteContents", "->", "True"}]}], "]"}], ";", "\n", 
          "      ", 
          RowBox[{"Return", "[", "res", "]"}]}], ",", "\n", "      ", 
         RowBox[{"Return", "[", "$Failed", "]"}]}], "\n", "    ", "]"}], 
       ";"}]}], "\n", "  ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"getLieART", "[", "]"}], 
  ";"}], "\n", "\"\<LieART 1.1.5\>\"", "\n", "\"\<last revised 7 August \
2014\>\"", "\n", 
 RowBox[{
  RowBox[{"Remove", "[", "getLieART", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Remove", "[", "installLieART", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Unprotect", "[", "\"\<LieARTCharacters`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<LieARTCharacters`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{"BeginPackage", "[", 
  RowBox[{"\"\<LieARTCharacters`\>\"", ",", " ", 
   RowBox[{"{", "\"\<LieART`\>\"", "}"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MinExponent", "::", "usage"}], " ", "=", " ", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"HighestWeightsFrom", "::", "usage"}], " ", "=", " ", "\"\<\>\""}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Chi]", "::", "usage"}], " ", "=", " ", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CharacterDecomposition", "::", "usage"}], " ", "=", " ", 
   "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MonomialCoefficient", "::", "usage"}], " ", "=", " ", 
   "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"$SaveCharacterDefinition", " ", "=", " ", "True"}], ";"}], "\n", 
 RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MinExponent", "[", 
    RowBox[{
     RowBox[{"expr", " ", ":", " ", 
      RowBox[{
       RowBox[{"HoldPattern", "[", "SeriesData", "]"}], "[", 
       RowBox[{"t_", ",", " ", "__"}], "]"}]}], ",", " ", "t_"}], "]"}], " ", 
   ":=", "\n", "  ", 
   RowBox[{
    RowBox[{"ReplaceAll", "[", "\n", "    ", 
     RowBox[{
      RowBox[{
       RowBox[{"HoldPattern", "[", "SeriesData", "]"}], "[", 
       RowBox[{
       "_", ",", " ", "_", ",", " ", "_", ",", " ", "ni_", ",", " ", "nf_", 
        ",", " ", 
        RowBox[{"den_", " ", ":", " ", "1"}]}], "]"}], " ", ":>", " ", 
      RowBox[{"ni", "/", "den"}]}], "\n", "  ", "]"}], "[", "expr", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MinExponent", "[", 
    RowBox[{"expr_", ",", " ", "t_"}], "]"}], " ", ":=", "\n", "  ", 
   RowBox[{"Min", "@", 
    RowBox[{"Exponent", "[", 
     RowBox[{
      RowBox[{"List", " ", "@@", " ", 
       RowBox[{"Expand", "@", 
        RowBox[{"Normal", "[", "expr", "]"}]}]}], ",", " ", "t"}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"MinExponent", ",", " ", 
    RowBox[{"{", 
     RowBox[{"ReadProtected", ",", " ", "Protected"}], "}"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HighestWeightsFrom", "[", "g_", "]"}], "[", 
    RowBox[{"expr_", ",", " ", 
     RowBox[{"{", "vars__", "}"}]}], "]"}], " ", ":=", "\n", "  ", 
   RowBox[{"HighestWeightsFrom", "[", 
    RowBox[{"expr", ",", " ", 
     RowBox[{"{", "vars", "}"}], ",", " ", "g"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"HighestWeightsFrom", "[", 
    RowBox[{"expr_", ",", " ", 
     RowBox[{"{", "vars__", "}"}], ",", " ", 
     RowBox[{"g_", " ", ":", " ", "A"}]}], "]"}], " ", ":=", "\n", "  ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "gsub", ",", " ", "nDomW", ",", " ", "domW", ",", " ", "domWalphaB", 
       ",", " ", "ss", ",", " ", "dropI"}], "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"gsub", " ", "=", " ", 
       RowBox[{"Switch", "[", 
        RowBox[{"g", ",", " ", "\n", "      ", 
         RowBox[{
         "A", " ", "|", " ", "B", " ", "|", " ", "C", " ", "|", " ", "D"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"Algebra", "[", "g", "]"}], "[", 
          RowBox[{"Length", "@", 
           RowBox[{"{", "vars", "}"}]}], "]"}], ",", "\n", "      ", "_", ",",
          " ", "g"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"domW", " ", "=", " ", 
       RowBox[{"DeleteDuplicates", "@", 
        RowBox[{"Cases", "[", "\n", "      ", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Exponent", "[", 
               RowBox[{"#", ",", " ", 
                RowBox[{"{", "vars", "}"}]}], "]"}], " ", "&"}], ")"}], ",", 
            " ", 
            RowBox[{"List", " ", "@@", " ", 
             RowBox[{"Expand", "@", "expr"}]}]}], "]"}], ",", "\n", "      ", 
          RowBox[{"{", 
           RowBox[{"__", "?", "NonNegative"}], "}"}]}], "\n", "    ", 
         "]"}]}]}], ";", "\n", "    ", 
      RowBox[{"nDomW", " ", "=", " ", 
       RowBox[{"Length", "[", "domW", "]"}]}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"nDomW", " ", "==", " ", "0"}], ",", "\n", "      ", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", " ", 
            RowBox[{"Rank", "@", "gsub"}]}], "]"}], "}"}], "]"}]}], "\n", 
       "    ", "]"}], ";", "\n", "    ", 
      RowBox[{"domWalphaB", " ", "=", " ", 
       RowBox[{"Transpose", "[", "\n", "      ", 
        RowBox[{"Dot", "[", 
         RowBox[{
          RowBox[{"Inverse", "@", 
           RowBox[{"Transpose", "@", 
            RowBox[{"CartanMatrix", "@", "gsub"}]}]}], ",", " ", 
          RowBox[{"Transpose", "@", "domW"}]}], "]"}], "\n", "    ", "]"}]}], 
      ";", "\n", "    ", 
      RowBox[{"ss", " ", "=", " ", 
       RowBox[{"AssociationThread", "[", "\n", "      ", 
        RowBox[{
         RowBox[{"Subsets", "[", 
          RowBox[{
           RowBox[{"Range", "@", "nDomW"}], ",", " ", 
           RowBox[{"{", "2", "}"}]}], "]"}], ",", "\n", "      ", 
         RowBox[{"Subtract", " ", "@@@", " ", 
          RowBox[{"Subsets", "[", 
           RowBox[{"domWalphaB", ",", " ", 
            RowBox[{"{", "2", "}"}]}], "]"}]}]}], "\n", "    ", "]"}]}], ";", 
      "\n", "    ", 
      RowBox[{"dropI", " ", "=", " ", 
       RowBox[{"Join", "[", "\n", "      ", 
        RowBox[{
         RowBox[{"Last", " ", "/@", " ", 
          RowBox[{"Keys", "@", 
           RowBox[{"Select", "[", 
            RowBox[{"ss", ",", " ", 
             RowBox[{"MatchQ", "[", 
              RowBox[{"{", 
               RowBox[{"__Integer", "?", "NonNegative"}], "}"}], "]"}]}], " ",
             "]"}]}]}], ",", "\n", "      ", 
         RowBox[{"First", " ", "/@", " ", 
          RowBox[{"Keys", "@", 
           RowBox[{"Select", "[", 
            RowBox[{"ss", ",", " ", 
             RowBox[{"MatchQ", "[", 
              RowBox[{"{", 
               RowBox[{"__Integer", "?", "NonPositive"}], "}"}], "]"}]}], " ",
             "]"}]}]}]}], "\n", "    ", "]"}]}], ";", "\n", "    ", 
      RowBox[{"Delete", "[", 
       RowBox[{"domW", ",", " ", 
        RowBox[{"List", " ", "/@", " ", 
         RowBox[{"Union", "@", "dropI"}]}]}], "]"}]}]}], "\n", "  ", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"HighestWeightsFrom", ",", " ", 
    RowBox[{"{", 
     RowBox[{"ReadProtected", ",", " ", "Protected"}], "}"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Chi]", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n__Integer", "?", "NonNegative"}], "}"}], ",", " ", 
     RowBox[{"{", "vars__", "}"}]}], "]"}], " ", ":=", "\n", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Chi]", "[", "A", "]"}], "[", 
     RowBox[{"{", "n", "}"}], "]"}], "[", "vars", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Chi]", "[", 
   RowBox[{"{", 
    RowBox[{"n__Integer", "?", "NonNegative"}], "}"}], "]"}], " ", ":=", " ", 
  "\n", "  ", 
  RowBox[{
   RowBox[{"\[Chi]", "[", "A", "]"}], "[", 
   RowBox[{"{", "n", "}"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Chi]", "[", "g_", "]"}], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n__Integer", "?", "NonNegative"}], "}"}], ",", " ", 
    RowBox[{"{", "vars__", "}"}]}], "]"}], " ", ":=", "\n", "  ", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Chi]", "[", "g", "]"}], "[", 
    RowBox[{"{", "n", "}"}], "]"}], "[", "vars", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Chi]", "[", "g_", "]"}], "[", 
    RowBox[{"{", 
     RowBox[{"n__Integer", "?", "NonNegative"}], "}"}], "]"}], " ", ":=", " ",
    "\n", "  ", 
   RowBox[{"\[Chi]", "[", 
    RowBox[{"g", ",", " ", 
     RowBox[{"{", "n", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Chi]", "[", 
   RowBox[{"g_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"n__Integer", "?", "NonNegative"}], "}"}], ",", " ", 
    RowBox[{"{", "vars__", "}"}]}], "]"}], " ", ":=", "\n", "  ", 
  RowBox[{
   RowBox[{"\[Chi]", "[", 
    RowBox[{"g", ",", " ", 
     RowBox[{"{", "n", "}"}]}], "]"}], "[", "vars", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Chi]", "[", 
    RowBox[{"g_", ",", " ", 
     RowBox[{"{", 
      RowBox[{"n__Integer", "?", "NonNegative"}], "}"}]}], "]"}], " ", ":=", 
   "\n", "  ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "gclass", ",", " ", "irrep", ",", " ", "ws", ",", " ", "f", ",", " ", 
       "func"}], "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"gclass", " ", "=", " ", 
       RowBox[{"Switch", "[", 
        RowBox[{"g", ",", "\n", "      ", 
         RowBox[{
          RowBox[{"Algebra", "[", 
           RowBox[{
           "A", " ", "|", " ", "B", " ", "|", " ", "C", " ", "|", " ", "D"}], 
           "]"}], "[", "_Integer", "]"}], ",", "\n", "      ", 
         RowBox[{"First", "@", 
          RowBox[{"Head", "[", "g", "]"}]}], ",", "\n", "      ", "_", ",", 
         " ", "g"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"irrep", " ", "=", " ", 
       RowBox[{
        RowBox[{"Irrep", "[", "gclass", "]"}], "[", "n", "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"ws", " ", "=", " ", 
       RowBox[{"List", " ", "@@@", " ", 
        RowBox[{"WeightSystem", "[", "irrep", "]"}]}]}], ";", "\n", "    ", 
      RowBox[{"f", " ", "=", " ", 
       RowBox[{"Total", "@", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{"Function", "[", 
           RowBox[{"w", ",", " ", 
            RowBox[{"Apply", "[", 
             RowBox[{"Times", ",", " ", 
              RowBox[{
               RowBox[{"Array", "[", 
                RowBox[{"Slot", ",", " ", 
                 RowBox[{"Length", "@", 
                  RowBox[{"{", "n", "}"}]}]}], "]"}], "^", "w"}]}], "]"}]}], 
           " ", "]"}], ",", " ", "ws"}], "]"}]}]}], ";", "\n", "    ", 
      RowBox[{"func", " ", "=", " ", 
       RowBox[{"Function", "[", 
        RowBox[{"Evaluate", "@", "f"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{"$SaveCharacterDefinition", ",", "\n", "      ", 
        RowBox[{
         RowBox[{"\[Chi]", "[", 
          RowBox[{"g", ",", " ", 
           RowBox[{"{", "n", "}"}]}], "]"}], " ", "=", " ", 
         RowBox[{"Evaluate", "@", "func"}]}]}], "\n", "    ", "]"}], ";", 
      "\n", "    ", 
      RowBox[{"Return", "[", "func", "]"}], ";"}]}], "\n", "  ", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"\[Chi]", ",", " ", 
    RowBox[{"{", "ReadProtected", "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CharacterDecomposition", "[", "g_", "]"}], "[", 
   RowBox[{"expr_", ",", " ", 
    RowBox[{"{", "vars__", "}"}], ",", " ", 
    RowBox[{"maxIter_", " ", ":", " ", "30"}]}], "]"}], " ", ":=", "\n", "  ", 
  RowBox[{"CharacterDecomposition", "[", 
   RowBox[{"expr", ",", " ", 
    RowBox[{"{", "vars", "}"}], ",", " ", "g", ",", " ", "maxIter"}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CharacterDecomposition", "[", 
    RowBox[{"expr_", ",", " ", 
     RowBox[{"{", "vars__", "}"}], ",", " ", 
     RowBox[{"g_", " ", ":", " ", "A"}], ",", " ", 
     RowBox[{"maxIter_", " ", ":", " ", "30"}]}], "]"}], " ", ":=", "\n", 
   "  ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"chars", ",", " ", "multiCoef", ",", " ", "nestF"}], "}"}], ",",
      "\n", "    ", 
     RowBox[{
      RowBox[{"chars", " ", "=", " ", 
       RowBox[{"<|", "|>"}]}], ";", "\n", "    ", 
      RowBox[{
       RowBox[{"nestF", "[", "e_", "]"}], " ", ":=", " ", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ws", ",", " ", "coefs"}], "}"}], ",", "\n", "      ", 
         RowBox[{
          RowBox[{"ws", " ", "=", " ", 
           RowBox[{
            RowBox[{"HighestWeightsFrom", "[", "g", "]"}], "[", 
            RowBox[{"e", ",", " ", 
             RowBox[{"{", "vars", "}"}]}], "]"}]}], ";", "\n", "      ", 
          RowBox[{"coefs", " ", "=", " ", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"MonomialCoefficient", "[", 
                RowBox[{"e", ",", " ", 
                 RowBox[{"{", "vars", "}"}], ",", " ", "#"}], "]"}], " ", 
               "&"}], ")"}], ",", " ", "ws"}], "]"}]}], ";", "\n", "      ", 
          RowBox[{"PrependTo", "[", 
           RowBox[{"chars", ",", " ", 
            RowBox[{"Thread", "[", 
             RowBox[{"ws", " ", "->", " ", "coefs"}], "]"}]}], " ", "]"}], 
          ";", "\n", "      ", 
          RowBox[{"Expand", "[", " ", 
           RowBox[{"e", " ", "-", " ", 
            RowBox[{"Dot", "[", 
             RowBox[{
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Chi]", "[", 
                   RowBox[{"g", ",", " ", "#", ",", " ", 
                    RowBox[{"{", "vars", "}"}]}], "]"}], " ", "&"}], ")"}], 
                ",", " ", "ws"}], "]"}], ",", " ", "coefs"}], "]"}]}], " ", 
           "]"}]}]}], "\n", "    ", "]"}]}], ";", "\n", "    ", 
      RowBox[{"NestWhile", "[", 
       RowBox[{"nestF", ",", " ", "expr", ",", " ", 
        RowBox[{"Not", "@*", "PossibleZeroQ"}], ",", " ", "1", ",", " ", 
        "maxIter"}], "]"}], ";", "\n", "    ", "chars"}]}], "\n", "  ", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"CharacterDecomposition", ",", " ", 
    RowBox[{"{", 
     RowBox[{"ReadProtected", ",", " ", "Protected"}], "}"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MonomialCoefficient", "[", 
    RowBox[{"e_", ",", " ", 
     RowBox[{"{", "v__", "}"}], ",", " ", 
     RowBox[{"{", "n__", "}"}]}], "]"}], " ", ":=", " ", "\n", "  ", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"MonomialCoefficient", "::", "lenerr"}], ",", " ", 
      RowBox[{"{", "v", "}"}], ",", " ", 
      RowBox[{"{", "n", "}"}]}], "]"}], " ", "/;", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"{", "v", "}"}], "]"}], "!=", 
      RowBox[{"Length", "[", 
       RowBox[{"{", "n", "}"}], "]"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MonomialCoefficient", "[", 
    RowBox[{"e_", ",", " ", 
     RowBox[{"{", "v__", "}"}], ",", " ", 
     RowBox[{"{", "n__", "}"}]}], "]"}], " ", ":=", " ", "\n", "  ", 
   RowBox[{"Fold", "[", "\n", "    ", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "pair"}], "}"}], ",", " ", 
       RowBox[{"Coefficient", "[", 
        RowBox[{"x", ",", " ", 
         RowBox[{"First", "@", "pair"}], ",", " ", 
         RowBox[{"Last", "@", "pair"}]}], "]"}]}], " ", "]"}], ",", "\n", 
     "    ", "e", ",", " ", "\n", "    ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "v", "}"}], ",", " ", 
        RowBox[{"{", "n", "}"}]}], "}"}], "]"}]}], "\n", "  ", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MonomialCoefficient", "::", "lenerr"}], " ", "=", " ", 
   "\"\<Length of `1` and `2` do not match.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"MonomialCoefficient", ",", " ", 
    RowBox[{"{", 
     RowBox[{"ReadProtected", ",", " ", "Protected"}], "}"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{"End", "[", "]"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{3.9333041618685684`*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"2b7bfcb1-691e-1b40-bc5f-21bb3be2259c"],

Cell[BoxData[
 RowBox[{"q", ">", "0"}]], "Output",
 CellChangeTimes->{3.93330416942733*^9, 3.933590753879441*^9, 
  3.934113578783863*^9, 3.9342542375690784`*^9, 3.934267954746837*^9, 
  3.934356920220667*^9, 3.9344260745773563`*^9, 3.9344296540971107`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"6dd5af62-b6d1-3845-84b0-e2bbff5f22c7"],

Cell[CellGroupData[{

Cell[BoxData["\<\"LieART 2.0.2\"\>"], "Print",
 CellChangeTimes->{3.93330416946694*^9, 3.93359075390086*^9, 
  3.9341135788160357`*^9, 3.934254237608076*^9, 3.934267954784263*^9, 
  3.934356920254616*^9, 3.934426074608776*^9, 3.934429654100708*^9},
 CellLabel->
  "During evaluation of \
In[6]:=",ExpressionUUID->"a1ee6ec0-02e4-7a45-a123-0f900d7c6214"],

Cell[BoxData["\<\"last revised 21 August 2020\"\>"], "Print",
 CellChangeTimes->{3.93330416946694*^9, 3.93359075390086*^9, 
  3.9341135788160357`*^9, 3.934254237608076*^9, 3.934267954784263*^9, 
  3.934356920254616*^9, 3.934426074608776*^9, 3.9344296541017094`*^9},
 CellLabel->
  "During evaluation of \
In[6]:=",ExpressionUUID->"37e76887-8d76-3644-87b7-250851eb21da"]
}, Open  ]],

Cell[BoxData["\<\"LieART 1.1.5\"\>"], "Output",
 CellChangeTimes->{3.93330416942733*^9, 3.933590753879441*^9, 
  3.934113578783863*^9, 3.9342542375690784`*^9, 3.934267954746837*^9, 
  3.934356920220667*^9, 3.9344260745773563`*^9, 3.934429654263674*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"7720c58c-ca2d-5943-a73f-c52acf160bed"],

Cell[BoxData["\<\"last revised 7 August 2014\"\>"], "Output",
 CellChangeTimes->{3.93330416942733*^9, 3.933590753879441*^9, 
  3.934113578783863*^9, 3.9342542375690784`*^9, 3.934267954746837*^9, 
  3.934356920220667*^9, 3.9344260745773563`*^9, 3.934429654265671*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"27d29e32-b3bf-3b48-ac21-3d8104048626"],

Cell[BoxData["\<\"LieARTCharacters`\"\>"], "Output",
 CellChangeTimes->{3.93330416942733*^9, 3.933590753879441*^9, 
  3.934113578783863*^9, 3.9342542375690784`*^9, 3.934267954746837*^9, 
  3.934356920220667*^9, 3.9344260745773563`*^9, 3.93442965426667*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"16d19134-fa7d-444c-8f32-35c52f17a347"],

Cell[BoxData[
 TemplateBox[{
  "\[Chi]", "shdw", 
   "\"Symbol \\!\\(\\*RowBox[{\\\"\\\\\\\"\[Chi]\\\\\\\"\\\"}]\\) appears in \
multiple contexts \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"LieARTCharacters`\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Global`\\\\\\\"\\\"}], \\\"}\\\"}]\\); definitions in context \\!\
\\(\\*RowBox[{\\\"\\\\\\\"LieARTCharacters`\\\\\\\"\\\"}]\\) may shadow or be \
shadowed by other definitions.\"", 2, 19, 1, 18578050067497491598, "Local", 
   "LieARTCharacters`\[Chi]"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.9344296542971115`*^9},
 CellLabel->
  "During evaluation of \
In[6]:=",ExpressionUUID->"45216612-467e-a044-a9f2-b6e8dbc3f08c"],

Cell[BoxData["\<\"LieARTCharacters`Private`\"\>"], "Output",
 CellChangeTimes->{3.93330416942733*^9, 3.933590753879441*^9, 
  3.934113578783863*^9, 3.9342542375690784`*^9, 3.934267954746837*^9, 
  3.934356920220667*^9, 3.9344260745773563`*^9, 3.9344296543123055`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"b7d0839f-8feb-8c49-aadf-845e7aa185ae"],

Cell[BoxData["\<\"LieARTCharacters`Private`\"\>"], "Output",
 CellChangeTimes->{3.93330416942733*^9, 3.933590753879441*^9, 
  3.934113578783863*^9, 3.9342542375690784`*^9, 3.934267954746837*^9, 
  3.934356920220667*^9, 3.9344260745773563`*^9, 3.9344296543133106`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"dc5de31a-9f13-af42-bc00-41976f323038"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["A-type Class \|01d4ae theory", "Section",
 CellChangeTimes->{{3.9333041955591736`*^9, 3.933304195978947*^9}, {
  3.9333042421886406`*^9, 3.933304245327173*^9}, {3.9333042759282017`*^9, 
  3.933304282297076*^9}, {3.933304313257044*^9, 3.9333043141630974`*^9}, {
  3.933305438997223*^9, 
  3.933305445227354*^9}},ExpressionUUID->"77fb14dc-b10b-e549-98d4-\
37c89900252a"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["References",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{{3.933305467551222*^9, 
  3.9333055250497303`*^9}},ExpressionUUID->"20949e6d-7820-b54d-ba10-\
4dfecc17ac11"],

Cell["\<\
- A review of the TN theory and its cousins, arXiv:1504.01481v1
- 1-form Symmetries of 4d N = 2 Class S Theories, arXiv:2102.01693v2\
\>", "Text",
 CellChangeTimes->{{3.9333055356490536`*^9, 3.9333055909472313`*^9}, {
  3.933326645746357*^9, 
  3.933326647654118*^9}},ExpressionUUID->"84b56719-a2d7-ad45-b05e-\
ac1a99e9db02"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Main code",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{{3.93330550256723*^9, 
  3.93330551023692*^9}},ExpressionUUID->"588f61b7-9aee-e548-9e93-\
0d5926806285"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsnfk/VF8fwN0x9jWyhAopUlrIkkhJEa2U9n0h7dpXe5aSrWhTikghlbSp
JNrsO9nGzB1/xzN3mTvbtYTMfJ8+7x+e1/NtzL13zj3ncz7ns5rtPuq7nyEn
J3dCmfc/vrvOLA4O3nXOT5v3H+uPnDgQcGTf3uVHTu4L2BfstFue94/5iJxc
mYKcHPb/+wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAABACrDLsuPDQjGib7/p+m9c+a/Q+7umsr5b
2k8BAMAfwGqprGpiS/spZAm0q/ZHdScq7ccAxghOW3VlUw9X2o/xfwaM6gCw
m379auXA4ABjDKzKEYL+rvtZ+5sj7cf4M+BoJl04bXc8jXS1R4SO26E8af+O
v0Vz0bkZGgw5HAOnC7WjtzP+vSvjcDjs4cPh8M4YnT8+PM+4dT3k9MEta5ba
WRmrMZVXhVXA4QOQNdC2z0knNjpaTjI2MtAzNHdde+JJRae0H0pKoO0Vb/LS
b169FBywYcXiWVP0leU1tqc0SPuxREA5YypFeqpe3bgaceZYwGbf5c5zpulr
KKib7X7/z6maYzzqUgPtqH5bkJkaH34yaMeqJY5TjTQVlJ1SfvZK+7n+LlxW
U8mzW5EXTh05ePDYyfOR124XljbyDwNdLxNPXE7/NpLr/5ujOkTYbb+KnmWk
xIUe27/F283WVE9NQdMrs5l+vUlrHf4r6390aC++dWbNgukTeSrFeENLhzUh
GV9Z0n4mSWBVUnDZP+M2zNHVMT/6qPUPvsapzkuLDz13fO9Wv2Uuc80NNZny
pmcLZFx7hKOZjIF21Xz98OzBtaAVM1QQOQkYBtaee46cOnfh/NnTwYcDdvmv
cLedqq8k8pfy8/bkSvtnYKCdLbWNHaM4l3obHvtN1aB+5yjaOv7elXE4r8+6
yku+zCFjOP9SH+fHndAzZ84EuVtoEv+IMGde+QgGT0C2+F2WuspKR2PS8uuv
atG+1rhVk3nCSd1sR9FoSoL/DFz2p7hDezf7LrU2UCaXrbLzzUpZUau4rLKw
VTNUmWozPC9/7hgjO0Z3eXbY+ZMBm130FIh9C5m+7s4/Jcg6ShOXWYxTUDP1
Dyv6v//h3d+yLp06cyrIZzJfodGxOf6t9//XaIa2FlzdM89EHf+tCjrG5lbT
p5roqjLkFCZYLVi9adumlXY6Cqqbr9eN5Cb/3Kj+CZ0lNw/s3rbGY854RXJw
jFxC6yU0OqlIPyne9z8Kt6c8ZsNsVaVJmyIKm9ncqrQN6ghP+zU9+eRPjudj
AqxKEk5VwuZZirzzqvrSjMY/Ufw439IjLx4P2mJnROpLCuPX5v2WbdURjmYy
C6fiuJOe2GkaUZx/s0pSA0eby59c3DZ/HBORHSsKl/0t1NN0gnNI4yiZI7js
H+He5gyh0RgtW8ffuzIJWn3ezZC4MlPNyG7Rqu0BR89cCAkLj4gIC7Qfr0De
lTFh1eHQSB7hIeeCD/h7ztEldQDm4uC31MUabm9Sw//1n3TgAjINqzbTb5oW
Q2V25JuOPkz/Kdxgis1WRN7i0isZdyj8XepS/VUotYotK8u2OWufLoMQMqr+
sZVjqaxwe15unkKcNFU3XqsZwztLnZ5b2yyJQWeoLbpb+4+kd3VdW2NK6CcO
+57Jihlx1EFrk7fNUcJ+pqKlx7HHpVQARFdFXuwaGz3SbsicEfF+VNTsf2NU
h0lH7MpJhAblfuKdpHCTlvSTotT974HW3dg2WwFRXnKiCA8+YWXsmYnr6vLO
Bwul/XD98W+vSk7tzR1zcRkoxzsA1g3nJMV6tH8WcSKb5BHbKivq0iDA0Uz2
YGXstRE+2mN2Od21ef0mkLM+JPobYIYUWbCi9BReWKKGyBmOmhWlq+C8u5po
cM4o2Tr+3pVJOC13lugoIPK6S/Ynf20RSfHr/hpho0S+ZCWD9QUiRle09vnZ
WVryiLzpmfwO6h+/RHoxcUVsxoZ7YO4EZAi0Om61BUOOMWdbJjkz0fr4dZby
coi+TdAbGXco/F16Hx+wJXQ/+71PZUetari/XYMUfczlF76M5RvitN5218Yk
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
P0IbbXkasXGqFvWbmNZrkwdO/u1tehMVuNLacPzMJTvOhoUe8JnOU03k1WZe
4u/jMkBP7nFnJcEwKDvtSv+jJc9l12VH7naxMtA3t1+xOfBSXHJSzFFnIyUl
XbuzmVWiwnQ4ozqCTbOvt/n52c0rF86bPkGbbGrI1Fn9FNc8e1ten14+ldhN
EcXpoa+lnkHTcsWb6JSq7Bf9S2jcBpF+vHVakHw+YOuahXaW+hoK5BWu/CSu
wO3+lhTgRm2IDLV5cUJVTxveXls5Q4+/HOSt194QsqgPdt++nryQFSbqIj0O
KIwXXemvOu5/Am73r/SL252m6Oqau+0+EXY9MfbENhc9BURezXTd2VzBKHHK
j8zTpR0BvljRDbwvHUsCyDo6ej8kbzJSMdwY/Z6v9nTd3jYd//kCNXKAr5c/
iVzvbKquabZs85HQqLDD6+1tvK4kBcwhys5LPZOL2/321FJLFXolV3FdbA31
l9I7mv0VjdrCfr7znCmaAs0fsVydIiaCehtT3cZhB1iEOfFwRt0fDu2YMbAV
pffH04tOhpj5qz8rStvL4MnkYMnpzTr6WcjuzWV/ChQOHUF0dt6sEbvE788x
jrrkMZOh7ppGGZzQxsvuhtRXGeput6t7+Zf9fGCOSETKcOuicEqurtKWV1l0
tIDapUbJ1vH3rvxnUDZbHhPdo4fQrYGdf9wRF8RM95Pv8ZfF/py2y1xD09pt
w86NbkakC2OgWmrNn29tnz9RHlGe6xdX0UH8wHaiTxBDwytrCJacvw/n87XV
mgze2rQMKeIXcUJbn55arCpqRUQ7W2oqvxcmbZtInJIYRkezJU4WnKpzC4m5
qrgytFzs5zW/C51Lnrk1tiZVlaTtnm5is+VETPqT5wVZ13fMNybfD8Ng723x
1UE+w+8v1/bz1CqG9pS1tz6R+3tN2gbcJqK+PUXgSu5urmvq7G3/kb4K69wn
x9fu0Jr8E9YaglWOKLpSOzK75e1lfztNecXpXueKagS1cT5FLMPjHcfvuUUj
u1h1z0+smqmKIAY2O7N/CHS832Vxzjq87yEGc4+WdFBzu+vzs7SrkWc3zDch
jTvyk4naWejvd6fczbSM567ast3Dahwxt1Qmbi/mu9h6m78WPM3FyLmxzopw
0Cgs3H8rl0/+629dw38w7A5NtQ1d7M7S29uN8VfMUHG9XdPLE/iPDjurCK1W
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
lz1spF4u+iWKf4BSWniXJsmLoLOpWehXDn9U+0a2afIWa4anHpHAaNhPnShp
Q9X4YhgeIaOI0V+ZJ48nUY7gQaSfoEuy/MRTz8RfaccHMjKTrvY7K2OPDT62
1LGo98Od6MdkoMUg9+X9V8gSIsVYL+gBPrZofcbVNNp9U5YRlNPE2gHTeB94
NDw7iC8HxGxx+A8xgxJaf5kIDWXoH3woO33WQNYNhCAZTX7KxZc01obehkRH
cn9nLr8gXuQQ/f1qr+ucKfoKYiu38fObb1I9mLBqk+bjOcKK+uuIbZdVlxt/
6zP/+cf4aDaWGrXElTuziLJsysZbXzUVbp/rFPNhiIUbpQuLXytPAHPc6iH6
LCT67Mjp2hzn931Da5+fmztOpLevqBWlj9OStYZs+C64ufWKmArRWlu9LUVH
F5o67n3C/1r5YTLrikR10o43eMnN7h/JboYTD6TXDns4BrV1CBk8KWjKNQzj
yqNH561t0/nvVNH3ylD6v7ddXU3kmapuvFYt+ex8OwMZLYB2fjq11PXcs6Y+
PNiY7xdApq5IkvSP9PWxKx6fdrX1TqVZcWMKVnFXUWtrUp3Yvzc92I77dxDr
DaLvEa0mE6MEYZBdzy8vM5sX/KmDy2W92WmFBxLwDs45v7GKZ/f3LFgRV0NI
HkEBOv2DGeI7Ndrx9vD8CVgrq4net0vFNi4WvxWpHFPHO5NO7+2uyg1cPG9L
bImocYZKqsXK7/cnvgT1J/t19qE1Bedd5m3Lb6RCpNAKcn/nyeqjdI0du56d
cOH9gbz6zLM5dWJP3PHu7BTcwqwwfq1kEDK3O3ct3kwKC/DGfiynLHWrrXvo
d76Juzlrry7eFmeie7TE7BrRg/UJbc14dfSBlHa0M9fXhGgPbXJSorMnFUqt
ZLheorQ+5Q4mjxXslsLdTg4X8pqErCjibk0uqyJ8pf3W+E85RG8jRGMX3gi+
+U3UEuedBUT0GqUNYqXSmvFvlYesWHgmt2mAHzIGcNkf9s3UJkb1cCY2+Xsq
765x3ZZHBt2x88kOF4iV3y1JtY1645M8YrE3zqm6us7eLxwrt/UrfjURCS/Z
1rm9NGn5/A3xoWTVQVOvePz431MUtW7VsWedI5NUrKr0FZYzTz4mpxD1hEYu
YYTBqq0kys354Pu/0rN+qHS8PUMsNCXDDS+wScgpS9vusT2dnys9/GGXHlQx
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
xsufY3la723+dO/q5ZOnQ25kf5Z+psrfh9tdVZB+887D/K/1A7zAru/FjxKi
w8KuXL/3+PnXOlkLyO19dSPuJR4OzeVNysL71yLDQsNjUh++qv7dr0kD7fyZ
kxIdFhF3v+B7l8Rs7G0uzUy7ee9xUbXoYU0QfoCVsWqufJuZEBMeHpN0P+dl
xZ+UPm6vepOeHBMaGpV0J+tVae1oz3BO88/X6clxYSGh0ddTH+V9aBxCW3Zu
T9PH/PT4K2EhYTEpdzKLK0ahFWVH5eu7N1If5n1skdAb+X2ZEev1dwbe6f/G
g40WvFn07G5axrN39XT5vLx5VPU+63pUWFhMcsaz9/WiJtme+jdp1+JS0l/U
0Jlq2S2f716Nik1Ofy1Rali69DZ9uBUXdS0tp7xpGHFoPd9ePbiRml74qZ52
ZXLZTe8e34gKDY1JuvP0zQ8RqxS79sm182cuxz/5SBNvwWcokopdVZweHRae
lPmpn3Y1PWV5KVFR8Y/f0WQHSwm09t39mMi4O08+DasD8yDDLhXavuUlREYm
3Mn7Oawqt7hsuZVZ8KmZ1e/X0c7qlw9TrvCmU8LtnMJPTUMQg2MJl/0p9lSS
oF4B2vH1+Z2Q4IBNvt5LFnus8N0YdOba00/91o0VwGmvKHqYGBsREhqVmPbg
eUnNsDeUgUd1eJvmfwe04eOj2MjoG/efV/VTl3Jk0m8g2n+8uJ16r+BDFa3M
Guy+XaVPb0RGXr2f/7UfrRX9mbZRmyHH1Fr2QDyYX0bpaizLvZcYFRoSHpt4
L+vFz0EjKji/iA5rtBW2pQvIutGAXfspJ/EKb3NPTM95LSpk2D8KEs6cupT8
qGRY++NfAe38/jj5StS12y/Lh5MR/PeOZtLQqNEfyX7ahp73f8iM7x0AAGnA
qop3UCOC570yZdWn9p+g8qY/FuQxSKUXAAAAAABGRG36Nm15FffgF/+vxxhO
y50lOgqyXHgHAP5NelvyNltPDbgjnhQPAMC/RvWtjUTZbaqzLTAsulK3WCJy
chpT9r6X3bpnAAAAAPDfht3yYtdsPUuvK9//D0MUSBof7dFlIAjT/NzzfmIM
AQAYe9Dq+HU2rvuzhxWHBQDA/xNUq2J554OFslO+7D8Hl/Vq2zQNOTnVoVRv
BgAAAABgGHRXPt7pYOqwMeH7EKr8/WfpzTowl6ebGTlfqpKRGmIAAPSxiiN9
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
+K1Hsrr014r7AJ36kQJPkcAKbLmL0nrM7HjFau5I5SJXn6XN5GL9msw+gDDl
okZv0DAbeEEfcPn7d2/JKaj9E5wcmoE6+GMFQMpC7lxwrsZAuhVkjvSAyJ4q
QFl2GuUzIw1NNy3uzFVpzOhmxeAlHO6zUvHPzrzGGR0s4KRym0Aa6OjixEWb
ALSnejKPQX7ktOj+7wm4PJ5gnNyEoieZVTQEqZ3FXDUA1JECF2jSAU7YgYMF
dKAwQBwJVPLXfeO6pfv20ORBAXmfN6S51ClYuS2EeATM02ZVSOyq2pHlSj50
R00JO+FVJa7bW8Z7SwvQdx2i52LyIk59T7c38Clf6fpEZj8dBiN8OHMuHrDJ
R8ikEqy6Uzyr98HkocJgJXzTOStvmWFt1Ikwy8Yog7YLq+ORgxbPnygO2sSI
3+58Nsxn6xIYeRm5VQwvLKeqqa4iJy2rbGTjGRb/rHMCRW6Wej4sWYX9ZjlO
MdpurGn0ybJLTltDXr1GWmUx6ttTUcejs4LUenszMpUDo2QdsxAtwFIAkJ7u
gkb1zeVQMI4C7qJWvmD+Ryb3ZkEGP/0Q2FXCImnDH6LNN52pqok2hIPbos6F
/ShyuKAWZkX/Y0R4VJw4ucK67yPkRXgJ9Aa6wYpwDQFkDAgHKQozOEM3cwJy
eG0K+FuabhaM+BWWYBRXU3XKVJ6VA3zyC8JOr+maCZkQQM/LYF0192LUFjBq
52U7ZGD97lsoDeP8U0+rEGAvpNC6s094ovekDhe4yAoQJJ0fsTwXMPHUdZ0A
Fq96+gH6eJTxmmv7z3Fmq5cXRQHa0/cI41V54Zyhjjxw0UAixr1PT8jhsVi8
xuVyjrlUk3n+pgHZ8/XhQlw3IgsWF1GHH++QE1TbmjRPjJQ2zQgJClhkL26g
FdCW52dkd/37vLGXyf6G3OtnfXa7e/oEpZV+J/8Gxns6BhdKUE51lV0+stt9
75GbBZ9hA54y1vYw/rz/fnd3z4PB1x5+5W2OLfDrxR5VYQWra7yWLzJebWG1
o3WLnlg0mXsIIUVZfMpvLYqydACk57MFsTyRolDaX8Ye9nTff/Tys2b4lQeG
Wp/dDA/0cnPbc+hU/KPPPJcijSbuUoZ+2qWIv/YeuRChp5tnnBbwNdcHrsRW
tLzSzvIZcB6BMJQHWeeF2tcJjbSAyAaFjW+84TgGqQ03ts01r2G85hKsgObo
Ypt8ddFJR0sZJkVxv/GF+7c7sr1g35CtN5P5SPTNVYSd8nVB3IYKw9nH4tU5
yQHADAJSs6pgfZ235vrJuwd1GDwqp7gXGSDVn9mMzFKR1Eeh2V8RMLPkWMKG
+Ab0cXA/MvchuRNFdKYL2nQlzB4J7trpCnTdD/Ql74bDNSKuUfWsn5kZuGcP
k67jVC694tTIo5VI8lRIyZcrmzyRuR/+TlG0yqIVALNyA3WeBdStgJD4sXcx
IGA2witwTqQFWhNdkTYlohVaQI9fYAY5OUaTs4HafmELwpeoYBnF6FtcFRK7
qnZkmZIP/XcofhdSYG/sW7gYjUypREbbEL2SOgFgKOfQpgOJKIfeMjFSdhZm
wsHiNaPfoFfxk3sfuMhDNfOiFqnspEaDxYEwDxVRbh93jIiZpxbVOLbIktqF
wdIqRdh+GaV5f/h91GY9bXlIp8hbXeOHp8+C8TfJBzXEFPzSeBnLuMTzYekq
DMQsxxRrvnjo3RUz01O1oz0IqT6KbiUXXfDN+sw5o7mUwbqME9lZwofpabSp
l3vAeYUY9R130Iwoav31bdDwF34csIt+5P7CI5JcpCjAxIcgC7OoiqG2VA+4
gmgOOVxYC7OAWSRMcLrAESubbQtCbUgHSHVnthhoKkFFbkRON41Z+YnBip98
iDLjGA1/TdOx3ELvNUdkNNLWHRulNHyrWXw66sg9O6g4h77ydI0w3ZHnoq4b
9gS9eoo6lOcIdQhiCcZJjSinNd/U0yoETGBIdLvOSw0h5W2UoyBGwOn8O/bT
byL/CDQjSUDFPeTOu+88VdgvL4oCMgYQpfeU8cA5M/w8yMAZiUPSKM0hoMOO
1XZlG01FI9cdM7HN+T6/YI8k7lIRkNtfucCPTtz308cLWWbNl4Gi1sfvhGgN
iE4XFjFmd7j2lqXezvzWeUpmJt6lHzWUkbXzT6xq6eluKQlx3ux2cLsckWBx
smyeb6ZNN4Q4OEQ/+1xze7c4Xs4vvbWjIsbZctu51Geff/R21KW7qArLGgXX
L9w/9bsz75AETsQ75Qev2gLogeeYENcdqJwzJzjHbYPtq0sjRfm9FkVZDpiR
ZB5JUcbqYmztQ8qaP8XsUBOU31HQ3lNyZfcW55NZz+s7+nrepByQJwg7hr3m
aSPAMXmgwBBk9pUvUmAWiZnnZ+FJbays5uz38qvqMDSMmCjrdK+FVQJnZ6ao
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
edw8G20ASO8CDaUY8umSVMmecFmMFp4dHY6VCy5C9TFnPuUe1RbHMyUKJ6zu
djarFfFzwXGrcOARL6p58GYVt6U3/bMs3A3s4WOFiLzxgfB7X+dUwX9V0/2m
vI20JQqbJtahHjDkR8cM8QKawQtXwYFRWSHGC7L1eG4Hu8/Ff/W0ejDzKtrv
VjlLwRsw3vgy48Lx/du2mBnq6RqYWm5z9Q6/9bDx55L3F+ititgghsMSjBI+
svfv8xRFmUSNokAVd4T5iUcgUCou2Lpe5R7nTamKsCWAXphHST9lqj3ByjSU
F9ql0apwFTzB6tTrBT8JaqWdqkSpXU95oweZGWkvvRcXdMjDycbcWF9vg5nV
Nte9xy8kv2j4yZtjjNQYc3HFTMO1Ja7XWni5DziwLKjoU83Grwi0JLkKzsGl
zApojiHROWLBfWHHn3aKmVg0uyy5L3Ob042+1U4ZzTuA9pQ9+259/VM/Bxfb
4Ix92UeKAz3Rjop08+1EPm/5r78hMLTpoc+VhRm3427FpeQWlNR+5XUSJ216
4GNF0d07SXGJ6Q+fVX7u4JGjf7Ll9b3ExDtPKtvmsqhp5IEPz+4mxsam5RZW
fepmr/ajdH0ovJOW/fTdD9RGxZmhTw/SktLzS9uXUrQw/a2m6F5eYXVT/zxv
+nh3XeHdlNjYpJyC5zUtvQueY9ODzU9zk+mfz3308lMH20kz/fNtStSVuMyn
X1a0xIIJxuBCdOLHpWFy8EvZ4+yk2FvxqdmPn7/t4G+SabLtzeP8wtfNPfzq
Zhj7VpGVmJhVUNEx1xTbeTHR9eHRvQclVU3D5DkvB0g9757m3o6NTcl6WFrd
NMQHgtB5QR3pbKqpfPmirLqx7ecED4L2FyX29yrekT8r+RCAodvu6uvdMnr5
O1yGCXJfa9XDzOTYW3FpOQ9L37UvoSmWA7Sp7qrC+/lPytsG+MegONP98Xlm
Ulxcyt3i8o/97HOppvvr8tPpmuTtT57G0y8a/2Pvvv+p/N84gJ9l7xVlFG0p
FRmVkkraQ3upPiFJe2kqaWhqUGiqRJFKJIooEbL3Opz79Hd8z7nvQ87gDLK+
r+dPPXLOue9zr3O/r/t6X1dD7sO1tkOsZp/KEqpYS5RnvwjcPHNIW8hd03L7
p05WoEevD1J+wmrzEm/xfrGvPkjOE9+3REnmq4i7ka8+5oncN9Z9vn8zjupp
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
1cJfqKU8fLYeizwUzQOelFCr1Z0DWFxLRWrIrqXWJoY2c72OnwvyWzxehUZj
aticflOlwLblr19l9HwjZXL5rBl73nVsZvQtfLOV1Ypn+YOzh2yf6z9bvqUi
fr/n4tmOtlZDdVlU7yCW9fk0CbVYevwEr89/eXD1NEMVhtoQ23X+p0OvhgSs
ttdi0NRN7LwvPEvP4vlWUNEWJiEqHx1b5+HqZDNqmJYSdaKyZu+nLumcnMfH
Vi+cOcZEQ3AGM4wDYkQvy5yq+6465BmqPOrY6057nUs9y3r2B0KixuxzNuS1
Ws18awo/Wt7y/eWZhRMMO16fVI2mBT4n+ygRVVEHlit0gQIAAACAQasyLWiK
NnVbqrU5rDAjYsd4s4mbDl1++Opt4vMbXs6m7XfOOx/8HVkTDVW/C34mhW0x
p8YGjGH7XordzXIKA2eZkG9WXhr0nRC8MfflvRvnj3nZGVPDHJrGiO1p5OPR
ipQL04fqWE712OK1eKSWoELk1O2xkgc8RHXCpU3j9JU0zdwvJRS2D5Sa86/Y
qfPeSx+34h4Vt+G2lqS+ieN5cmmdCdkFVdNyzZ2Xr/j/FZ/4vbyVd1tdUVyQ
k3p32UjqCTbDdnOM2EI5mSEeVB6FifPpjoOapsqSioaW2ryHyyypt6t6XvpF
8MbyCYestf7emNOVXaI69FOtzLy/1dmcSVed4hn6Q/BgtzZ02XD+4rU8nos8
KOcUBLlb8FZdZ9zur21JMq1VqbudjHkfbL02Wu76JJzS56c8rbSYTG2bA9E/
2h+ecpu/B8414y2IqTn5/Pu257xE1dek1/zNFRcbunUytWMMJv33KK7N6+TC
uq5GeV3ugjdZxfzVbypLPbtivGCvq0+/K/xEl1PzYpkZFZCjW6+L7vgnxQ5g
YfWp9/ztTFQZalY7rqdTQ1yiJnqeAT8+Y7XolqI1cOvvrB9DbzvIPwl2HFGc
eHiC2fTQVIWzXECqfrPlOY1lBXlfPz7eShZk5q/P8G2fxLNBevgEJ37G7LXh
H710kym+b9tL7BJlV5ZatscCaDTWvCPp7WtQV16Ym5Vy19eJui7TmRZH3wgd
+E0FTz3HUv2PWG6H0kROJaIh3nO4OnWm2Wx4LGmtZDrLeuwHovON8/3KYvJK
Th/n+aDpD/vL3U3m2kNnLPM6GBi4Z8s8C0FRHRpL1+VuDu+zidZW/s+Lwhco
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
SDtnxo96ke19JETSkH6e/yzaJLfQqpLn621mX4gV1sSjriS/vKn3ZT47fZel
Mr/iQ9gOsAoDrGXpBE3ryOseD6Mq7m+cxH8banuetgdz6lNOTZnl0xZeqE0+
bTP7eFbrPlAVvgvH8fqsxojwZtv6ppJj9jwRNUDEqU3YaT2WP/yIl5sxkNQc
/mZSLjhI8HucCj/N2tJ4JDXc4oWUfVHFp+zVW/dnqufLHlEqKv/JVk3eCCxy
0rrwtr3lZfVYzb7THtFivTkyf9mpZBYvp+XuTDm69PjNSd0OZXscRvD2vz9y
589Qps/c825QxvGIV/+POAAAAAAAwB/isr6dnKvVbTYxXcHmZmrj0O5I3cuj
dgpycx4IG97aD6MiikLVv1ihyQ9i0TQPR/cdKGhdMrd1i21dRxsuuVEu6sjj
Yl8Hbd5hlTWePm3GkWfFQsI1te+P6EsxZux42/thaOvvwVh0Kk1Y2IcqvbR4
PEkwnc51i8jVvfFZMmmKZetqnWRM9E1uq25hRe2yXnG+7ZF1Qeumej8u/4dX
xBTqoCZBk18QXtp3lRnVELlUTZImbRciwoP/4Z352b5Olk5Hjjuq8yqeZHQ8
B3qUqaLI7bwJSrRx+yJrhL1iU/TKcVIkY+qNTCFpPFRW4Co5khg740y3lJXy
RN/Zk6ZMGifBH2z0sS1xo+bdQfPZZ9vyRqjaSGez1a/4PXMKgtcp0AhdB/8e
CU6c9OtO0gShOedi11nVVFn86akqEkRbdGs0xCX6e8QBAAAAAADEojn/wQIN
yW4JKWMs9n3px8hXceDkn3fQm3coUSyTQUZwFIVVlvM19XPyu1ehp9dNbU8E
oqm7nAqN+/jpS1pmWb2AD4DbVJGVEnf/9Krxkh0RL5ryPK9rkXFJ2aV9l0GV
hGxsaxnqcTtL+MfblBuxe6N3SJqwbRbcd5UhSMPld4W3gPmZfs1ahaEwwSux
Y9YM9TMrcJu99fKr36o/bjVTJOk6bQ11679eszVZ/eoHfy3MKQw87JvKy9ag
Mm84S7e+0NLAGhE+/rrkEwZMsremrN1R5cFbbOZsfVLFqQtcY8BL76AbtlU8
9ROV9/KwxbgJVuaqJEFOcA6qFfbi1X7LdQhSYcsDYdVDXFbmcXstGsPoRMyv
lKH6lIe7Zlguu59aGb1/Or2jRS3vkXPNd4SUtH2+zfkhR33f8XJUqOILDloE
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
9Lz4G84mSp2frjV9W/jnHz1X8/1sgjqScZLOzGXSdY6/ab0iaozY7nDyrWjv
g6oK3WalZbU/pWboV7UtX265aGg4PMwSFsOhat+eOfywSJRgBacs8tz6qdqK
DIaKxSwbi0mzDwZ/HbwJVS2VrzeYaiw8JOIHPQg436+5O8ydv2jpsuW/OS11
mG8/d+mRxJ8jMEwh0hEHAPi7UJl3XJRoBE161n3Rbgm1lEet0pc3X/uwivMP
Z/iiKI3fLk6SbLslJ7vCN6PnlwqX/WWHOe9yi6m2+m2vXzqsl3t4zc9VLQ5k
oBcWAACMbFx2zgX+aLwu+Sgyky8mjNx7Ac0FD1ZbmY5Xle622x0YSuMMJ8/e
n9xLdQ+rLNR1mpnOGNnu7XU7nq6oYWBhs6vzU/rVBHVka/B3Hi+t6f6xkfsz
/aqjo0+uyHlH3ObsS84mpkuu5w/p5Q1VGL3PRHPGpThRBtD0C/tnRUlBYUXj
4B/In9/uOujrbAxIHw3ByWE3eEccAGDkoho+eBjLt16FaM+9/EN4UmX7E0pv
uhjL662PreBlTg5jFIXb/MHdSL7jEsrGL6n7BWTJ8+0a9NZNSdgfeCfknkV7
DRGp4Or3fXReYgEAwL8IqyRs6XjpbqEEJWOvhJGaS9+UF7TEbIKRUCZWO3pr
csIqebjczFj4040tvTo/pT9NUEc4Kidih8GYiSs8182f5/E0p3/3+rmsgrve
8118UgZp53pqqYhYO3PlnaSR3sSjTw15TzzmON5IRcF3H/6aIw4A0B9UQfA6
Bd7dHcbi0wLSOXrgfL29RlXK4Fh0e8B5GKMorS+e6rdMruPOlrTG3Bsff/fh
Z5VGrjaUa92K/txzmUJrSLlNMWvGy7RuQdF4V/povcoCAIB/D6rw+U5diW6Z
HYzJ6x5Voa8jn+hNUEeFpsq81LS8OhxcAACAkYAqveCgxQ9Z8Iev9aUx6+as
MXJz9sQ0dvzLsEZReOP8/FYZ0zuuIOnyJt6Bn1v37WdOmJuFKknKzVh/U4Q2
XFUXHTX5r6ixPwqxdAAAGPnqX+y3leyWj0Ib634bSZW/iNAEFQAAAKCfWiqC
5yrxJgaSkvah5X1ceXFZmUfnaKpZ7k/rFJcY5igKryIp7bSD/u9aaVLGzH6B
qQpTSW/hmbBM0RIxW2IOWPO3QLN0fzq671cBAMC/A7cp7eBMje75KEqz7nxt
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
/o+nEaGih/X+nEPbSGKm8qzbaQL6rnFZKefdVy+eO11PWaLrzGS6io6l/SIn
l/Vnk+t7yxJp/vrk5CILdXrro2XGWc1zXu/u7rp83sSx0jRJ9Zmrj7/NF97p
jZPsM6/1DTBUFoUPqDMMAADAkKJKgzaYM3jj5wz2haNGQ5xEjaIkHtfj9XBj
OBz/0vXzZ0V6W9JaL0gUlvXMCBlsXNanrfz7VqpTjuZ1vS9WE9dWLi3v9bBm
iPcKAADg78SrfDGkEcz5h5MHUNQjgsbMN/ev+93/mD94/daai1JfB109c3j/
Lu8dew8fP3sr5G12ed+pJdympC0migQpv8I3DReiAAAw4jXEnJzPuzdBqqy+
mDIcZSMjTlPh6+ObnJ1WbjofktaWacGuzXp86aC7i5PTcrfdZx5/rxH1G17E
KMo/VMXLK3t2HLnztbpbvXDj7TX6vIFJ2psEjvxr/JFy7+wuV2en5a7eAdG5
rH+ouuL8CrFV2VCFcX7e2w6HfupealQe5iHfuls0raOvR0sTfar0/dU1rr45
ffXTG4RXrgryXnEyImdwLokBAODvwSoJX6YjI6XpGlv1r4olUJm3VsmTpP6C
K/lD/zUNAADQP5yMBxs0eFkQUjO3Pa3GMo9XmJyyx87udGRawjVnebraxpuZ
+W99FljPP+AfmZZXmp98c6G2tOqk3Z96zWjtQtQoSi+ohlg3PVmCoFmsD+9x
36j+w83Npiqqs92vxGUUF2VE7VlgtdTNQY3JmL7t9cBeTmSN4V6TaLw2ca5x
o6MLMZX/8sAkbdvricNTrdaYE7zIwGDTjbSRHaVk5bwPPr1389pVK9ds8Dpy
4d7H/BERIhuZ478BAAbJj/jjZnKSNtuj/z0Vs6zCxw6aUgr6btG9954FAAAY
IX7EnzDj9QKjTVh0NW/I2278IS67KjP5Y3JK6tfMrC6+ZaZ/+ZSU+Ln4p+B3
1FSRnfwxMenT59T0jMxv/KdkpqV8zmmLBxSFbFqw8w2ro1eJtKbJVBvPmKJf
JbrNjzwmkqTKrnCRBhH+WRSFygxcrUAjGCpzH2R1W3/XRZ9aoEiXXXgotr7j
n1iFd2Yp8UqKF5/+OqCXExWr8J79GCZBKq+9ljEqYijVyResxhruixjOarXK
j+emqrXuQ/GQ7oPIc7Y5tSk+K6eaz97oE/Ao8vmTO7475+gp0CTUHXc+KhrO
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
BN7Qur7eSm08rxOOpMb6nnlKVMOLFeOkSOa0W9mdAxWcZJ95zNaNb3jCe1Hq
xxXn2Zc+CW9L078oSkt5zObppusuJ3bN9qAyLi9ddPxzxzEd8kHbIo3/BgAA
AAAA+HMNTw4vmmY1dcSYvu5CohgzQ7jstJ0dTVF2RdS0jTO2ttkQnlHX3D50
tfVHiu63i/6aMArVkLDdcoyEirW3z9Vbd+74ndvvbKWlqDHV80JM5YhcTnLZ
mfusVHnHgWF2KUXgkp+dfnedmc2BFBFa9Yr6ok2vVmlKETTtYzF9V49x2Vkn
7bVIgtSdf6W4x2fIqQ62V+ANBzdcFtSp1XAtP9eFbr39deeoy8/0y1MVGIqG
7nEizMDitbKRopESc8Mqur/xtqYo8kY70zuHlTgFx2aqETStI694b6op+9qs
6fsz+xiQ1I8oSktl3HZro8UHHn3sOtA6Nvqhh5X21ke/U8iGdNC2yOO/AQAA
AAAAQDhWYcCvpigh+Zk3Pe1nuVzLbE8CqHvgbtJWyaQ+47QYBysPO27zj+RX
obeuXfb1vXj9xt2o+KzaEf3uOOlXlvDb8tBtd8X2GKJEFb0+aGnu9rK4t7AD
Oz3Sz/eSf+jrr7UiB+Con4/nyTNIhvnVXvqUdtKSeMFBliRIpvmVzwIe3Jjp
aybZeh4xnS9+79QUJdZVV4Yg5cYYLA7Law9R1H4LXj5BQdnI9cl3kRp3UD8f
2cu17qSlX/faH86X8wv4TVEiuvyAU3BslhopYRdaTnGbs88tmb4nvM8mq6JG
UVqqP+y2Gddb1lrrJ3nly+8PZ+gGbfdn/DcAAAAAAAAIV/zQra0pisz4OYtt
p673je9cu1OXdMJAguSvAQ3PDkavBhBNy48Hc/nzmmR1PbvVc9Wk+s0xmX83
TcjRoQre394234BO0LWm7UusFmmNzioMmC5NJxndKmIE7VtF2GJ1XoxHw9ZH
UMERlXNzBa9BLsOk88Th+s+nJ0jQpLU9Il6cnj9ttutW700udvqaRk47bmeK
nFFDNUQ4KDNJxoQLid2iN6yQzaY0mvru8G7jtKiilwfNlFVtVm50srVyu/C+
2xhuQUSMorS82D1VSPMkuoLTy59d3tfQDNru7/hvAAAAAAAA6B0rdItZ29JP
RtP+8tse9+U5eSfmaPB/TjNfF4owyvCpubnagOT1mB1/7M3vEpvmwoiVFtN8
Ysr7jDtQta9cdGUIQnLJmTRRghRNuVcnS9FIps39wh7JL12wE07bS/DOEAnn
C9mCttwQ5GrYuueSGusTOjdFubKYSZDGqx408oIhP9I+xMYlZpQ39C8jiNv0
fLm6JEnXPfG2eziEXZ2dnCp4lDarMvt97LuMEhFP54HM6BmAETZoGwAAAAAA
ALrjslN3WCjx6w2Ut4cIvCVN5QevU2xrPquwILRY+IIaBlFJmAd/UBR9xo72
US+c2oSdthbb7n8XbdXNfn9sNp0gFCfuyeijEwhPU+61KSJEUbisz9vMFPnZ
Sj3LatoekOBuJN/6AP0lgZ0arNT6O+sShNSa6wV/EjLgNr1wVpfkNW95I0JS
yQA1BjjrmG94OshRlBE1aBsAAAAAAAAE4FVttDVFkbYLKRXcVYNqiHXTl+Wn
o0gsOpmK2+TDhVMbsUiNl/ShZLovs4XLZWX7Ok1eea57KYsQTXn+1vJ0gqZ9
5FVdnw9u+XHbRoZOMqxuCq3oafx2cRKv5wkhb7gjVdB4oF9NUZadz+7UFOWN
q44MyTC/ltbHLGPhqIani1SZJF3/9LvBy5Nif7jqvuu2GHuVjPRB2wAAAAAA
ACBQUbBbW3xEZfLRvF7bq7LfHZ3VNvJYzmDbZ9GGLHNZpW/vn9+1yW3VKlfP
PT6h8fmYA/LHqq4tG9/Wp/Tal8KHW2zst0dW96sxKFVx3VmXJEhTl4d9pm5Q
Px/PFaG7bHnoRn5fHdJ4VbCgx/1qimLcuXVJfcopIwlSevzmpD+b2U01hM7n
7+QfRmOG0sgftA0AAAAAAACCNId6mrYV63SbNtv9cQU3bRT4cRRSzTukvM/t
1mUGrzQdoz9z652Xn3Nzv0bfPWKnN2bq6qtfxTeH91+JyvJfzp/Uw9A3t7Ba
fqNQhMKcbn4826ZGJ+kKjhG9pB79wm2KXjlOiqTr9Gw50nmXMi4v5g/D7pJq
0smvpihu8b97nlBZ15cyCXLi6mCRJvH0jlUYME2aTjJnPyodNbVmo27QNgAA
AAAAAPzDa4ryZYd5e1MU75AaoY+tvuVi0DbnQ2fe1TKOsLVeS+XLtRMUtGxP
fav//bCGnKC56jKWbo+qMFT1DzRlX50szYt7yelvTqwbSEiK25ywyViBIKSc
fbOEP5/LTt9lqUwQsp7CZrhQGZcX8aIoNPV9kT97/vhXU5Ru7T6qPl5fs3zb
U9HGGQtRl3hcj0ky1daOro6so23QNgAAAAAAAPzDKvCfJt3WFMW+t6Yov1S+
3avF4I88lrC4LqzEgxW9dxqDpr73abewTMurfdPodK0DURirOnBcdho/skEw
lJdH1w4sbtDeY1bF4vD3PlJZ6vydx7e+lNPZb0Je6cfDddK8gp2es4Z5GlJ9
JvKbojidFWNfkd8qn3gq0gjVKULq0QAAAAAAAADEQLSmKO247Iy9Vqr8h9On
b33VWxMKquGNq54MKTUvvKL7ork8YrMCjTRcGliD9e5A/Xh/ykKBX0DDy/3o
u0OsQE3ZV6fK0kXoyMqOPzqTTtCED/ltyr5iKUUjaFpHXvfIRaFKb60xpvGm
Mxue/TAY3V85yWfm0gnSbF3YqOmKAgAAAAAAAH1jp0f6+V7yD339tXaklLQ0
3N9gzC/SoU3Z/FyEKa7st4dmtPWYZSgvCi8S3IaiNv6QDpOU0tyQ0Ng9VlL/
6aSBBMkc4/L252gqvhg56r/dWWg659iJVcr8ecfTtgprZSNES9VLFz2Z1uNu
seGJ8Ja/VVFbW19rjNWJfCFBNk6hzzxNgpBadSW3y3Glal4em69A551iEmPX
xg1KxU3jnbUGJCG1xq8QpxQAAAAAAMBfhCp4f3vbfAM6Qdeati+xetjWfI3l
uempn5Pev37g6z5Bjt9ZlqBNcDz+LDYh5UtaVrHAAEdz2ffPMSFnHQz4w1j4
T9Ge7nkr4m1KZknXZTiVE7CMSRCKxru/9qgW4SUtSNJIhqXfVyQO9FvLjxfr
pkw+ElnCrn2yZCyvxay80c40QZOFhWOVvfaapmM6zVyeJBgqy573SBnqjFP1
eIEyk6Ho9FJo9VBtiu9kRYaK+e4vHa1aqNoM/81zbFZtW2Qg07qruo4Bg5GA
xGV93j5JkWRM8ccZBQAAAAAA8Nehal+56LYuKiWXnEkbnjAKJ+fYLHU6Q1Ja
VkFRqTMFORkpJoOuNftcUY+sg6ac61ZyDBqDISElLSMr3/5MRXkZKYaEwsKw
ks4JEey4wzZ0glCetD+rRxSFVeBvxSv90DwULaANKQhB1X86MMfc/UY6/7Ou
ubFKn+SVyRidS+hfmUxDXvgakzGTVgQW1MS48tJRZNf65Qk7FanS8ws1CZrG
/ijh1UNU0dtz9nqK48yddhw+snvTshmWttuuvCvNumzJa4rCWHz662Cc8E1Z
ly0kaSoWB7P7P6sIAAAAAAAARrz2xp6KE/dk/J3rPtbTbRY0XufSQz07l7KK
blhL0wlSeUfYABt6/Dtx2XnXVkxZfDT2V8Sk4IEbPyuIbrsrTvSinpr0Ow56
8jpzzmTyZie1vN4/vfVIjZ1+Sli1zj/U91srpQn6jO0xfb8Qpy73U/T9W4Fh
0Ukl/PFM+XdWS/GiPQZn4gejKQqV5b9MkmAuPJYyUorkAAAAAAAAQKya8vyt
5ekETfvIq78yksAK3WLGj6Icye2xNmeV3ORFUQj5rY+ET1WGTqjKsJ0zbTc8
Ku80XbqlInieMq/HrJzBti8iFfVQZQkXbdWl1Cy8EyrbhzE1fL1gJkUjGRMv
JAlrjsKpfrJ0nKScvldKU3/jfo0PNkwgCYI5ZvWgdMLhFJ6006BJ29zNEaGp
DwAAAAAAAIxGVMV1Z12SIE1dHtYP974MAqG5KIUBvMHKpOL2kL8ygjQYGuMv
LDFf4Pu9WwSDqri8ZDxv6jRd72Rsn+cRlR991FKZIae7OjK/U8CBU3jKXoPX
pdYrWmhXEVb0vukMmsbeZ/0bUc1lJXmaKLTu5PgF16sGIVmkIcN3khTDZHVw
7V+Z1QUAAAAAAAB8P55tU6OTdAXHiFL2cO+L2LFj+X1RlEz3ZfbsLpt3fQq/
L8rBl+iLIgpOZrCH6eTtv7JHOqFyg9bwp1Tz5uw0CtsIOzN0u5EcTULNPii1
W7yFyr3nKkcSEmNXxwhtd9xS8WyZtoz+Iv/O+TB9amsmTBAMxxOpg5CJ0hCx
zZIhaX7502DUCgEAAAAAAMBIwW1O2GSsQBBSzr5Zf914Virbz4lBELJ6Xik9
Kk0a0s+Z8Wb0mF9LEz5fF1pRJbFHLY2cQr8LzhPh1DxzGseb1MNQdAwv6S0c
x067t1FbkqTLTz73tkLAa9RGOWtJEaTCxsAioaci5+utlQoMg1Ox/Qh/dTRF
ESVbpt+asv2nK0pOdX+KeBwAAAAAAMDfrr3HrIrF4Z5lL6NdXcIRHSbJUFn1
tqH7urwmbr8WnWSqru75I+imLj3AzmjG5fdCimhYrw9Y03npKMy5BxM6Wr/W
PTm8PqCjzwmXnb7LUpmUMtgbWtDLJ86KPTVXjiQUjLw+1gg7KFxW5iFbda2Z
PrkinrFUZcAK3iAhhvLKGLE3RaF+BK41ltV2jSn/+7K5AAAAAAAAoLum7KtT
ZekkXf/0u7+tHoFqeLlSS4pkTr+T232oS8HtVZIEabTsTs3fFjoSM1Zp5JpJ
5vvDC4VHH1qqYjaaKvFG9SjMDExrPZE4uVG7LC22JnWKWtTmJrxPrxC6nYbc
5LfPX3ws6at5bGPWnbnjVJ0vpArpcUL9zHh07cLpE0e8Vk5TYpC8zi1Sek5b
D57yOR8QLq4MJCo3ZJOGvLnPGwHZNQAAAAAAAPD3aal66aIn09bU4q8rbml+
vnsqnZB1C+gWBKi9vdaQxtA5Eo0BPX0oe33pzOMsURqyNpfGHl87c5w8U1J1
4kwby8lztjz9NnhxOaro5R6DMVMvvKvs7RFNWfdd589dsGjpsuW/OS11nGdv
t+ZYtND+LaKqz747X0tzvX8GphsDAAAAAAD8G7DKXntN0zGdZi5PEgyVZc+F
ZwqMQi2VMe6TlBUM1sf87tdBlcYdNZWTsvaKrEMiirhx2Y3lxQXFlfWDfyax
Um656oxf9ChTLBGRfmupiHG3GL/k2Bu0QwEAAAAAAPg3aMgLX2MyZtKKwIKa
GFdeOorsWr+8vy2MwqsSeeo5U2fshMUnbkS8efsi8NR6szFj5227n9uIGMpo
15IRtmeO46lhaOlDVQZ62HlcSfjbquAAAAAAAABAkJr0Ow568jpzzmTWt65A
W17vn04jiLHTT+Wz/8bYAlWXGRt8/sie7dt3Hj4bGJdR+fcFiwAAAAAAAABg
EFBlCRdt1aXULLwTKtvrXBq+XjCTopGMiReS/rrmKAAAAAAAAAAAA0HlRx+1
VGbI6a6OzGf9/mdO4Sl7DYKgT/OKbh6+nQMAAAAAAAAAGBnYmaHbjeRoEmr2
Qan1XX9E5d5zlSMJibGrY6pR7wIAAAAAAAAA/2bstHsbtSVJuvzkc28rev6Y
qo1y1pIiSIWNgUUIowAAAAAAAADAvxaXnb7LUpmUMtgbWtBLkIQVe2quHEko
GHl9rEEcBQAAAAAAAAD+vWpzE96nVwiNjzTkJr99/uJjSdPfOKkHAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADg70A1l+d/TYiL+5RRUMfiDvfe
AAAAAAAAAACMQM2fH+1zmDXPZcuBUz4n92y0H6+mv9Q7KKcesRQAAAAAAAAA
gN9qE45PULO+klDT8Q+c1OvL5EjG5I3hP4dzvwAAAAAAAAAAxKkiOcBl6eHP
TQPOG6Eyry5hEKTx6ofNHf/U8PW8mSRNSssjqctmG8L2OXnfSGka0Mu0lEes
nuL0KJc10P0EAAAAAAAAABi48g9nZxjPu/257k820lKecPXYyYgvv3JR/qmI
2j6GRmrY+hSzuwRnWirfek41XHXhY/8DKZz0K0sUtTck1FN/sqsAAAAAAAAA
AAPQlPfIUd/4UNQP8QYmuOy88446dBmTE9EVPX/anH9/gbb+9uCc/r0oJ2v/
NDXbXbEt3V6ruejN/Qu7NrmtWunivvXAlfuxxWjGAgAAAAAAAABixWVnHZuj
NW1zVL2YNkg1FL57Fhrkf2aD3QS9qS434sp6iZNQ3+67jVWd/zCnH7U59ckn
DWTMr3zpksNSnuS/2MJ0ofvxwJBnUU/u+3g7asnQZDRsj4ZmtfS2IQAAAAAA
AACA/uGk+S1XUnEMLxJbvIFd/eWh/7VLF056u83R15my7lhYYWMvaSGc7MO2
6kZLbpZxRMwbaX663VJjxpmiTvVBTXn3HUxm+sZ2jtVQhdF7DKRopITu7tAi
VP4AAAAAAAAAwJ+j6mPXGchP3fx8YI1e+9x83tNt2gy6/jzf7F6a1paEb1aV
MDj9TqQZPtTPlyu1Vdb65XcKjDSGbrGcvePVz+6xktq764xJgpDV8/o08H65
fyWq9P3VNa6+OS3i+VhaKp96LtvzKr+574cCAAAAAMC/GrupgdX7bW6Kwi1w
GOmo3Ltr5RiGZz80DNILcNmZe6aqEKSC++1iwXvQ8MZVV87E5aEoYZSC4HUq
Kksiy3//anFZSZ4TFQiCYb7mQRWny4PLHm+QIwiSrncqbrDe3ShE5b88MEnb
9npirfi2yU4LctPTd3qUgc8ZAAAAAETDqS8uKMPQzX8B9o+Ml1cObnScPc1U
f5yCFJ0gaFKKWlbz1l8ITet8K5zLzr++ympHSE3vmwIYAagyXwctGe1NSeLI
1uCys65utLdeePRTXecAYt3VJZoEQbfe/rqX5zU+2DCBqeT0oqqvsCNV6uug
PckttPNancv6tNVUgSAI1SlH87qOAaqJ26dJJwlC3uvh4P0msn9kf0pMTkn7
mpnVxbfM9C+fkhLTCwTPPOKyKjOSPyYmffqcmp6R+Y3/lMzUlM8F1RyBjxeX
6uQLVmMN90WIvcqpPubkfHWjDTFlbDFveAShfpbll/4cvAPEqa8sKakYpaOn
BvvDgb5Q/ys1hYsL0d5wGn7kF/dvAh2XXZWZ/DE5JbWXv+6fi38K/t5sqsju
8dc9LeVzTt3o/N0Wn1H2dQl/Car209Mbx3ZudF7msu2QX0Ix/kwOs9qi1LeR
j29cPLlrk8v8Gabq8sxxs86LXNcPoxBVHX97n+NkLUmSYCroz3fdc94vKCI6
PjUj7cObZzdOb5ljpDZh7uGE9hVE7fODs6QlrINy/+7GllRFetTVU7vcnJe5
bTkY9LYQ32eDgV2TEep/evuGFc5rPI/7x5SLqQqjDac2zEFV0nhVcN/lPFRt
xruIO34Xz5453dUZn/PXnqfywhQtFUEzZegkw8IvvVNxByf7gLUqQUi5XM3t
bdsFd1ZL0cbsiugj1tGUc91KXufo624XWlRhnJ/3tsOhnyq7XaKWh3nIkwRB
0zr6WqRyoQHgNsd7TFSVlmTQiO5IOlNSWt7KI0JgoUvVc281Jtn9KQxVj8CC
QdrVVqzSyFWGKnZ73w5K9RYn33eRnv5c35xmMZ6iFGcY1x2c4rcPb/mePrzd
Y82iOVMNNBQYg5LX1Jgeecl96TStMWMNTCwsJmorKevau51LHOHxKLF8OMN6
eKn6zJs715x/JVpSFuc//Fz+W0Xpv9f5tYhrn/Pe/eem+f/v2TciXydQ//vd
4//Hz+8/BPx37T8OuP6fBXs5v7ZV8uzgcvdraVUj+ywaRJzc94/9L505sGPT
qiV2lkaasgz6DO83/dpEzduDevIyEr38dZeR1z3wTOCqv/nhJhN6j+dIjlkc
Ufx3XxP2YXR9XY4OiA/0pTojxGuOoZHN5qC32aUFn29ssVZUmXrmZem/PaI5
nDhfn14+fvLk9iUmku2/zYwFR1OwhPxLcYoTbrlZa7Z+J8pqzd7v/6pQ0O02
quF7oOd0bYudH6ua0++4qtFJReM9GWJd8I4o1M9vgbvn6+jM2OMfk19W8OG+
t4mSyoJ9UbgzIFb1nx7un6Gru2DL9Q85pbkpD9dPVtOy2v2+XGwXxjWx+8bR
GQuPfxH6hVKXeH+Pra5izyufDh1Xp5zsY3N05+7rErOofH/USJKmPHHbx5pe
X6Qu6YQ+k2l3IEHozrI/HJ+jbLz7q6i/Vo3hXpNa91lSwzVu8G8BsmqzTi3Q
bPs4VM08nqaWNvf1mvWFDxaOlWh9PFPRaIX3hdDXn8saBvP3h5NzzkFH1Wz3
50EbAN2Ud3eOmvy8Q/Fi6ZBSn3FnkZEyU1bP7eLHwWna0xdOTviVs4f3uE/T
lGo7sswxq9/26L/zJ1qqPx5baixFU5i1+WZaOf8CmPP90AzV1tfSmHY8ayR/
g/zph9OSfMNVV46prOcYmCzG4jIRUT+Sbiwz0XXY96yCLdKHnHrz/yjR/i9B
/I+zrxiiKAUf/nPLgv+WIv+HoP33/ihRV9b1n/9rosT/EMT/FfgfTfq/bmf9
/gPCZRXc2247zsDpdmLlH+/vaMRJj7p++ujetTN12gMapOrO8IElJbIrv/nN
VGS0xUJsNz/ILGvs6xxgZQa5KvG+MulqExz3+gbHfins8zn/HqPg63I0QHyg
T5WJF63VJE2X3yrq+DKlGmLW6srI6m5OHKVZn38RqiHCUZVJoO7+78VlFQbv
mavMJEmGyhwP/6/Cb+twCq85TzCcOXeCXOt3J818/ZO/tdki9fPTYTttGU2n
8Jxfb7ExxNOMRtc5+nror4f/VvVvzjoqMTU33/n261qh4uVOdTp9mtdLMS0q
qWw/JwYpv/VR79eWnKJ7W6a3LpMUdeds3n/G79ati8c28ddNjKlrLjwI5nkU
9ia/I7G5uejV7qXWto4bj/kG3Lt/+/yB1ROUFEwXHHhbIOwWCaf6/mw5usGy
ICGP4bKStpioOBz/LOI3H6vwnv0YJkEqr72WMRRfllTxaXt1/lWh1JpreaK8
YumbffpSijNcLyaXDcENSk76zRUKDM09T8oH81Va4k/MkZazCfz653/8mh9t
mth295EmOy+0dBhvqbMid1i2hRB1HPxrxBfY4NS+3zFNnSQkbLdF1XacMY3f
LplL0vh3WqfeyBz5NxYH+OFwm167aLWHX3QWXKsa0vVQS3qwl6HiuDUXExtF
e0J95n9ZK7eFL/40ilKU+J/bHP9bhuwIhvQjivK/7q3//2i9hFBad8zIidv9
LgZVE+OzWK11YRVd8q9dMNTE7dfi1XW2/hlZEF4+wI+BVXTDWoYXjKFJ2z0S
aZhdzRNvKylFM68rsZWihen+XUb61+UogPhAn1qqXrsay0uNc3n1o9P1A1V6
2n4sQdM80nG7r/Cem7I8z1iznX/+orXxR1ovelu3pqDq9Pt7HQTh/V2V5v1d
lRi7Nlas96dgJODUJh1dqN96gOlypnsfZonyh7sp23+6Qtt9D1n322WDvovD
gqp+7DmZQRu3I6TzhRn17eoSBkGb6vmy9ZPLijjp7r5563bvnTu8t2/19Njo
eSehW5iR95iNGzy8vHd4b/P08Lr2VZxVAH8BqujFTl0J+qS1DztfGLNKbrb+
zZHS8khq4jYXPjvg4e7p1f4pb/bYuPNqfLeztPUx+903btrC+5Q3uXvdS+p2
FFpiDljThRW81L88NEuKZE5aEZDbaVRxTdIJIwlSxeJQtuB75ZzK3MTI0Ht+
ly/5BYa8z6zoc4XEbXrhrC6pOuWYkMdURu8cJ2d7N1e0dSWnyH+FEY2QtN4c
NjQLNKo2wlFVgr/4neKf0edOcgpiTtmazDweljU062ROddRKHZlxNmfyBvmS
nlMVuUxbxnBxwB+XuDYGuRqQ7Znb0wK/D2M8ocZv+fi2bIulPpli+6bnFAW4
TKQRhJz+/8/eecc1ka3/P5OE3kGUpoCIBUGQ3rtURUUpCoIFBUQEu1goChZE
sAFSFXFFUbALWFAsKL036cnE3b337vfu3d3f/7/MTBJIMglJCAg675d/7EJI
JmfOnPOcp3ye0Ofj7Afwa6mftjT1w6Q1g5/OAmNYwMEBB4q9lGnJvMqmRxun
76Q5WpXupyqm6H2M1wQnytDvMZZ/M5wVAntRhhv+vW/zHz6B/4qL//c6o78B
Pr0oQ5//MJP9R0blzxUr2P/919Dkj7NPUD2NfXcPOcjKmyU/7hboqmc9jdf8
JOBpNtdM8GnWnLNJGl6MlFYenHgJJbcX7XddbhV+pxaLrqIzw7fLmQ+P/oGf
m9EH+6yIOFHW0Bv5Y7SxIvXgvimjC/lB/UWf+Q4JtQ0Nza0siyTY/ODUZr+N
G6hs3Ljj+C8sbuqBN1d3bA7etgOywUODN+2IL/0Gla31tjY11NWcs5R3vtE9
83fw70lz7mYZeF3V9kjvw46APxaj3Y8jLFQhTQUpvYPFTbw+CWDnWe8F0NYg
YprxPc3+KaSv8uhiMfwcowOfmWwJ8os4OwIOt2BVGvV/Bts/PC0rjHHVop4R
xFW90u9XNbMVEfQ3P95lriyhYrbj+OWS51++T8b+TIUy8nLXCgVA1JBJYIQ6
sDWJemJ4QMylqA+kjHS8fVaeddRTiQDg8KpBKfeqG1i3TspQyy/77MVE5jkG
x2UVP2tivQsjeaHL8ETdeA7niZ4nBxaKAfJLwllqQCjD9zfOlwTEXYuE5Gmn
DD8M0JKSWxzJ+SW9l/11tVad7+TJJTJYfsJVBi9hHpTdMl2ns577u1XgiKe0
9vaX3F2CYPfd+PWmDrtLp681MPnFcUdRvFJYzpQmoiCM3os2JeDV9hZ3TfKN
OsqP6MkTcICEWXB2x/eTHaMMlfrOl4QNfo5PCv+A9fkhytCEEfdJ+sDyFA23
vb5VcPtt2ywIuU5icPqL99lQT6YEyUV7chumy9YE64sjtCUIiz0v8rwy/Hpv
/19SCv81WTzZXBRSz68dA7QPbb+B1Afx4UW5Hfk3gfjnsYf8zwpy7TEnDQk1
r8IvP6ZNwpXhnC3L4Fwpos2ex4I61EdubNfH02tXud+A0a5nh7zNvPYUtszk
crzvzczeLmc+vPoHfmagzJwFkoCoafpHpnUP7C9ynyOKA+TDcmmiRvUXfbTc
LqLuXqNdXyqelB5bo0skQHvcicdMNjb4teHp3aubViop6vokXCuurB1zwoC9
2fYKmBeFO8O5IcjiLOpz6hM2UtMLubP2cUFmekrC0dg9kZERTERG7jmYkPtp
ErX/lKG3R50XwEnVSv7n3vGz84I1UEoGTmZR+JsfM7kCrtzBiXgdZ6mSGMjw
1QZwwOL12WM/epdkIIUHiAuPlLE7xkk1OdstHWMeN8+Ck8L003EnfC4BmGse
xxI7a8sPop47iAprSwdow08hfYgxV6aaiBY7S9mNjKH6gg2WjvF3OR1SoKIJ
PFE/5TXaBgK2JXsuAAC54Mus2eCUoTs+KmKAuPONCbvq8AZl+MlmHWlp7W2c
XjDaft15jvL27DYe3oxUfTVQVWKu98G701gmQHp00BrOQgOWbsjhcpgk9bw8
ud7KPTy3aRrXB3DgYYC2lLha4KNpyZkceJugJ05Y4JzSNmnXx0hv4+f66a32
YKPv6X5NWNhQTCXw8aBw7hplpCpsuTx0KpN1u9k2i82HyQ0Oqbvhc2P39G0B
g5+vOMwTJSq6FfJUlAHR9vD/Fkn+tekCeNJlsrko4+l99N/5RD68KKPtf7jO
/UfL5Ztgz9RATfJKGaKq6YHqKdNEmplQRl6ELpWFywJV9hYLGKCnkKojDRXg
1V1xVz4XZRWwvSLV28zuYMEnzKzhyozeLmc+vPsHfmYQT53iCpaAL3XtjZlP
BACRsYJZLl4UCLDxiKP1rr2rZABggWNyM6v7ve/CupWxd1gHHPOiTAhlpGIr
vDgDRP0zbzAf6TRB6n57+UCAha6yCEehS3jDlDBLE7gwH+y+EW4iCscdlvtm
8RsD7b4XMZeAXx6Q/0POCcrwQ38tKdYmLNDj8DRYVwaHE3E7+mbcj3su+y/G
4wAt17PMth/5Q8FOO88Tbzl0CfzpQSJfRBdWDZDR2xFGeBxujvHhunEreWNB
yBwCQJRzzm1gst2GG4oCbD3SXnBRqhktDjckEJckvkDZQEY7Mu3liQRZj2I2
V8nQx9MGYniJ+SEVQrJtKEN316uJc85FAd+d85ZT8+fBCUCdWju0lZbt5q0E
T2iATcfsVZAqb/9Ujk2Eu95c8bW03pstBNEQvmjK36KAJ5hsuztNoWhYHxUQ
NU6dOFV75kN+EWePGPwLvS4JK0+6rWgHnIgCLPRM753Fq+CUDM5UQf501EEd
wIk4xj7lcXEY7f53wOJ/lq6htJF+TRC2F2WBCB9elGfH/hIl/u9ImcCrWs8V
/8UATswhuuynSvtEsjdhdyXKRsYjI41pZlKIKIpjPsfOWf3P00MsrUOL3vcL
fLU/CzN7u5z58O4f+IkhPTpgRcARzMLuMS+apLJ9FtSHeZ7pEUZpHncvCrkn
z91oV1Xfi7Dl8gBBI/YXpjwfynB5oOH6e2z9CzAvyoQwJOAmTkjDEApg94Mz
wXpzxKj74Rwdy407Dl3MvfOo4s3nhpZWZtraOvtHBL4jYEPRDlUiFFwTUXIr
bODbaOmvOLJQVGrTxWZBL2BGM/D62GJRvJTWtkrmOd9fdVRHFADETS4w73gD
r+P1JPAAUef4I4ZpQa69EW7nHvdm6tumzFIopOqIFQoAQfPwg37mn7/apS+P
w4l5xL0GmX7+do+xEg5HtIosY+ydw83Fm2zdzz/jXgtPenzQmohXR62i7Xu6
f4EIlA/TxOp7J1cne4jh8IZBt4Rl3oADha4KInPNj6P/mvwx1mKueVjpRJYB
+OVW5DIN8/h74zXqRx8mhSY/nNr6dLC3gFHlzcF1MPgya6elRUBu9fQHiXpS
12oBgHLkDcH6UwgAqXyfJQEn4jpB76fZANhywlEV6c2x7vRnIX2d7vNrNOFq
YJngy7NZPmtKBmeKAGsu+crjqQdh62tfeNvWwd+ubf5LWv3fJa3Ub/bbd/Si
gF//s1HzH4D413Lr/wRH/H4xj/KZf4dA7xMoawgQ0z/Fqo71AwN+OOeFiO+o
2SYKnBrXfD2QLopyCFUUBRz4mBbq4BCYNpkU6J+Hmb1dznz48A/8vCDyxYBC
WC6T2UMZerxJRwaHV9tdOJbYzN2L0nUn3DIgd4hqXl7frIjHqZjHjR/egdfH
zV2S2SvNMS/KRICfLqyBF2dgeUDBT+Xb/y6AX9+c2mgghgOUFnsn5L2auvM3
2FsWCOVUQE5ylrMqj/Q+ip0vYXLx4w/pCgbfpXiI4IAl67OZ5/xw0U5Dqn1q
EJjHKhAEdl301QFwwEL3C3BWD/lz0W5796OvMRcKZ0YaoHYARMW1pcypF91l
ezSIgLia3/1OltED63M2K+BxRIVVhU3QvjrccjvY3v3c04nlBJsz/cUByeAr
KFW0fU/2LRABFnpfYVnfKEOVYfryBCnzi8KLEY3UnzeWICwZVw42nv6XcbqS
y5IquC+0YH3JXsPFbhmVzLk3YNMRR8uz1VMbzuopjaRXee94xeZUpwzXXQt3
svRJevM9tlSw96bHXDGCrNst1mkzhSB9MeaaH2Nzwc0yyD15LkgnPqK+sGYR
uYv6ntAhAi/pkDubSxqnYnCmCHDgSfBiaGfXcDjN42n6U/afc8X+F12E+Ey+
pxfl3YU/pZg78gAify+z+s/hdLBtiNfni54vCmg6pbR8P5Wh6aXn/BpN2Jwj
Oh/ktbkbGyOF25bTRFF2PWC/Vf1fikJtTYOTn870XKwZw0zeLmcB/PgHflrI
vfmuSiJsscjRpyddJABR05Ab43ViuXpRSA/22W9Og8LiFFLNXjNlHH5eWA4j
Tkc9E3m7ozWO/JG8KOSBtlelWSdiY3OqOCbadVbkFL1kbXkH9tdci9sTdeDc
0yb2E3F/OqQCgcSSxs/Y0aaXN5IORUVEH8ksb+Ctmnuk8eWdK+cT90dF7Nl/
4mrJe06t90Z6GqrKbmacPpp2h6FyQG57V3L+aMzB07eaOGymlOH257ezziYc
2h2+++DJtPKPgrt2SV8//XLt7OG94RF7T+Q/b522yQEOVB911sQD0lZBl6bY
1U9+cdIFiVyIzFn9i0BN8TqLtqotiaiebelJpJ4Pt66mHIqOjKZOplcdjG/e
U3Mzs4Qx33pTfag2CasP/Gv16ZWyRDmdoPJ2lGTXry+PLRXHA8TF8U+/frkd
7eB2+FWPkOcOhdTXVN8+o414BLD39Z1rSUf2RkYdOJ9XxfAkgQMfci/daadb
tk3ZAdI4HEvCD2WkZp+1Cl50YcytFvbho4y8jjBSpNqKtnse9beWhDi4nX3S
ycsV9VcdXSQq4hD7nH2xIvcWuimLqtomMbvZBx8ec5bEK6xLrBSio7C7JFyZ
QHSPe4v2y5HbESsnCq+AjfcPGmpbxuU9rhyj4vmT8ttZkfrz1tydWj0QJDYE
nSaXbcxl2YuHGkrCHU02HrvP2oR0ukBMVqWVh+r4dGhMZsEn9+Q4yROh1qKC
in5QRno+vXyQk37qePoTTo82OFB3L/P0/qhdO3ZGxSVnPn7XTl2Xel5nnr7+
XtD7Pdrw8s7lM8ejwyMOJOV/6iN33A6bg+do8LNeM7fdljT49WsvTM1lPyS0
Pdf8yMfuXia62xtr31VS5+2N3Jy779mPbJThrvfP71w5c+xqece4gej78OTG
2aN7ow+cKnnHY695Xg0PYQ0OC0PddS/uF15IPJL9DPX0OdJW+6Io8+zJCw/G
/Rrs+vI050JcdNT+1BvVPDYpRv6wPitAFjoJUxcZnvqeD9f9x0nlH/PtIP3T
v5sXhTLyr536/3Dqbiyv9UfSXTJv10OT8gOIuidZW+YJF7Dzw8PsC4n7dofv
PXym5B31IEH+/Pj62cSjMVHxj9pQjITBzs+Pf8k6HXehYtyhg9RbV16Qdig6
6vDpwlrein8HW1/dvHbuyN6I3bGJv7ztIQ/cXa8BddMGCFpxgqYjIqmh8Oqu
FF7Aks5H+nj7oO1KtzPl02cPc4DU3VTfxbNL7bsyo7fL7wlv9iFf/gF+mC1T
COx4f/dS8tE9EVFHknNruhjryeDLgiuPmmj/230vYh4BIMjI6XteoAuJD768
EqwpIWkScLmBebfi5kWBRFFs0+i9oVpuh0G1VMv30JuK9l7wNWNJGqf93ez3
ooADFSeC1jpb6MoSkWaJeMMtxahmP9j/NGSZEluTPvLrxFWI+Ib8ksjXzGNO
GS7z04R16cWsrtGLPka7nh/bYIRYR3B0RnVHZj23EQS7yi5GrVqhPm+R885D
iSdjfDQlABwg6RB9b2y5B7uLE0I8Hc101RVEaU0f6R5IsPte4lpVMeSnIvYx
T1gendHOipSINXoqc/RdQo8mJUZ6L4OKYaT0Tz7gu+EdZaQx7+BaXSU5fbew
05dycy+fDLA19Ikr7x+uTdvmYu4YhXp8FhI9hTuNRQApu503p1pkEOwv3QDf
VsRRINghEfxa97JGIP/Ld4Iy9CUzdrW2gvwKj/Dky3k5Gcc3Wq4ITKkahs4j
52xUZNad/oJ8Hdq0B6TnLHTPp6v9977PWq0rq7DI78YnDlYt2J7qAwnPztM3
t1118KWwXShDHzPdtWWo5rGm1aHXMzefdvht4UGnxXOUdd1jEi/l5106sNnG
xOPUx0EKOFAd56KlbptI3yVHCrYux+MAGTnt4HSabDU48PGcn76YhM6uqygH
K+Qln7MC5PE4otxyS2vXlEc8uVC+QXefek+lNN0u9KCM3PCDQ3aS4nonHtJN
R7Cn7PR6NUkVn7gHQmrOg0B+Fe9MJCw89gjF0AX77/ouUFifzEXBG2x5GGek
QOSkkqRoEMOhI7OQQGJDEBIBF5rG/YJcf/+4lZq09W4B+moIC9Lzo3YEHKDH
j1LT5Bd8mh4jXjXmDj8RWrCr8EiAh6Ol/iI1GRE8EkRGdfFB5+LSoxZqVLNR
xTlof9Lpk1Ehq7SkieIysuIEkdUJH/mfnqMf7yb7WWtJy2q7bd6bmJIU7Wdm
4HHmcrgRfB14/U03uAzghLvtSPNFc1hagWeA5YEFyCeCA++y4mO3+LqZ6c2X
FYVVzwmLGAfh/tqCEMv5jLfGSxklP+c65rwYHkIdnHGjVBq7wdvBwnChqjxi
lwFEvVNVDOt1sDI/ac/Wjc4Wy1XlEcuGYB1F695OGf5yaZf9HBG6gYWTdD3I
0b3G9pVbElzV4StVP1A68YSkkH477vKP0rLfK8e8r9/Ni0Lu+dfxkD98PP9r
uuwvSQKKOwUQ+19gCpmXjOi6i2vhIBHeYPPNqcmgBlsrrm5315OVmGvtG5Vw
NjX5aKip5pKI6yWRUOsQWIKY3qWop/rG8Zht61ZZLdFQQO6qjC4j/DRSnRtl
rCLOeBjmrdz3lqt28UDD/bhge1Vp2WUOmw4kJCccCDRY5H4xJ2oBTfrY/9GA
gFsAkhoKjZqkE5NPmNx+67D7XIlFJ5587wopcm3KumWiOJy4suWZJzw6Ub8f
M3q7/F7wbh/y5x/glVkyhb5+Lorw0JOX010XmXAtP+9C3BZTffcrr/upI/Dk
tLeSpHUmTTacVL7fkoDDrwzNLjy82tRm3Y6dW31sFmvoOsZeqWR3eXDxopB7
ct2NI8Y8AOS6Y45qOEB+Uxp0LIJEUYx8S9GCdD+AF4VO3+3d5oiBoWyK2ix+
sHSftSiOYBnBqtvVfCtMFV6BAaJJOnPXWkQFArbP9yPyPkNf8nyXKirp2Adt
32SpiZSE4LjkM3e9vR5iNZ8AiK/ckErPr+iDA/04vIzH7bGRH+1saR8kDbzL
CVGHzQ68hF1O8+g3sPtWtLXEOJNLzSFl3DmovyIzykRFHC+xcPvFV8jcAGEH
JvWVC70u8aV+NdJyb6eVOlFkfkjaG8Y0Awdex9gYBmz1kKOe9wg6U7ePdD2M
1RLFazokNUx9ZnjD9U1ysFEIELRRD3Q/HsMNxSGmqkQxrbArNQyLFPz6PNzS
MqG0KHCJLEBcfvol7bZDhRWieAmN4MJf4pxMbPy279zia6ettshrV0YNV99I
VwnUcUZuaViF8JcUUjlcCgrfNqWIwhlZRUtuzIqwkSOKGW3MqB8zBfvv7nN0
21dyfbsREUd03PcCOSpSSK/DDajHT/W9ucXRbmaO67eGhW6w0NHQdwrLe8Wt
ex1l6D4k205cElfWweVlbAxcC1wspuz7ADVbg9xacHC1loqOq9+2sK3+joaL
9GyDMx42CdmdCbYnuapJaYZWosVBmnI3K8m73eSo6Uc98j/bsliGy3FUZzVr
UZJwIdOXVoA4TtUN6s9I83LLLd397rt1veyHtxWi5wle0zOEtOAPpq2DP/d4
DT9XS/7a0Vj77sW1cEtR5JkmLEAN9AzXXbadQx1zol30Y8aItz47biRHoK4D
kTf4WwcoQ7VXwu3kiQRNq6gHdXRvMNgU77FCWx2+EEA29Bqnx4qn3ZbU8+lx
6T0qd3856wbHx3GAzJrDN+8xc/dWgsM85KvLhFylfSI4UHsnM/3UkVAT2q+g
RLUq2K7rfJFsrSqnbeyxJdRbRwZZCPHG20o4hQB4NjyENTjMkAfbG75UP78R
slKR9kU0t47LuBt8ez/7QvLRACsNPO3uax4pg8YP/Fp1yFlbTn2lT1CI61IF
xJMiMT/kBW+R09GOLAd5yMsKiNnn8RDieJbwPxnJ/yY9Hb/mfM+KHgYjXb89
yP9XhO+fqlJM7hSA8FdwOmnCq+p7cVgbtmnFVce8GUID7LybsF5DAi+r6Xml
aixno6/quMGiRQuglRCgLsWMh7n3Y9nViyn7t9gqEZD7STALK4UHor8swUtZ
Ws3Sc3Ow13IJWhRU4yBH99fwm/w9RnNExZQtjxfXMlaDd6nrlixEJhKg431Z
YMlXJDUUxyzqDrUz9tSFw6zUJYg1gjnNUA2zRfQg6zK/vO96LRMzs7fL7wE/
9iG//gEemQ1TiPzhZrSBkqictm/hx7Ev2vn0iJnF3tKiCC0xQEF/7wdk5oBN
R+3m4QD5HdehKMbX1prHD8oqalo42YFcvChdd8KtApkiUF2PYjVFAWntrRX9
YP+rYxauKajx/R/IiwJpvyyBZWBFlNY/GGD9Rn2vEgykoSTHpRtz2eIag4+S
PCE5Mhn3YqbIK/l1ogsc+KSVSY40FvkuUbcJvfoZfgTasgMQH7qS0UG0LHSw
ruSgkSL1DcTtwn/pGRv//vNrFkCTWNQ2p5X1roy2ZZjD/nBFg321o6OV5300
FnqnP6zKCNKHLScR22hayIZ6JCmIsZeFVNT0j9wdyzMEv+a5KEBrl5p9cjfP
S9RoR2noSmUAUFgbX8kyPh13ds2Dtz+igg+7QLFwABtPuqgTpC0ypqPXQ2/a
Oi2AbqNWzraSHAEYabkdoKeIw8/xP/uaxYxryg9Rl4MeDHG1zc9oCzv4Ltld
BAcsXpc5CBn2bW+elJU/f9c+sTEG1kIiQkTbKTE2wPcZ62WQsKaYfspLloWQ
VP/8Rkbq+XOT53zq1cIXgmRDga1Z20zEcHgd1+TPzJOK3FO0WktJgjrKeLXY
EpqJONKQaipJoD5Td6FnarDp3bMHZc8+tk68PY62XbaSIcgt4dsC6S7boy4y
L7KQY4oaZaT386tHD8qff2zjJ4meZ0bbshyVxBlBZybAttMeC5b5Zs/ktgdI
bIg6A6UXhiF1DXB/Rgv7tW5aiGWCV4u+xXcGoFCgkGp2QydWyZBrPF2A8Bb8
0duRKyGtpKCbAlx2W+4mKXgpFp27oQzFv0d6csgG2vgAhZ154x0mg7cjjYlE
g3P8KPaQe1/E2FFPW4C65ZEapmS20Tu7jZHjPF7CHl3AhP/ddujL2ZUScD6J
iNllNpnT0bar1rLIed/yah3Lb6G+5Mh8Mgq5Td0Rv75Ld9BetPn0E/hu9J9b
PZ9+Gr2Heq0CGB6TGhyODFxcp4VY7Hr++ey2a9ftnUpwoZC4ehB196EMv4/3
WLpideLrbsit0ZrpJ8bnNt1VvF0BvlYoJ2Gidsy9lf9nIPu3+2ESs80xI7wo
DIbbfz8X8aeK+JgvhSD7fxnvJsgQI3dftZGGnxuibvwzobqWyY2Xgw2p90Vq
wfrieqaRG+s1jBPfcKaOZegoQ/d81cWRRXIftAmOVJxfq7XIK+M5pOJEfY6c
5YiIPw3Vm0odyHvHVskTcARZi/OVTL5TRNcL+dyN57imhXMDSQ2FHiuLcCTS
CrczNrHyWbUM8VqKqwU8/K46byON1+yVkMR5Uaf9FSy/HW6pyL10QSg20IXL
BW84hzN4ZCZvl98BPu1Dfv0DPMJ1Cs0AK/ob+LkoQkcKL6rsnPmWxQrtueSv
JwvleeINt9xGlh5yb56Loggt5YAHOHtRSA9i7YNYeoWArWfXaAM4KZ/E6rcp
qz0Oo0vo/0heFHCg2HuuGKrRQiF9OGSvhlgC6o5n2BsOUkZe7tCTm+90hkkZ
AOw87a4BP+xzo272gP2V0dZL1iUw9qSxor/F67LY7gv4qXCnthTkt9FySBj/
1JB7bnqqQtcptzjyLds5qKdsjyq08uCNt95pe3HcUMMm/fXAN6RiLiU+5UpZ
G80F13I1xAj+tgrrTzEdjZvyg2FDgmiz5zGvs5j8JWEV1EpAzfI4uzsIHLjh
Bj93arZJ7VMjVjb4/pSBOHG5f9405IWM7eZQtSa3FvY/BtTJf8ReHYC05pLZ
M6bI3Vn2kDE/PojTCwu1iW84y69BMnjFfxGAnxddPDWJIuTWWwnbV3v5xV1/
w3rXyJ8OWCO5o0IAL2mXzXfPJlLFaXdpAEeUd8iuZfcE9iR7QHnmBFlPRhS4
KctfCpJARBH95k77jRB5PJSqza8+DHUmxFrM0/FMn+qKOQ6QX59yk5S1v47W
OGO47ryZnEbsnWlrLiMApIf76VXefnlDcH/G9eYWkVfeDJIbaXUEOGChR9p3
GV7K0N11auJcI7njEOaCT36T6EodFnWnM/xfNeKBgdD2SGcVrIYYvLiOJhq5
6giTBnjfswPaCp53eJbBAWleAur52r3gM8sTSmssTmWexfFm9q8s0G7bnO2P
OIhkdMLYtUSaczYhPmH2LpbfyA2HbebCK9G8qKKe0e6yEKOl26/Sa5egPHn4
tzixDefYm4cKYnhManA4Qxl5Sk8eY5GVo11R9SmkmBqvH1g4CHbfiLBcuf5S
M200wJoUD6R4T90BPQjIBunZETvkwKugP0FxH9j/rzDDfzSsfqtlvTUzy4uC
0PLsD+cFDEfKP8s3gtwfcmg1UEWMHNENZxuEZt+DLZmhK8WgajLDpCesazVl
5HnIEsiLgtqQhbrCG8PxQTEVv4dfyc2lMfq6a2/S64VHGi+YScBuH3G7XJTz
ex/iQqE+EcEZrEV8SNdX6G9FzS5/FnCEKaQ34XRRlIjCHqSdsZnFpoJ3fcMN
l6zhBCccIBeUwbFd77RA/lJ6evMa7+DYrFrWomZyZYKrmLBsIJzEhjNfJnep
wt8uyd3XV6kpycOoGe6Z3OUxA7af8tZB3llByTBJ+GpCfNuH/PoHeIbzFPr+
VvS3gZpzZgpE6oO28ewH9get4dJ6eBeWYaREdpdEzCUAUMoBbyUMHL0o1D3X
0Y6lFOUbJPZ4fJkEXlzVy991JQfv7g/lRaHOgRgzJfj+sZTEkl+f87EODLaS
hXM8Vhxgtxspw+X+WuphOUy9CMH+Yu95YvDcdivqaM0OtfI+XDY2jmDTETtk
yomsSWKt5e99ddoUCgZRtwzvosbxc2ngl2gLOMtNwe8c+zwhVxxzgPcS2ZBL
dyOMNf1RXkNl+HH8KtgGwy9dc2m8oQv2P9tuAO0FREVHtKcVFVLlGS/qu8Ft
alE255H68ybQBjc+2Uy4gDVnPEXxypGF03GGYrSupt649SkCRy5QIPW2fK5r
aGnr6EToaGusq23sQj3sgr0tX6ivbe+AX9dc39Q5JdF/qg38PMFVinpzRfST
WfM3IAZrEvWg0Ribw5Th+35QwYj+mTf8HdMRmxkvM60tQsYgD3a0NDVMnqaW
rgG+ozD9b1OMIUNLxGlfBcozQv4YDVeLq1jFt9JFUfK26uFxROcDVXwOFnLw
lEY7lUxMe+nu+ZLLEp9/hyo28Gt54CIFh70P0WYV6XmcvbzOTn6FK6cVsOno
WJV37cusMHOT9dde0paslqIdynDcDRA3S6/hYeEF+5o+1zWOWyxam+o+13ei
mh2kr62fvzS0MhaLhg72MQS/5jjKEKmPbcrrCR3DQl7wW674Unc0RcMDPLyW
CQrp/R5jpOJDbH3KF7QHgREgxklrh74Y5zMBB4r9nWJ5TccCW9L9lsJ6mwv2
3GQXbR7M8NWGPwS1wYdgu+1ocbghUmWAFmQZvL5lKRL4tmITBxjtyLSD4/Ii
SuvudTdc2LByzYnn40qu7qyFD8gAcXnyK9Y3FsTwmNTgcGPgbTy8uVAfCpvs
RrapzYhSAYo7czs+ZG02sI0blwYzmLl5Mexnos5DtEUVheHsIORPcPMsT7Ry
c/j8eiP8LwnFPzI/sL/xTPSiUPla84eNMs2RQpT/zx2uRjsSFoRHgmAZKSz1
CWjdgJV7RR32PmJf48Cvha6K0BST0dn1hnUlB79krEPK25b4Znc35Hott00d
l1LScYuWRKSgv5fN/QV+yglWgfwkxJWbC9gVNdvzg5BKHEbdvQCMNKQyRFFy
62rSQu2tfc/U0By7fZlBS2mORPM4frW7pxFyf2erUGyg1s7+yc584W6XyNfr
vGoto7Ix7lpubm7hLy/ZXzDS0/ih5h1CTU1tJ2oZILm38XN9M7KbwttpXVMX
del4/7CQ+rbXL+1cJomu2zYZ+LcP+fYPCIfvakVTRmoO2KgCsMDdB5Sdnfwi
DnKSA6IW9OxNpOMzt8pWFjh5UcjdOW4mkSi9QsDuKwFL8NAWvw5VFOXbD+ZF
+TaYvl4LfmzFgy6NiS4ON2S6LFt9o65k43xIUFRyQWgF21i139m1aEX0O+af
95TvUYOfdDWb+IdXN9lsvDbegiJ3XXeCdQ4B4rJTlUy3BewtD1oqD1+JlE/i
eKH4kVdXAlWg5EORlQFZKGE+ul0BiJmH77ZfaBePKhLSdj9aWxy26qQtL38Y
mz6U4dqz65bA00wrIodX/wC5p3iNBqS8omTIFhSDaYSD5kzJZmj0fiyJjz1Q
WC1ASv5IzpalBFGb6y1TJ107RtftMCSLmFMlvqCQqy6GWpsaqMsh+XLUiSG3
cIW575H7KA84+cuZQNM54jTFYMX5y1fvL5mKrJjRjnx32BOoYnkcTSwIrE3z
EYMudWkSfQ7DzVwA3kvRGXx9dWyJGH6OyZFpULaZWYCdaet1oGpwcfNLbN7s
b1D2/hU4e59oH/OcLoryape+PK+ZA+OgjFRHGCoAROO0DwLVvoHdOaGG862O
f57ueuThssP2KssjKtGsM6rNH7Zc0Wl/5UxW6yf35tOavRI0HL2szL1OvhoT
jad+haodesiaT7TaXT7hsWXw/ZUNtmZ6C+TpYqFEJU0Da/eDVSgPHfnNpZBl
8xA1bJyYnIaRfcwLtmGECsQkCABx4t7rwlrwGbTnBEpAGQ67eXkx8zVfMJNC
6g5QgtcIbbdo9jb17Ga3u1Qg65ZUlbpGHjoF4Zesucye+sXozQEQF7GXPwi4
25LrD1orcwqy0HvRUt9UZW8x6yC35gfDsl3AotUZTy6sM/JIbR53mxiF7dLa
218yWywCGR6TGhyugO9SPBB5F6WVh1BSnr4WecLJw0R5r7zKi07L3PPGpcFQ
SK+hFRLuunK0nMfb3nvaTQ15TNTsk9FktGk03v5zvuhfQRdRBUZmqBflG9wH
WRpA1FH+dwytLJIBhVQTRfNPAkt8rwulq13vq0Qj2LknOT/wIdqRoe/ZQS1o
juH1N7HnSfZnbFwIW11yoVeeJ3oaBl0cn1LCED0jmO+8z/LFBj9k2CpDC6/o
XO9bzewmIiMnnJ/sazaasv0RV4zkfFt3y5WBiY/G1+70vTi8UBTRTtQ58Ziv
RWj0y5Pso1EhG9et8w+OPJVZ3jxzhfGFiXC3S9p7dl61luXi4hi9e2ytpfnK
JRrIrkowCb3NHpsceH3ey3zZXEmapLmC+hJL75M8f4RA8G8fCuAfmP2Addc3
wa5UsdXxNSjrC9ie6Aot7/LL9rynVWS0HneAO0Hn8FoXxsGL0v/wmKumXRJq
Wvjg+zPGMkQNR475kD+WF2W0dK8Z/GwQXRkVTGBrmq/+6pOvyXRjgCC7mqUb
JoX0fr+NHlvrbdLjgzbI4mwdEu1us/1JF9NfddzahjjPJTS2MJ83h+/GWCCZ
qGIqfmV0oRXKcGPBATdlEQAgKrpEFrahma9Uu8IDtiuktMxMtQxPVaCc8SlD
FWH6cOYhDm8QmM942vsb7u121KResJiS6eEi1qJUzpArE1fBeYAiLCnTjK+T
Fwp1zSPIokvS0a6K9HY3tGsTLGABGT7pP+OpTh2WpaZmfGFubunkvbcMraEe
F9qzA5C8R0DEnL1cne17vY/3tVyxYoWh0UoTUzNzC0sra2sbGGtLc2OjFfYh
WSzBka9vEpbD5fAc+qHQgdO25bW9U8sapmydJD2Ns4ftWNE16M0sBi77Qcu7
mErgU7ooyoezniJU02t9Fs/JMeR3l7YYrViuraIoKycnp6S+1MDIPwG13caP
yUB14nJ4U1axOtGCFgBtKwyBjkXUE9MvdFGUFqiRB1FxLe9CQ8P119YaG+rp
qCpQR1lWacESfTOPE+/5d4aAX59HWWq7HXg0RclPqLQ9Oqiv6XKNtdCVRveD
KHUps4yJjv/fFyQ2BK8bqj6H77FtqeRXp9zEaMv+Rh47G1FG3kWbzoGWcinX
G9zEMKHaBzEJrU0JpW0cfJtDn1MMxfGAiMW1CdJohbPgj6fzZij1GC6ltY2X
F4+n/pof4htCLW5FoIy8jTZVpvulNaMKmvg1VoY+p1vDIXJAzOAMW/LGN7rQ
EA5WMWWJsAi824L9N93niMKHCBSFXoaGG1He+w7rVBmGs9QgN8m6/Qdt9dYV
N42/oUxVMMxfRhDDYzKDMxHd51YvwHE+3nbRHyhN19i9zit2ZDENI3MBCG/3
HGw9Rgt/4+avusBpfRtp/c9qzX+WrqG0oSerzFwvCtj/H9/5cDoK8Fd4AdfV
kly7z2IOMhRaHhlCCNCQPx2xU4XfT9zrJGoLaUY5FUqeJGUISnCFZq2M84FD
bibrrzK58phL2Jg/t+6kiwbsRRV1OYjmZgfbE1zgC8NrHLwvcFBshP7Q4STV
7E8/aGZzin45bKuCrAP6AbwWnlOGPpwLNJJXsYw+f7v68+dXD65FuOrO1V17
tZKbevyPwVRslzy6OOovb1CQhtYOgqzDdVbJKRpdT/ZpialsOveSZZWYCi+K
APahAP6B2Q6FVBNtMgfeiSyuoJ3LwP5bXtDpGL8i6BZ97Ru8fypofdgV3tsV
sXlRRu8d89SdrywLoaiuYxybz57jPXBjp5n3sTec5uiP5UUBP57zgq0I/MrQ
O/A4g/WFWxfqhb/sp3wD2044zoMfaqssJrOEVHXG28AzjTX/E9H2gf5AZr6O
xYlylp5QjGJhQM+PqRP6SPM1B5p6D8EyEvKykgca7qbHuixWBHCimqb+F8vZ
lmg6XXd2wXE3QFpprnFALlqdOPghw5emsUlYeBzyioN99Y/ORa/RliUAYvPs
ApNetPKxU1NI72BNQqZsBOYXvEJCQipWJ1FXAPp1tVzZZmfitL2wRoDDWX+K
hxpAkFbT0uaLhQsX6VsE3WJPFeZKW5Y/snrjJdyKJzTPwO6nBRkXUs+fSU6M
2xdmv0iWbs+ruW07mJRyPv8xW9Ex2JbitQAKyUjZZnH00oy+TNto5HCosnMK
028Yab0AcQWqDCNl5GnQIigkqu2RzgiIdj07u2H1jpuc2hljsDJ6P4buvD2E
Kj9Fy+2Hap3onlhwoOKYv09sJqd2xlPLaHvpdnO9TedeT4/boud1qpOe9aky
Tm6C/mublixwTJkizSUhQSrfZ4lUeS9Zn436bIx25LkqI61MZAIu8JgKCH66
vEEaWs8lfVM4tnju/3B5lYFDyqM2Lu859PmMEQ9eFKEt+OPoLNoqj4dO2by8
eByD1zbpIiKDDLE49Pd/uG+hOHLEwYkqu+aghfM403NtM5KNz7EGvyE7EK5T
wOsHFjCPiOC7bd9zJC6PmgkMKckg7g72CBdlpHLbMlhcQnyRieGyXbksXqOu
FE9YWpatXY5AhsdkBmcCwIFffFRpaqJoSU2j96JNESHYZaaGJhuzWT697rIv
3JqQn64ryNEDGViX8+gHIfC3NN+/RWT/71gh5dGjX9H+/bbTFCmc+cduF+Uh
/edvBdXDEKIX5du3X1N9kGv7O+Qady8KIxUKp+mePnkvCqMEg6joeQstbkUh
vY00gnOWRFGCU4zHQUHXZMVS3xLmdyB30jorEeU8WTy3zTe3I4dxopzbDTS9
U3J3/ip41RWb51fOs0oS28W/3mUAp0ZQz625qOdWsC4rAGnsSJB1zmvi4T6C
XdkhK8RlLVJfjhUuUUa+JHlqS2lsvDtp7daZzZRsl7y5OIazg/V9jiS4zBVF
2iqh3qq+pwf0TFG0HabAiyKIfSiAf2C201dBayumaIhyX6j0PtyrAZX1CVjM
jsClR4/A/FhelG+dBVuQrLyF3lDLS3JPqd9irfA8pNSXVt7LUoDT/+6s5UIX
dgkRcneOswJik+BXbCpkMQKghEmkhR8gtzWzffzfVcY705oU4ue6b98T6GGq
KiMip2bgFbQ/+2E9151vtCSKJoYPiKKrWHwjf9pviSjLUXcN253RW1yNF0gR
pTRXuGw7kP6ike+TLxTxkeAWaWLUyNvtfTpl2QXDWUGL8by1Jpw8XcU7kCQi
vKTHL/xtuwwtREB3zRUuye5tt3fCW78IB2EB8sfCnZbOR958ndoVcvB90nI4
4imjs+s12s1liKJ4x6NmqmDwAPnjXlOlcecslBcgRa9zLY7zeCydBsCv1ef3
n3nDZ9GWQAyWph4trOYiODxw/0xUankn5xfMAMZUsMQ3nOOk1jhYsE0fWcCV
jVFKGNDf+OtdXzhKq8ho3sfMcOMtf0vnc88m0IwabcuwkCRApV5cU3qmYsFv
z9ssBTdi4O3lNCjDTzbrSHM9uTAYvLffhi6cCGg6nEIrTkRn6Mt5M6QvMKC8
Kw+tSy/YnkzzS8hty2J+geC7LfjxvDdiBqjaJLK6B8GOU26IuKKIx7G3LHOJ
viZDC8oijwsswR1woHg1XKHJ1i5HEMNjUoMzET3l0eq0c/faUvaMO+qqaEIr
ORGb41bAGjIevBKwCHZf8dV1ZXxFz2lUpxBl5F9bFjP1Dubt3z+uhwQ89grV
i/KtJOpvPPxWe25x96Iwhhe3aG3mZCt6wJZEmhwofsXmm+h9Qh/FII1y5JdF
1bCuY+QXcfZI6SJAUApKr2W5oe03QuGaMsipyJRUT64/Yo9kgADLNlxHc6aB
tZd8YQ1nYNGaq4JnosD98uDHyi6XQ105OFDmr03rJ+aGnsXHRO/TA1qiBHbf
Y9+zA1oiRMOgmz9ymGpqtkteXByUkcrtBqbnqnt/gTuLic5dexdFpo/8Kn6V
PVqCnPC9KLPTPpx26Iqg9BAA+wtooihoDe94B/OiTEjvo1hkJZ9nFd9G+loU
bqLtlEyvKR4t3rUCDqqM5U2BA5WR5jqBqSgKrh23tisitoy4cSpbHH9Mikra
pWC8X52RmkhdPlQtt0YfTc0srvjQxkvwbHwpq5brWdTILCPNlfrJC602xcad
uX77SW2H4JMCCSPi4GwE1D2IUSMfc4c/AQd+gLKUiVCF+NT0dmGG4VsARG1z
2/jxDIFNx8b0spq4vJAy8nInHM+V0Nj8lFXBAGy8t8/KOvLpVGahIFBPN8gp
BU3e8Ns4UZTFCc+nQpTlpwAcuIk0NIHawqI55RhFr1PTABpjOiD3QIL5OM5p
XQj9sDQQbDJpHy3n0agffRALawLg1dlbFI12PthuY3PsHrcsFATwa44DD+qy
U7Hgt2X6iUKKcPt4fD3CwOtji0XhDVnKpXAi/zll+O0+axWA5iVQ3pHNMZ+T
GdLzo7SmLURFn3toeeNDH88ayxBofgnmA9Qkdtvh7GCkVTHRhu2pZ+iBAERd
toUXFlpHjACRZUkvWK1uhlbbXLOjTK4kQQyPSQ3ORDDUKnCaq1LZK1tHGtPM
pZDfi9jHPGUxiynDTzYtlIIHwYS9bwJnxtRlOR1JZrsXpXzfXwTc/wOIfya8
4HY9UMcZA6QSjWCyHbUdNh+MNKSZw32TqcZz9C00dy7YesZbE8krG5dvz/ht
0zEHxBmCU9Db847VeTtyaydsmeNEPI8z6SEMvEugexQVduSgVcGQaw/Z0E7r
Gzme1ieGtuhxjoPDkB4esEamrPTCHS8nCEAM5kGy2GL+F1pYfgEOFHspixHl
3YumJWj4XZii7ZIXF8fQl7Nmi6HG6ENfLphD/UTEvVEK0LpTvJfvuYVy3BC6
FwWzD3mDLmoKyO/IQV1haKIockt28yopjwbmRZmQQfqqq6C/91n5wSXy+qcr
GI8DueIY4g8XD74ML8hgd952Y73VGWha7qO/RBrTM10vsgc1GjJpq66Gw2km
0f6BWx5zECMIbTfhCtVmM0FsNkApLBc97tNeEIwkGOPwqmM1dJPg84U1cGox
cdVhbjXyRPnVjPJtCokk9Id94M2JZWJEoy3F03CYp4w8RWKgAEEr7iEfqyX4
9aaHMmL9ctRCpEN+c9oDfql88GWmlOz2Zwl2ZptKmqYhnxN8d9odvrmcUk0Y
oij+jwZmuQ+cXJ/ovVhGQkx08ohJKMz3uclLyi4MouoJ2e3m6HY7veh1Huqu
jTEr6CoJRxLapbQgC43j68iNxxwR9QBgmW82jws0PSUAYGlCDfZWxDpbRuXx
FIunDJWsVRWfUDF7ChZ86jrjRn1PVbtTPFwmA/KbpFVIVQunanEWBmrOGMvS
tHhVLY+zN21H+5Ax34KGY0o3Wppw9haaHoKy6VGWFBeBd9ux3kOAUngBq03Y
c3+3CjyXxFU30dWoGDC0RACtVec7WIdlTEjTIYZJeEoQw2NygzPRm9cfsqGL
66JJcjEkcYhyLvlsiy3DwyavF82P9NNYp2O5xRyMbfC3xwW/Z2T8xvnf7/6G
tIqelRt+Taf//M5rAa0e4XpR8rb+g8f9P6Livzk1jEAYS/QSRqJpY6Y/crPG
d2IdT8eDaE1R5FFBybcnd9HzugHZwDTW1WycfDFLmwaGBBAOELfPbUUZ/5bi
MBWa+MbEqtqcoS161O9nFsbN4zRcn2YhS8vd2pnbzvmF9B7faL5oCunVzuXy
UD9ltpVhcpCr0zaoykkKxQaSlNXYdrle4EuZou2SFxdHw1U/fd9seBr1ZsLl
ilJaoRXMoUxwoGS9rnsRWitJoXtRZpN9+P2saDh5aS78IJuippowRFH0N92Y
TGZd/UWfBU7JzZ2dXT1CuMUU0mB3V2d73UVr+R/HizLSnIY0nRdXs3MyUFwZ
dHO8QVmfvhZek0W8Tn4Av5HfXvabrxNYiqpNSk+ywgEK27PZV8vBLFoPPpHV
8Ux5LIyu99Cv0PU8OQF+SUc6wUFyahwKPMGaZA/E8gREzFEVePgErE1dDfcZ
kt+Zh/IIM2rkNRyS6ZmWg3nbbMe3Feh+V7h/yzqvtUHxudWC+0DInw7azCPK
O+UI4UtNyAi9MIdToSI6DDU8ae1tVROVK4525rtBhZk4FYtjjJ41fW/TVpn4
5H0UimT+hNBON/D6jLJBMURRtNzTeme5E4U6LV8WnN63N3rP5IneezipsJ7n
clTqLgmXSEDLO5oZRy96lV51s+MHWWZ/PhDBfGihXEKz0DjSkLMZSfbAy9hz
krZjBey6sA5qYIGXMMugd4GhDNWc9LYITX/H4+GNfhiRCs3kUh0jhAWfDUTg
AtALKODtShG6kj00kGM0Wm+mkRuxgRlvWEZ6uCTKhJYaIulWzIMgIThQ7D0X
qQQiWIaXsd+M7hdxelK0Zg1soUDBd1tyT44zrPMAiNteb2b5Q9JDmicE0PW5
ymLJgQO3V6vAFwzM2ckeSaH7Pdh9ZQIYHpMbnAkgd2bZyyEdDFGTowav0gp2
gKW+2WxeP8bxmWC6g788iq7bO5AUYpE5vmUDgq23v57xnKHqst/Iv++FNFv+
WbKewv3ICQ4UuMgjGoHq++9NMtw2VmmOmqoBDlSEWyzVUhVDDkGX2KrjO26G
IjXUIsrr7rGdNRgZX1KaW5lP3INX/HUQ14yMTtgrth0ZHKgMN6Yp6E4mQs1Y
9KjW/s5c7p6N7ou+C5FLWuCYwqWV9mjbJQspAkDURWlrRRP+hYxPwS6YEz01
N0/ujxGKDRRzIPHuR4FLjqZqu+TBxTF8fYuBHz0raeD1CT1x6tYkF5TOlKfU
9+yAgfWJZrTbNxVelNljH343KxryosBbGxTSZY0sQNBFUaSCMlon8w3rqads
AoSsNt9i+Oz0lEVriBKp70aUcP1hvChgf46jDGL44IiKrnnMT2UXrasOVHjV
XpFgrLoi/iH6mjnSnG4BJ7IS5T1vd7EODmXkGeRnhi2EM4ilB7bevJhHPSyP
tKab03KARdYkfeY0rIONHxpYNTH60n21kZRIAw6Vp+Pkc3FcVQRH695/5nEF
7CwMkQE4NhMc+pi8ApL1GzN0qUfvEANnRkV21/N4W9P1GWUfnyW5ixHUdhcI
PsNbbu9UIRIWe6VzUM4XJoPvz5rAMQXZRWFVvDaeGyzcjlRxQq0DefAXDd4M
g/JUAeIipEfD0JecNSau6VXT53Buyw6QQM8bh6D3iRDxOoHWVgyDN8D+fBco
0IaSuv8NPttGGirAkYg4/oK5GDMHsPGILRK1nzhvHBx4GEiPArscrOLx7Nn5
IAoWkSBa7344Ck2b+lQ/y42JL/jxS/edXzOf+g5eJ95zucJJLvhoDMOHHf4O
BeDA7TWwu2DsSsCeR0X3WpFnBIpMqa49xbqBDtYkIbmmPLQighhtv2RB246J
LMUC0Id8fRpmZ6QzF+l4w+g4DHa8raiFdmfBd9veRzHziYhGxB7WVAqwha6A
Kr7hLBKXH+zsojkSesr2qMKOetG5vg/YtETIXdmO8NFYRNm3DI6zgF8rL2eU
9VG+CWB4TG5wJqDj5lbk4Mxox0zqrrhV+gX5FMrw40BEYgJQjihgd/p1n/FC
xFjmRBQiFlp/+ZVLlWyWGDujHVkOCkTeZwgaM9eLMvDm//TE/wHE/kx6PkEu
61At1LELh+i18jBuXBlmeDPU7E+z5Sz13Nrt4Bl71BP2okgv3IG4O8D+T6/f
I6bOSFGYAaMRA7tdWn9lgwTtt3nIctf5PCvrYQd1rsU70eqA0FKh+n/Z66qv
Ow85gq8IuokcUUk9NZU1/JlYdCUonsrWoIUafrQBUYOznGsnkXbkAFHvVBXb
a8DGw1CaFiSpzdd1zhqmbLuc0MUBNVBeYTZWQwS2nV2tRb1bSgax4zTHyFUn
XR04uIWFX9GD2Yc8MZC6BkrC5JBDSHp00BoWRTHN4E9bHoNvwIFbnrS8VlHn
A6zCnnSdcGDhqq1rF2tsSH7NaUtruh4I903ALXA9z17Sy7Dl6M7zwceJq90i
7/ZD5gGtoRsUaVp9Ga3RLenTL4ftjL2y3jElJFCGSjfMh/8Qyhzg6A9ntA/D
AQqh11grLqH3ITXl73O38D77mTfPPCTwIkVAD1iAHdc2L4dtVuXdN2kbU3/V
USNrWjY1Zbgqwsr23Evq9wY/p60RnWRzc7D9csAyAqDgeZhXQYFJMPjgsD28
d4uvOvSCl2sebrhqr4ykl4r7neepAnegOh7yhOPwy/3zuppvB1rYJJRxE+jr
a65rZyu2pZC+XAg2VxATU1nmc/Ulf+YB7UyEfnNbLm5YDDl50BpxzkzA/jen
g5309Uw2xd3rnjkVpLTQEqMv2HjAT9eD4NRWghV8OsaYTgZrczYYqYqJKZis
S67h1VmKAo9V3nRITw7bIqdvKc3QCrTACjsUUs0eYyU4FrPhQVdz1jY7j9hS
PkPISLkHp5gXjcks+Ogg6nnAnN03+Fid+iuP6MAlAGIqAY+hckLy++wQ15AC
5LmG8+FlF3qks+TIUYZue8E1lSLKG8t5yDQgd1+1kaY5Chz3VYxfMyhD70+t
td2VkegE+yXwUm5IgndfdaqX695K2IMh6G5LTwKE8nPyWaYLlAEyT2zcXCJV
X9nksOk6XMk1FsNduuE6+3mz63aYEh4YM0vIjRc2mm04BZkxAhgekxwcrpAe
xJoT6CEh6PPIjWkBTjE3EZ1/aFIhd19kznp24VnK0L316uLw5zoXQNoR5PdZ
wcbOiZ95iWyC7afcNRD/TFSRYAGLib0olJHfLoT8qSr/9yLLfxd9mmAr6in7
rxqBFy/KrzUPfr909dfKLyD6+IK/nV/zNx73t0M0ecIYWcdNml6rltsFxl4p
qC0x5kVh60g++vKin5lX6tsnBxDTWmfN1UFop355yMNu/62Wb0yZHkq78tg9
ZsPXaQpCkoFpzdD/N+StNnK+/Jb6Nj1Jq5ByD6hC/yPT5w5XpPk7BKYd8UI0
byWDL0FlRJShd8d93BLK+WsOy5soCg0K6V0UvFBDiVLb73LaDHoeRKkSAPRE
LLDpqP1cKBi3IYev64QZeJq2zXrFcmufI8/bZ2iXn6nbLid0cQx9OWe+hClR
vOvhXkgqE6+6+wbD9u5K9lrOSYOR00cIbkvMOPtwZk4hctVJJyKkJBn8gu0Q
NNJc4KkB7Qgyi8LfzKqmReDA29MBFiryikttd92tmx3+H8pwqa8GdDgWV/O7
z1b1Nlx3zpjWMFHENDgfVcIdeWFeCFImKYpe0nvZF0mE1XS/2P+NVHM9dKXN
oRra4z9QsM2A1mdHRCs8+9P4RwPsfXcx3GHBorV5NawPad+TfYgurti8jWWc
K17BfoZOOE5Ge2PxF6bttLM6J9RK22h92hfeW2+ALafc5wNQlRNLBLPv/nGP
5UYrlKG9YEliBbIXjBRHmPnE017ZUhhq4psF2+LdqT5aAE46ME3QdoAw5N6n
EWYqAF7RPaaobRIKQrx9WP1ZH13IjSCque3SW+4r2HBzSYjxfD0zAyiMSzQ8
P4EoCh2wKdEVsugIUotNTcz3FzVxGZzex/u1xYnmux6wXAmjiJ6Kinkcj40/
aJAbjjuqUZ+GdcnM0Umw585BJ1la0JOn88gMgPz61CrkueMUSf9OkKvPelEX
HTXbJOY0KrD1UdxKRaSXnzJfZ0wMYTByg5Y8Bm0IXifeCDzL24u2IWUC4mpB
z3jwijBcBDhAPii9jseWxzVpa6BjMCCpZwp1jOe8PXGkq3i7Ah43x/hwHZdV
YhILPvr7DdzyVBbj0tsCFUa7eXgPBevv7beyimIcz6H4nTwREDdkifZCUWMo
fYJgFMxThwvKyIvQpbTe9NLaQY/pQfn+ujtRzsscIktaKuN0Yf0N5Hj49f21
1Wae2TXD9MsQbLdllKtQD4asIuT9r2iKH1AIZmioOmuroVnkix74wmj2NjRt
tmez+9tJTw7ZIKIoTvsrSWDXrVhHy4Bsuiwb34bHJAeHKwNwWhT0xARdav8G
thfucXaLLqV/NmQw02uarrFHTAbeHF8KR6kUDWI/jZKbyw6bGfjd4VlJrDEv
GE6DITof4DUTjJmJvSjvUv8nSVed1XSZ6Hqu/U8CeTHw1658jpZDR/Gfc2Bn
C0D428z31xetLJ/86924P+UIf5sHUVomtgHo7jhAcXv2mEqJoLbEmNoMQFCP
LKCZMRRSa/GxNXqmkc+6Rj+d94YjTETngy9Hul/sdzHyS36JfFUolAPfTaLC
6hK2pHcK6R2tPzLscBjterTLyigiF8nRGi2JMqFNaaJW7C+0ynrKcH3eQQ9d
w13POqoQBV2kcIYy/PHMBuvN56v5vOkD1zYh5fl4oxBu/dYZo0H3EFK/kVtB
I7rliDhgqV/qbDXb8wK2IE0KFvlk8nelUDv7c8Y0zyfBfOd9fv98epi67XJC
L0rDNf8VG5gTxclfjthBGU0adolInxFw4M46XY9baKIonD9iMrbEzLIPZ+wU
Gq67aCFHwEtYZzHnEJK6n0ZaqSHJbMvZohIzG3LVKTdGb8HFPldnhXICZeRp
sK4MDpBZfxrF8INsM6hWF9CwOlrD+emmjFRtXyaLLOzJr9hz9satooor1qy1
1jUMuTdORWekMd+LFhWibjryRm4hBxOSUxLjdge5LpqjZO53qqqD3R4gPT1s
yygk5Gofgh+yg1SItK1QVGHJ6tDYxJQzCUf3+jsvV1LS25bysIfPXeRr9Rkz
RaKs7rbn9D0O/PohfYe92eqU993PtuvJMaqw+9+esVy6/i5NSYb8LutQ2pOv
8Fe+ZC1HFIrq+Gjn41iXhQQccYFZyOVy7o2hJwtl6OOFLSaSkGNE0SboTGUL
Sn4mOFBXeHLT8rkqrlE3WnrLArSlpLV3sJfocqI5dzOiHBWc8YH7bRn6XBi5
eWfuG1ajsr/y6CKabhsOEOdbwqi3KtFQjqioH/mKcULpfXc+xNZi3Q63hdAs
RW2gMCOhPiM0Ww6HV53KjlF8Qxl6HWOpghddfvIxIwrW9+JqmKnh2m1rluB5
60KCIWxID2iRfYj5rql8ZbhRhjs+Vb9+WfHkl9xTa5fTeoaKqbgkFdx/XvWq
uqZxEFWvub22oixvn/dSEfrniiia7D5X8KjiXdtEAs7k3hvusH7aYs+0JoF8
yIiKI1HO6w5XzRBBF3x0+ioOLxQBlFYe5MvB23x1I2JdSKo7hAQ76y5ZW/hp
bN8bfJ+kD528gPlWByoYvczIrZnBK6g3VG5h4N1mHs/UpCfHHBlmjLyWTeC2
7f5elhqysrZhhR1kSs+DKJo6JVHJ2NlRb4nzhefjA9mC7LZjaplo/WUYJ1nR
OaZrVxtr6G64UUszDEdaL1vBdaYEWbcilBp5epNB6tl4kfNapyW6dsfHR0X5
NzwmOThc6DvrRRO9Wey4JdBxqfH69AbGpgm2Jbgg/Yhlgi+hlAD3PqS1SCZI
6bj7Oi+cb5tWyccRgzJcQZ3DOChJ/hhPEsSsTOxFubsHbjcM/5Nb/DuX9yL1
/CvS4m9Gox+jTSAn72hz7p8ywFhLIPF5/xedBjb2Ub6Bv35+9q8o77+kJP8X
kAhOnAdEhVx3EBYZkNHZUTXO0BXYlhh8f5Yh7IyX0LD12RSw2kZHWWqewbZS
yLtFKqevtLIaK1Zoqa2KvddH+1jw04U1yBzT9rjIfohgSP3jAEl9l/W2ixas
PTlWfjzwJtFAmnZ4JUhqOftt3brJ20RTnvq5D6hH4uFHAVqIk5OoZuBkp7/U
Nx61lSzaN2r/TF3dXzy+l5kYpEv7CLzuqkNFZU+rXr350IQayBxu/fSyNPeE
60Jp+uqO1zANvVj4oKqmmcV25J6LAhe8AIvXZ/N2sWMMVJ+kNS3C4Q2Di/n9
86ljerbLibwowzkhK/zPs0ZymwpD50D3Quf4I2hT63u638CGo545h4+YnC0x
k+zDGTuFqLfv4TEnSUDUfs9YiLSzOivAYqVfmA8siiK56WLz97xAvmEUM0Io
GfFnI30vKKS3kYYKyoaxNWjnXMrw/Y3zJWW1/bnHNYY+nDagFeyg6kuD9bnB
SrREX2kDj4OP2Sy6vvc5m801iLgxAFElY/cdaXfZhLcQGGr5gPy2LG7S3zDD
LzPDjVTEx709TmKOnk9Y0sMvgulBgc0PT7noyM9d6r4z9kDkljXmK8xDEkqR
7b7nTZqLpqz6yoDYPYFmS4wPFLFnm5Ar451FcXg9v1yh5AdQSE15+z3VJakj
LK5l4h1x+HzRw9e1TR2DU5J91leZe3jVsjmQyS6mvNJpQ8SB+HMX0tPOJR3d
F+G3ylhVTl5/VUT2sxZ4MMDa/B1OoYU8ixWAtbAJIa7G3ouBjyu8d8xVHolB
yqH3SuN+DY0PTtpryanqe+3atz9yi7f5CssdyQ9bPpyGI0RE97i3s+V4P9pV
vtthkYyUsvXmyzOthnS0ozxm1WJpxeXrd8TuiwpxszR0DDxV1fYBCS7PMTnS
MMMu+GcA7H0RY6uBHDx10Zt9c4JclegqRiCKSUjJysmPR1ZaUkyEKCJtdZm9
Ppf85ZDNPABPJIqKS0hKydD+Uk5GUpxIlAm8MEEZ4GjbZSsZwqR6yoMt8dTz
KV4leoKW8ZNc8MdDrjzhRMARnZhLQiYEOpfJ0GIR801Db75n2rm6SyJU5bUt
bMx01eSUdBy37T1yeF+Yt7E6kShn5HXwEe/K/9Ax7VPq5pVS+LG9UkrVbOeZ
csT7gcS/kMtYYBZa8I593Pjebcmd12yhzpU4uaVR7CXe5J57AYvlkEPGIvuo
e+OyfJuyaXXEGo4pnSijCdbnbUEMD4AgZ7Yx5S3biZpfw2PSg8MJckXSKmTI
AOIcx21X68bZUeTe/FVKUAQWL2mPqrcz2nnTSw35a8I8Pd+rlfy2MgHr80OU
CQBewvKaIGL1E3tR+l79YawA9/HB/702AeVWUUb+FR/0h7vDn1oKLF2V/1Fc
8F97tz98A39j6RtCGf7tfND/pAlMrwcI/4iL/COp9Kf71l+f1PH6hA2+P2UA
iWoqBKV/Yck3E9SWGH11NWShDOMcicNLLPCMyKhBcqi+gR8v+kggN0xKyz++
fNzE7E1dqwVPaomN59B6jYFdGX66tARx+WXbzj1ntiFHX13bqis3NqMBMRWH
oGSaP5CWagshPtc0+iqrGjVHyLUHredxWN3FRYgEdZuT7AbGUO1ZY2ki6uou
KuuSzzyT+6uOwrooS5Mq2NVl6w9azRHwDAt2Fx1YpS4rrbEi8MYMEoiYpu2S
uxcFan5kZMHePZNCeh1hqAjZAGsud5PJVSdcHfc+5fQscfqISdgSEDPIPpyh
UwgG7Lx11FtdStHUe/u+/Xs2eVkZWQVkPGmphHMXAaJx2ocZdsET0fXsmJ40
0st7jv859o7bM5P+ouNROW85nObBpquxuwveTf6sP1z79Ebm9ZuP37Zy3qQH
P7+4lXE2KelMev4vDz+0CrmFLzjQ9KTo6pnExHMZOSWPqjsnXyxGHvjyqjQr
PSO/5HlTH9MaQxlqLC+4fOFizos6lKGjrlG7DOQBgsaBe8LMSetveBi/ddUi
ZQkAxwWC9Dyna5N/ssg9b8uyj+/e5OFoY7xiqe4SfRNLOw/frUfP5j6vnYzy
8uAVfyi1e6FnxqQyJ8BOuIUHsNAjTYA8fwhy3+fKkmsX0/NLXjTD4cu6S+vF
oUdbmDpaPz3k7vqqW1npl3LuvK6Hbji9UQV6CwyMaWC0Iw9qlQXIBmVMqthw
Gmi/ESKPxxFk3YsFV4MEP11cK4EjmIeVTjzfBF3wmT+w5aSTKiBicJbnE8zY
X1YVnktOzb1bzZ448/Xl9Yx7zfCPSR21j3PTUxITTl24erOqjqdQPBukluqS
S2eoe/GlAuqXZapqJ30pzzhy6OSVW6+55O/wtdt207p8ossJUhnt/nC38EbZ
ywb+bQLI8LiWVfCouo3zPsCv4THZwUEH7HqafyElNavsrSCdJ/obnuddyyp6
8KZbsMMF2HRujQ4eJ8Kvc493ej//nnH299xysnDN+q7a37NS/7Vvz7937vx3
zIHfk87+dvsZBTWOzxmklRWgYXMSJfQ5CVtisO114WXqQ3A2s7D0bRPTykAh
tT/Ku3jhcn7FhCsGG/Bqk5ldeP9DO/pYDne8Lbp6NjEx5WrenVd1TJbUcPPj
c0cPJ6UXve+cOQoPEIjaM0DQPFLGmrZAIdVEQQ1AoYqz73JtsxfuXpThuvMW
y1ATxcGPGb7S1Ekvbpxa3XzaczmXlnNcPmLStgRmH/LEaG/jszvZF9Ovl1bU
wbsXrZ0faqOumU9nTUnamdTCpw0zR8oRY6bRXbZHnQjILAqvhmf4UE+PMB1G
5L4PjwvPJx3bt2fXls2BgQFMBAZu3h6d+kYwy3rqgTUSZaCmCYlcWk8Ovyk8
4u/t7rY6LP8NJzdU3yU/HYKEwalnwpLdHczcpAvA4n4P+E5uweCVDqQpGKAU
XsBvOBVDOIC9RV7zxJVXxFTzLhX1fRhF2q+rWJ3klGzMC+TuG56qYlAr9mn5
vlTD1VSGoGp1UqDSiR8SWnEuQFyayB6GxpguRpoLvBdIiqv5lU22Q80sY6Th
ip2SiIiSYxa6go3QbQkMFCDRoSWyOEBhVz6rUUcZfgIVMQGK4QWYVBp/cPei
NGb6G/rloK659E5A+BUBu9x1PLnEKbh8hNBtCcw+5AVw4I6PKhTyXbYxF9tQ
MX5E+q9tWoLHiTgfgDpjUkYqw0xXF/8ojbMnydCHUwZieK7mNFibt93JL/1z
f+tJRxVl40NodXNgS/n+pbJqm85zbCnFLwxdwfnOZwVMbsGYGJo4Hl7CMb91
ZkXKfhbAnuIoSzk1t6x3gpU6TiPkTzHmSjgc0W7vs8k9kSMle0yJeJWoIv4a
VQgE6XmcPRGvHJYjeIP7Hw2wLd4Faiyianl8plUd/my0PTqkJy1mEVbyE2Vb
gk3nfRYRRLUi81DrB4VvS2BwYDBz8xJYxPsDy40gd2XayhCJip7FmFQan3D1
ogznhRoGXmBV82b8aUWCqxiUfQ35/LnEKTh+hPBtCcw+5Im+p/s1ocYr4v6p
Mz2dGANDAChDpb7q4oCoafpHKBuzvSTcbE3GDOpC+z0Bv2SsEx9r5YkCZfhp
qKVvSSdI/Y9gXRm0lvGkD7dijDSW7brCLvUuOHTZfOKqw6+xdWmqoHfc4Fd4
E0MoUEiN13fbLdDzL6iZBVHX0Y5MOzkiDj9vIkkTXt6qyFtDUtvtfPskclp4
AewvD9SRVjKIeT8L82ynCHJXjouSCA5QDruOeZa+O6Tqq4GqktqReWiKHD8g
w89Oe8mLzN1wqhLNWpgSWwKDEz2PYjVFgQUuZ1k0jprzg+XxRJPQ21hgnV+4
eFEgE3qpCZfGyuTuIi9VMarRax/znMsBBfUjpsSWwOxDnqA1dAOIRry2RsXA
mFVQhkrWqopLaGx5MUQZ7X4YYm577uVPFPnhAmX441FHdQCHU7FJ7OCkB97z
5FJm1ei3b+23d84liHvH17AYe803dxlbh+a97hXutdFFUbTYi3YxhAWj6JUn
kQoMIdOTGWrlsi39w9dZYZ+MVCZ7QoXbIlZZ/EincoD89uJaWeLCo2VT2seK
XHXaXZI4f2/xhHLoPyyDtXlbnCwcN8S/osts1mf5y+IBdasTmGE8Mxh8kuyj
Iqd/oGgCbefZz3BVur+6zIKgcy9Rj+dTZEtgcATsyt9pKiaivadwbO6Ndj/e
bjRHTifk8U9WaCYUOHlRSL0fruy0kiJqxRS3cB7W0Qf7LIgTtXdE+4gpsSUw
+5A3aKIoUJEyFqzB+DEZrTjvqyqr7bk5wH6lRfT1Tz99Hgq58sx6HU0tDVVl
BUSmXEFJRU1de3nwfU6FTmBXqo8WkU3m/RtUejMs/AUW7Ez10YbUDxXWlmKi
KFMFWJcVIA8VvcqH5WJFr9+BkeFZELkYfH/BebG21nzVOfTFYs48NY0FensL
OibztpSRmljLeepWxz8L1DGZF0Zab3hpSK0IzP2JMw9Hbu1EWg+LbTwPZZJT
SO9jzJWJchapVZh3euYw/DJz+7K5OlsvoLsXfgTA7rvHveYvcDxVyjHpfUps
CQyuUEbqroY7zFPQ9Y05f+v+g6Krx3yMVOabbCuaDemRMxB2Fwdl5OlOU605
8rJU5GRlZWTklDVszlehP+gjjZkuumtLuAoOoDpqpsCWwOxDnhjtyHOdK4q0
Bf9hV28MjG/f+prflJc9revCivsEYaQh3VJWZNmG6/2QklJP79R4XMGv766f
SYg7vH/bWhN5ItwuU1zLa3vM0ePxqQV8N9jA4EB/ZcG5k3GHY3au15sjivQz
1XPeuv/I8YSU/E/9mC8dY5oY/HDJQVVpTcLrKXFygG0ZfkvmGkQ8/6klsEhP
j9oRoaQ+nRNPBiik9psxtjKSi6Jyf5L6kdlE99vrQVaWxx5MaXbWd6MhJ8zB
N76yHTPAZiBgV+3DS0kHIsLCImOOZ9592/vzup0nC3d12dnwEZh9yBNd1TeT
448d2rfL03Ae0gZdTttp177DJ+KTf3mLaTJjYGCMh/zimIMIYcGh+1QDb7Aw
zPXIgymJUwx9uObn5ODs5um9egwvz1WO9nYbDpbMePHNWQL505kgVwcn1lF2
dbJ38Nz/HMv8wZg+wMY7uxfOWZnwsFPY7zz66qKviopr9oefXV8B7K2IW6Mv
hRefv3yl7jw5TWO/9MeYZCQGBgaG8Jn1XhTMPuQJ8suMbY72Tu7Mw+Sxysne
ziOpFEvdwcDAGM/A+TXzJdSCng1SvlanrFp1/DNWUI+BgSEERqou+i2Y73a9
RoheUrChZM9SNfNT5ZOqOfqBIHfXVz8uf1xd14VVTGBgYGBMEbPei4KBgYGB
IWTA2sJdC+cs8QkNcHIMvln7s4d3MTAwhMfou/zdtquOfhKSQMpoR+FGq7WX
XmDxIAwMDAyM6QPzomBgYGBgsDPU+eX1my99WMEsBgYGBgYGBgYGxjgwLwoG
BgYGBgYGBgYGBgYGBgYGL0AuDml5Y4+AzZs3b92bJdT37r2dtJ36tpv8bFVE
MS8KBgYGBgYGBgYGBgYGBgbG7Ab8Wr5vwxpEbHTDjotCfe+ewsP+yDuvWbsj
/73QWxtjYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBg
YGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBg
YGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGD8//bgQAAAAABAkL/1
CAtUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAL5SQmng=
     "], {{0, 257.4}, {884.4, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{120., 120.},
     RasterInterpolation->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{520.2000000000002, Automatic},
   ImageSizeRaw->{884.4, 257.4},
   PlotRange->{{0, 884.4}, {0, 257.4}}], ";"}]], "Input",
 CellChangeTimes->{
  3.933304340090868*^9, {3.933307423791626*^9, 3.933307424540859*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"e3a86057-3cf2-504e-a265-36f6983bd964"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "K_Y", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
j2NTQJITJ07oWYxNcUWHVsuWLSX2C3QmDKLnMWUiBoD/dubMGf0vZ6rtxYsX
165d0zAATSDfZS2Q7wLbhnwX2AnkuxQUFRV14cIFraMAMJKq+a4aNWqwU/Xo
0aNq1C/67bff+JXB9MG73ltzvosULVrUIXMY/MePH5teG8fmfyxdurT+F7e+
/PJL8UK9Zs0agzVPnTpVLDJ9+nTFgrZyKSkpJ0+eVOPTVLA3ycnJAwYMoPNr
8+bNGoZBJ7uTk9OsWbPs6qhGvstaIN8Ftg35LrATyHcp5dKlS0WKFMGjC1gv
9fJdYWFh7DwtUKCAGT5PU3bwrvdWnu8aPHgwq23OnDmm18bQDqVeKtU5e/Zs
/Us2bdpU7t1k+/btYpEvvvhCoait3pkzZxwyU7hv377VOhawYi9fvqxXrx4d
S8OHD9c2kqSkJHaJoNM8NjZW22DMBvkua4F8F9g25LvATiDfpYgtW7Z4eHj4
+PiEhIRoGAaAKdTLd/F59/r376945VkpO3jXeyvPd+3fv5/VVrFiRdNrY2bN
mkUVOjk5hYeH61+yQ4cO4oW6UaNGBivnATONGzdWJmibMHv2bNomZcqUuXnz
ptaxgFWKjIykS4FD5vynlvBWVVxcHEu+NWnSJDExUetwzAH5LmuBfBfYNuS7
wE4g32U6OsscHR1z5859/vx5rWIAMJ16+a7mzZuz83TDhg2KV65D8cG73lt5
vis+Pt7Dw4NV+Ndff5leIfWRS5UqRbW1bNnS4MLBwcF0eWSt038EBgYaLMJH
BmNatWplesy2hM5Q2iz58+e/d++e1rGAlYmNjWV9h6ZNm6alpWkdzv+Jjo5m
o/a1bds2NTVV63BUh3yXtUC+C2wb8l1gJ5DvMtHu3bupc039OHqA0SQAsEan
T59u3759qVKlqlatOn78+Fu3bmVdJiEhYd++ff3796dlaMly5cq1a9duw4YN
r1+/VikqlfJd7969c3NzY+fpjRs3TK8wIyPj+PHjEyZMqFOnDm2ZihUrDhky
hL/HpfjgXe+tPN/1/j9jbTko9HUnbXxWm5TkFTl79ix1Y1u3bn3kyBEpy/O3
AZnBgwebFq9irl69Onz48AoVKpQpU6Zz586//vqrlFJ//fXXrl27kpKSsv1t
WFgYXQp8fX1nz54tPf/AvlEtVqzY06dPpUYPdo8OQrqk0JFTqFChV69eySpL
y9+8efPkyZN0MK9Zs2bmzJlDhw6lQ7du3brly5c3ffrX+/fve3t7U2w9evSw
hLfOVIV8l7VAvgtsG/JdYCeQ7zLF0aNH3d3dqfXJkyebv3WwUhs2bHB1daU+
Qt++ff38/Oj4oaNIJ5GyceNGusXQr0qWLNm9e/evv/6af6OXL1++P/74Q43A
VMp38dd16EQ2vSNz8ODB6tWrsworVapE2/DLL7/Mmzevo6PjkiVL3qsweNd7
6893jRo1ilVI28r02nr27MmOw+TkZNNry4pn55jg4GDpZV+/fn3r1i06QXbv
3r127drZs2cPHz68Q4cO9erVozMuICDA6Kioj0+nbZ48eeh8rF+/PottxIgR
+l8gpJOdLVmnTp2sv01JSRH7U8uXL5cYDBWk+zIVKVeuHB2cxqyPRTpw4ABd
Jdzc3OiMLly4cJkyZapUqVI1ZxUqVChevDhdRb28vJydnYcNGyarudDQUKrB
xcXF09OT2qV6qFG65NJWFduln/j4+OTOndvavyHt3LkzHTO0vrKel6KioipX
rqz/AWzZsmWmhxcUFMRqGzNmjOm1WTLku6wF8l1g25DvAjuBfJfRQkJC6AHY
IbNPajnfBYCFu379OnU32rVrFx8fT/+8du0aO4AdHR3Z5J7v3r377LPP6Ccd
O3bU+UKWv/dC/e7Tp08rHptK+a5vv/2WhW1i9iYuLq5r166sqvLly584cYL/
6vnz57RJ6eezZs1SfPCu99af71q6dCmrsHjx4iZWRcenp6cnVTVy5EglQtNF
u5J/jkr8/PwkXl3phKKnev23iZkzZxoX1bRp06h49+7dqe9P/0xMTCxSpAir
U89LbklJSdSZZYvRRsu6gNjtJdWqVZMe0tOnT/Ply0elatasaTOjHvFrhXF6
9eolq7mDBw9Kr5wOy6tXr6q04mbAbx8//vijrIL0cGVw41y5ckWRIHlmnnaN
IhVaJuS7rAXyXWDbkO8CO4F8l3Gob1WhQgWHzGeVly9fqtTKvn37qIOGZJot
6datm4eHh3jMlClThh3Dn3766du3b2vXru3l5bVp06Zsi/OF27Ztq3hsKuW7
KFQWc9++fY2u5PHjx2yAF/LZZ59FR0frLMBelXFzc+PZkrx58yo1F6S157v2
7t3L6zTxerVmzRpWj0p9f+qMixf2adOmSSzIU8d6nDx50oiQbt++7eLi0qlT
J/FSzNOqDRo0yKkg//Azp9vo5cuXxfDc3d1lBXbo0CE2NtqoUaNkFbRYsbGx
Bw8e3LlzZ0BAAD2+zp07l7/MqSNXrlzdu3efMWMGnZKBgYFBQUG0NeS+cEjX
B2pu0qRJfIA7HU5OTk2bNqWDkC7IVv1y140bN1ia+pNPPpFblrbS6dOnaSNv
3ryZTn+6nrO5WTkfHx+lrrS0B8uVK+eQOZOvel/uaw75LmuBfBfYNuS7wE4g
32WcQYMGsXYlDuFiBHqwpE4WNUGP8So1AWYWERHh5uY2YsQI8Yc8hUW7u1Gj
RrSAng+4+vXrxxamHsezZ8+UDU+lfBf/FmbKlCnG1fDq1avSpUuzSqi2hISE
bBcTR+5yyJzg3oSo/4u157tCQkJ4nbI+D8yKPXio9PyclJTEersM9c2lD16d
kZFx7ty5nTt3btmyZe3atZ07dxbfEyMeHh45DaKlHx1Ivr6+sbGx4g+pP86q
LVq0aE4Fp06dylufMGFCtsvQdZ6P5+/q6io3tqFDhzpkvh1q4m61ZMWKFdO5
3ZcqVerRo0cKNsFfgOSqVq36448/Kn6N1URiYiL7YwHdNRSZsaJLly7itlL2
jy/0wMOqbd++vYLVWhTku6wF8l1g25DvAjuBfJcRdu3axRr9/PPP1ag/Jibm
q6++4qumXkoNzGzhwoW0Q+/fv89/Qp10Ly8v8UjWP8QQT7QS9v2jglTKd/EV
/Pnnn40oHhcXx9+loapu376tZ2ExW7J48WJjQ9Zl7fmu6OhoXqcpq3D9+nVW
yerVqxUJTIc49pqvr294eLgptQ0cOFA8sxo3bmxEJewdLZ3hiR4+fMirLV++
fE5lGzRowBfT82cL/g2XET3fN2/esK8aCxUqRP8tt7hVKFy4sM7tfs2aNco2
MXnyZF45bc8tW7YoW7+2RowYwVZtyJAhilTYrFkzcXewgRMV9MUXX7Ca169f
r2zNFgL5LmuBfBfYNuS7wE4g3yVXWFgYG0jczc3t7t27ylb++vXrmTNn8jcH
GOS7bEbZsmVLlCgh/uTq1avivu7fv7/+Gjp06MAX1hndy3Rq5LtevXrFA96/
f78RNQwfPpzXYPDrNvaVMXP58mWjQs6Gtee7iI+PD6tzwYIFRlcyevRoh8wX
pd6+fatUYNzx48f5d1L0HxInc9SjY8eO4sk1Y8YMuTVkZGTUrFkzf/78Oh/K
TZ8+nVf7zTffZFs2MTGRzWbikPnqps7rYaKkpCSWs6patarcCN8LN/FOnToZ
UdzCPXv2TOde7+joGBkZqWATT58+zZMnD6u8S5cucicutHD8o1p6blFqu7E7
BafIO2OiBw8esHPHy8tL/POQzUC+y1og3wW2DfkusBPId8nF5w4bP368UnU+
fPgwMDBw4MCBbIQNHch32YawsDDam/369RN/uGLFCr6jixQpEhMTo78S8VUH
q/ie8cKFCzzgS5cuyS1+7tw5ngOhs4ONFp4T6s3xT8MUHLzrvU3ku/ibb99+
+61xNaSkpPj6+lINX331lVJRcW/fvi1atCiLkPa4Ii/wlCpVSryQGjGr6Z07
d6igzqx/dFyJX9jlNFL3iRMnpN9D+/TpQ4t169ZNboQsHj7IVU7j/lmvbdu2
6dwQZY3qb9CLFy9Yl7ZgwYJ79+5VsGZLkJGRwSdxUGqy2tu3b4u7Q8HBu0R0
0rH6W7durXjlmkO+y1og3wW2DfkusBPId8kSHBzMmqPetMHURE6uXbs2a9as
yZMnjxo1qmnTpvy9C4bN+ShCvss23L9/v1ChQjqdbvF9rXnz5umvgWXMGD2j
BhlNjXyXeDOlI19ucXHGva+//lr/wvv27eMLKzh413ubyHfxUdR69uxpXA38
O27ap0pFxaSmprZp04ZV7ubmpmfGQ+l03gvy9PQ0YvCukJAQ6o3qfDjM7wKk
Ro0aOZVlUzoy33//vf6G2AtjGzZskBshs3//ftYQPZdmncrBqolfcDMKDs5/
9+7d8uXLO2S+WKvGK4ua2759O9toefLkeffunSJ18hkrmHbt2ilSrQ66XfK/
dBg9GfHw4cPpUS2Xmj766CMjBhZAvstaIN8Ftg35LrATyHdJx75tYc3lNPiw
FNSpyRq/l5cX9dC3bNly9uxZnV8h32Wr6Ihi38Y6ZH6kY3DiPN55IV27dtWz
5MWLF8uWLSv30Z3V7OrqKqsU9aT0vJfCBx8mt27dkrV9zpw5I54IBt/PGTt2
LF9Yz+BdQUFBRYoUMW7juLm5ySrl4+MzefJkWWutUr6LvwKk/8jRo3Xr1lS8
RIkSdNwqFRXTt29fFht1TpVKplEfRDx4mjRpoki1hDYgr3bVqlU5LfbJJ5/w
xQx+m/nNN9/QYk+ePDEuJNoj/P09o2eFsExZ+5tKvYW1a9cuunb5+voePnxY
kQotTXp6Ot96Rr/VmZU4uChZunSpUjXraN++PWvCiDklGT8/Pwf1LV++XG5g
yHdZC+S7wLYh3wV2Avku6aibzNpydXU1ZSDlwMDA0qVLV65cuU2bNiNGjKDu
7dGjR/n4MH/++afOqiHfZasuX77M97KUj3S6devGl9c/9vvKlSsNnjIK8vDw
0BngiBMf7O/cuSNr+3Tv3p2X9fT0zKkJjg9r76B38C42pZ3ZVKpUSdZaq5Tv
4m/KdenSxYjiz549Y9MdGjEKln4TJkxggZUtW1buEaLHkCFDxL3www8/KFJt
TEwMH5XLzc0tp5eC4uPj6bdsMbpfxMXF6a+2WbNmdFMwJTD+1o2Xl5fNjED1
/PlznbPJyclJ/0fNUqSlpbGZEejZJiwsTJFQLRBP+dKZ+/jxY6WqLVSokLhH
FB+8izt16hRvxbic5I0bNxYuXDhbTf7+/ka8OIp8l7VAvgtsG/JdYCeQ75KO
vyBB3XD1WkG+y34sWLCA72WDf3+nh2o+qDJ1+vS/DEYL01OQ3Ed39hZTw4YN
ZZWaN2+enoG5qJ/C15F6H9I3DvVJxZkrDb6f8+7dO5aQcTA0eNebN2/ouidr
HSdNmsRq7ty5s6yCixYtunfvnvS1fq9avqtq1aqszh49ehhRfO7cuezACw0N
VSoksnjxYhZV48aNTc9jiNh3apwRg3dli//Vg7Ro0SKnxcRnyLp16+qvMzo6
2tXVddCgQaYElpCQwEcRV/BlHm0FBATo3A31fEAqEV056WCjqoYPH24whW69
MjIyqlSpwjaaghMZ3L17V9wd1A9S/G1PEX/oatasmXqtmB/yXdYC+S6wbch3
gZ1Avksi8fnEiGG3pUO+y360bNmS7+Xdu3frX5gP0UMaNWqkRjxqjN918uRJ
HrasNwF0Zq40+H7OwYMH+cLKDt713ibG7+IzV/bt29eI4mXLlnVQute5adMm
Nr9Av379UlJSFKz55cuX4sEj5eVAidjA8oyejxmnTJnCF5s4caL+Otl7OKaP
WkYNsRZz585tG6N4DRw4UOduOHr0aFMqPHPmTKFChXLlyrVlyxalgrRM4ihz
+/btU6ratWvXirujffv2StWcrXnz5vG2jBj+0WIh32UtkO8C24Z8F9gJ5Lsk
atq0KWuIuo2qNoR8l51IS0vj72uRiIgI/cv369ePL7xy5Uo1QlIj3yW+D0Cd
TekFdYa5O3nypP7lJQ7eZRwbyHfxmT0nTZoktyz/sGjbtm1KxbN161Y2HvXU
qVOVqpMTR7pTcDOmp6fzd6iInlfdGjZsyBczOHhX165dHR0dIyMjTQwvJCSE
N7pw4UITa7MELMsqMiV1s3z5cldX1zJlythS5iQnvXv3Zlssd+7ciYmJSlWr
M3jXsmXLlKo5Ww8ePOBtGZeot0zId1kL5LvAtiHfBXYC+S4pwsPD+VRBao8G
jHyXnbh48SLfxfRMpX/hlJSUfPnysYWpa/z8+XM1QlIj3xUXF8dXU9Zj4YwZ
M3hBDw8Pg2Ok8O/1HPQO3mUca893paWl8Y89169fL7c4G0/ex8dHqY5zYGAg
xUMX1dWrV+tZjE3ooGc2hJzoDN41c+ZME4L9f6dPn+Z16hlwj7Y2H+PLxcVF
/+BdycnJ3t7eNWvWVCRC3jsrUqRIamqqInVqRWeGTYfMz2mNm0WRdgFL1LRt
29Y23nzTLz4+nv8xxej5KbKlM3hXSEiIgpVni08S5OXlZcRIWZYJ+S5rgXwX
2Dbku8BOIN8lxY8//sgbUm90Vgb5LjshHlQGh+4RRw3KmgMZOnQoPfOYHpIa
+a73wvk7d+5c6aXEL8LoZqd/4VevXrEv4xyyDN6VmJjYoUMHg6+H6Wft+a7w
8HBe57Fjx2SVjYmJYQOpDR8+XJFg9uzZ4+Li4u7uvnPnTv1LhoaGUrtyJ7h8
n2XwrlOnThkb7H8Rv67S85rc06dPpd892Xe4+vN+0tG24k0rNdOlVrZu3apz
KzQuK3j37t1KlSo5OTnNmTNH1cGmLIc4OanBs0w6Mw/exYgn3aFDh9RuzjyQ
77IWyHeBbUO+C+wE8l1S8EFTS5UqpV4rDPJddqJNmzZ8F2/fvl3/wq1bt+YL
6zxc3b5920GhJJVK+a7KlSuzyAcOHCi91Pz58/kq0+rrX3j37t18YZ3Bu1iq
cPPmzcaE/h/Wnu+6cOECr1PuTG3r169nBRV5a+7gwYNubm7e3t4nTpwwuPC+
ffuo3a1bt8pqQr3Bu8RvZjdu3JjTYmfOnOGL9erVS3+dLVq0oK0RGxurSITi
J40jR45UpE6tDBgwQOdWOGbMGLmV7Nq1izYvXdmCg4PVCNIy8ZuLu7u7wblB
pVu3bp24O9QevIu5fv06b3Ho0KFmaNEMkO+yFsh3gW1DvgvsBPJdBt24cYO3
Qv0dlVrhkO+yB+np6Xnz5uW7+NWrV3oWpt+6uLjw+47ONx0zZ86kn1+5csX0
qFTKd/Xs2ZMFL2u0c3EIJqpB/8LUEeYL6wzexT5tkztJog5rz3fxfCAdSGlp
abLK1q1blwpWr17d9DCOHj3q4eFRoEABiW/JduvWzYhjOzAwULx+KjgG2jff
fMOr3bNnT06L/fbbbxJvGZcvX3ZQejrFIkWKsKZLliypYLXmV6ZMGZ1b4f79
+6UXp+N8/PjxDplvhyo7qaiFi4yMdHV1ZVusfv36CtasM3jX8uXLFaw8JxkZ
GT4+PqzFokWLmqFFM0C+y1og3wW2DfkusBPIdxnEJ71yMEvqCfkue0D9fb5/
K1WqpH/h1atX84V13tmIjY319fWtXLmyIlGplO9atWoVC7506dLSS8XFxeXO
nZsV7NSpk54lQ0JCPD09+Sa6ePGi+NtSpUrVqVPHyND/w9rzXXPmzGEVli9f
XlZB9vaggxJ921OnTuXKlats2bKPHj0yuHBKSsqVK1dotzo5OSUkJMhqaOjQ
oeL1c9asWcaGrGvhwoW82qCgoJwWCwgI4IvpP5tatGjh4eERHh6uVITv/5Mk
ZK5fv65gzeYkfoHLODs7Sx9669WrV02aNHHIfKfUZgZ9kkh8C2v8+PEK1qwz
eNfVq1cVrFwP8fVmtQeUMA8xJY58lyVDvgtsG/JdYCeQ7zKI+su8ldevX6vU
Cod8lz1YtmwZ378jRozQv7A4crvO9GTs5a4DBw4oEpVK+S5+SLu6usp6uahP
nz6soJ4/69+5c4e/0MK8fPmS/5ZNLGh6ksqc+S5xYDel8l38+ya5X4SxN2Tc
3d3fvHljSgDnzp1jA2gXK1asiiEVKlRwc3NjARvxkpLO4F0K3hpoLXi1dFZm
u0x8fHzp0qX5Ynq++WJf2io+AQpPLzvIHDHPomQdvEt6l+3s2bOFCxf28PDY
sGGDqkFaJv4+Ldm9e7dS1eoM3pUvXz6zDYYmDuGl1NwT2uJ/gHDInIBGvGeB
RUG+C2wb8l1gJ5Dv0k/8K3PZsmXVaEIH8l32gHrBfP8GBgbqX1g8ScVvu+hQ
yZ07d8eOHZWKSqV8V2pqKhvw3CHLy1f6nTt3js8qeOHChawL0Nbw9fXNlStX
ixYt+CYSk9INGzakfpnpL3iYM98ldlfz588v9/PDbLE9S2SN2087jgKgUl9+
+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
BPJd+t28eZM3UbZsWTWa0KHzlRzp1q2bGdq1Z1evXuXfvBic69zf39/T07Nk
yZIVK1YUd1PWCegBwDx69OjBTsNixYrp+XAsPj7+888/5+fsqFGjbC/Z9eDB
A76CRnRzVq9ene0dVtlpDWNjY69cuTJkyBCdt2QdMj8vpRhMn58xJiYmKChI
5yot+uKLL/7888/U1FRF1ojReV2tWrVqFIaC9UtBj/08ANO/3KTDiTo7rLYl
S5Zku0xERETNmjXZMs7OzoqPJ9+9e3e+RocPH1a2cgA9kO8C24Z8F9gJ5LsM
Eu93L1++VKMJ6nM9efLkxIkTvNemo02bNnRRevjwobIP58DNnDmTb+0NGzZk
u0xycjJ10GiBEiVK3Lt3T+fTFYkDBwGA4p49e1agQAF2Jub0iubbt2/r16/P
lnF0dFy8eLF5YzSTzZs384uSEQO/Hzx4MNt7kInj+R8+fLhq1apFihQpWLBg
1jkTs3JycqILLC1ZqFChUqVKLV26VGJDr1+/btq0KTXk5uZmsBXi4eFBIdWo
UUORF9jEOQ3Jpk2bTK9TLtoCzs7OLADqJphe4alTp9jEPVTtnj17xF/RAwmt
I90QWXO0i9V4EuP10/GQkpKieP0AOUG+C2wb8l1gJ5DvMkgc+zcoKEiROtmT
P3v49/Pzk/hk7pD5fQotT6WK/Ici8cB7Yaw2Ot6OHz8u/io9Pf3QoUPsktu3
b993796dP39e3C8VKlTQKmwAeJ858iEbucjR0XHLli3ir9LS0rZt28Z7LuXL
lw8ODtYqTrWxnDxz5swZucXpWqczz6CDEoMm9e7dW+I9Llt8rkODjh07ZlwT
169fN3EdyapVq8Q6VfoI1CA+6TA9MMTFxZle4V9//cXH5qpdu/ayZcvWr18/
ffr04sWLsx/6+PisXr1ajWHKwsLC+PakY1vx+gH0QL4LbBvyXWAnkO8y6OzZ
s7yVb7/9VpE6pfyBWyLzzPpkJ5YsWeLq6so2bJs2bajzsnbt2smTJ5csWZJ+
kj9//n379rEl582bJ+4FPIcDaO7WrVuVKlVip2S1atUWL15MvfKZM2fyrnqe
PHkWLVpk26+I8C1AVy3janj06JGY8qIHANNHd6c66XK6bt26LVu27Ny587ff
fjuSs8OHD9OVdseOHdSV+/nnn6lUfHy8xIYSExM3b968evVqKkUPwNTc9u3b
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
ie7PKGrVqlX8MUWngcnPd02bNo2FSWSiAgIC6LwSvZLGb0+gLdPI4+cUkYED
B4qGlX2+iy/eZW1tvV4MPdX0cbEFjMTGxiYsLEzvnbkfMbqSUvEmY4+FccXO
d4WGhtIhtmzZwr/IT9ds0KABP/VLE//AS6yQ1bs7d+6MHTuWL9PXrVu3M2fO
SDTRS77L0dGxxH0HAAAAAABQl5OTw2cnpKf3PHnyhK1wKUfFu4R0hNrAjV9U
JTHg4ot3rVu3TuIsCQkJQtjRo0f10u25c+eyUxsZGWnbUfHUqVP8WF20whjp
27cvvRsREaH5Fpt8Ymlp6SOpQ4cO/LmcnJxEzyUz37V+/Xr+aBJTd/gyQRIp
I/n5Lj6NqdCylFJ+vis8PJyFGRgYBAQEiCaNnz59St8giV5JuHHjBt+ZzMzM
Ipu8ePGCrwJnYmKSnp6uGVbG+S614l0SMxIF8fHx/AYZgwYNklncXqacBz+H
haxesWSuby8n48LfNqWR44KzUvkoaZMnT6Zn4Pfff+df5PdxKHLPgp07d8r5
+ugR/XZ5e3uzSWX0I+/p6altA1meXtYzNmrUqAR9BwAAAAAAEDdnzhw27mjb
tq108A8//MCCy1HxLg8Pjzp16qitWRszZgy7lgULFmhry4/L4uLipE9EA3lj
Y2PpyRvypaSk8LPpFi9eLBqmtjtku3bttB2qZs2aojml/v37K4rFzMxMdCWg
zHxXcHAwf7Rr165pi+zVqxcL05bQe6VLvotPKZB79+5pxsjPd9Ed59d/KQq3
Djxy5IhEB3Ql7LYgUCqVEkXMeG5ubnyvRMu7lXG+69KlS/zp5CzwpI+XnmrW
xM/PrxT6lf/b5oEmhfkuU+uhp54VP6WWkJCgltGKjY1lna9bt65KpZI+wuef
f87ipXPsJRcTE0M/IKwqI/1KDB06VGLJsBobGxvWVZ2movFbQGputAoAAAAA
AFBCaWlpZmZmbNwhukEejy3ZU5Sr4l2PHj1KTk7mX3nx4gWbZEJDvD///FO0
IV+8y9raWvosBQUFpqamEhXLi6FPnz6sA02aNBHtIfXfyMiI30fg1q1bamGz
Zs2i16dMmSJ6FhpvCg3d3d3v6agk+S5+PaNCcuIWn9M7ePCgtrC3le96pbF5
pYBu32+//SbRSj4fHx92WIlaZ2rojvP94XcMZMo43/XNN9/wp4uPj5fT6tix
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
7D//+Q+75AsXLkhEPn78uGLFijqN33WSm5srLF0UzJ49W1je1axZM7Vc05o1
a1hY+/bthVTGBx98IH38AQMG8MmE8PBwOb3Kz8/v0aOHaDpL13zXvXv36Fqo
G9oWXcr0tvJdgYGBX331lbZ3s7Oz+ZxAkXkPUc+fP6dnjD+Itgwbjy/+1r9/
f9GYMst3RUdH8yeSP0frwYMH/CQicv36dR1PnhV7eKFXW3szA6WBUYW6jVo4
v2Nb0cjAyqHXujMPEjcNMis8vFkt7zMv9Dm9i34bWZ8dHR2lg0+dOsWCXV1d
1d719PS0sLCQ3qcgKytr5cqV/A4XrVq12rdvX7GrxsnBL9hcvHixnCaTJk1i
TajDpdc3AAAAAAD4dxo8eDAbdAQFBUkHT506lQWrFe+aPHmyoqgZRP8c/NZg
NDCUiOzatSuLlF6nI2ypdvr0aTkdUKlUxagJP2XKFNYZBwcHYW2p5s6S6enp
ZmZmLNLJyYn+u3v3bumD8ys3FYUVfuTkUvz8/AwNDa9evar5lk75roSEhHr1
6vXq1avkpf71m+9Sq00kUWwqMDCwXbt2EqdLSkris1WiH1qRRo4cyfdn06ZN
RTbp0KEDi9c296bM8l2LFy/mT1RkNTbmhx9+ULxJ9Bukba1fbvqleQOcLQwU
BsY23catjk55Wfhy/qO4fZ++W8u0unsvdxuheJfjx5v0W7wrODiY9dnHx0c6
eNSoUSx4w4YN/Fv0faTvNf1ia2v79OnTRYsW8Vlxev6PHDmin8uQ9Pvvv7Op
vz169JDThE1DrVSpUslr5gMAAAAAAKgJCgpig6MVK1ZIB/N7e6kV72rRogWN
s0qzp3rGMg/29vYSYV26dGGXLFE86vHjx1WrVnVzc5Nz6vDwcGHzPicnp0uX
Lsnvc0JCgtqQv169eqILlIYMGcKHVa9evchJU0+ePGEbVgpcXV35jSA1LViw
gMK+/vpr0Xfl57uSk5Pp4VEqlQ8fPpTupBz6zXcdPXqUj5Go5B8YGEiXIJ0p
Gjt2LDvUnTt3ZF/T/5eUlMQnMxs1aiQ9byc7O5vFf/jhh9rC9u7dy19m6eW7
evbsyc5SrVo1+aWoVq1axfeQPmrRC3d2dtbMKWXd/X5UG2sDhcLAvKFfaKza
NyEn+dvethZ/H9ek3+Kb+p0I5eXlxbqtbYNUhu3aYGhoqDaPSyg5ePbsWc1W
9DEuWrSI35uV7rXM3Lu+0McunJqet7t370oHx8XFsUp9s2bNKpseAgAAAADA
v0piYiIbIs2ePVsicvny5SySRjT8PBxhqdHUqVNLv796wyZuVaxYUVsuKCYm
ht9fT2L9lJDHOHHiRJHnvXr1KhvoCUN+nQo1d+zYkR/1i+61RyIjI/kwmTvZ
8cXKBE2aNBHNyKWkpHTv3p0CXFxctM3IatSoETsO2ylSlHAoeoT++9//lnw3
Oj6j8u6770pEbt26lb9Y0QWG/GI0hcZmBPn5+WyWUWBgIAVMmzZN4oys4Hzz
5s2LfaVz5szhu7Rr1y6JYDafytzcPCEhQVtYWFgYf8xSWpisUqksLS3ZWTw8
POS3FZKrDH1tNWMuXLhAb6mtKlVlnPN71/r1UkWDyl6LLos9rHmnA92NCg+r
NG6y9CepHK+u6C7XqFGDdfv+/fvS8SxLXLduXf51uiPGxsbe3t6irdj3nb5E
ffv2jY6O1lf/5UtNTa1evbrQjY8//lg6mM05tLW1lU6qAwAAAAAAFFv79u2F
ocdHH32kLWbLli1suYpCYw1gUFCQgYFBqe7ppndC5WeB6Fq/vLy8Vq1a8Vc9
Z84c0UPt2rWLLl86W8jMnDlT8Sadym7zeQmJXBmNsu3t7VmkRKKDl5mZyZfx
F9Clvf/++/Pnz99TaOnSpV27dhWqn1lYWGgr9a9SqViFNIXkPKuYmBj+dEKx
+pEjR06cODEgIGDhwoXBwcFbt27du3fvkSNHLl68WOQWjc7OzuxoNACXiFTL
74nuN5qfn8+naBwdHVl2lMbpo0ePnjBhgvBXId9FN0Uip9G3b1/hODLLo4mi
z9bT05N1qXbt2snJyaKR8fHxwuQuIyMj6cdM7bH87rvvit09CWfPnuXPotNO
pvSJ8W1F72znzp3pSt/IW+bf2zysqeHrbJeydru5SbmiOcb8xI0DTAqLd5nX
9j6n1+Jd/ONNX64i4+mJEoJbtmzJXvzzzz8dHByqVq2qbQJkRkYG/XoPHDhQ
95pm+kTPGNvmdd++fdrC6F8TIcba2vrtdhgAAAAAAP5vO3jwoFAImobGomus
li1bRgGtWrVic6JoiM3effz4saWlZc+ePcuux3ri7u4uXE7Tpk3VchS5ubnj
x49XFM55YyXOatWqlZiYqHaQ4OBg+nCGDx8u86Rq9YsUskt+CV6+fMn2epNe
ByTUEyMdO3aUf/y4uLjKlSsrZKABuEQFqqioKD6YjknPiWhkfHy8Wh1yaQYG
BvQcapvU9ODBAwsLCz7+ypUropEqlapt27Z85KJFi0Qj+T0dFIVPy9KlSxcu
XGhnZ9ewYcNHjx4JYUK+i7i5uT179kzzODExMUL6tEuXLnR2bR+dHNnZ2X36
9OG7pPlk0gfbunVrReHMLunqbXl5eWofRZFlpnRFz+3ly5fbtGnDn4Ue0efP
5e6EmJOTw6dw6aLUpmVu2LBBoTG5K+X78bWMCp8ugxqf79JWj+5F2MgmQvGu
hh5bMvVavGvTpk2sz5999lmR8QkJCULKiB5juoMFBQV79+51dHSkb9Dx48f1
2bPSceLECSsrK0XhesygoCC155xuGd0g4VtA/4iUo/1NAAAAAACgnGIVld3d
3dn4nVy/fr1Tp070+oABAx4/fnzy5ElhqKJUKoVcR25u7vDhw+mvZ86ceXvd
L6aHDx8OHDhQuPA6deosWbIkOjr6xo0bhw8fbt68Ob04fvx4Gq9lZ2ezXRpr
1aq1cOHCK1euxMXF7du3T1g617lzZ/lbCt6/f58vs+Pi4qLruraJEydSwwoV
KvB3StPvv/8uLJwsslK9GhqECpcvoXv37unp6Zpt8/LykpKSNm/ezBfNFrz3
3nsHDhwQnaCyadMmnVJeAh8fH340nZGRsX//fldXV7UwBweHbdu2paamssis
rKyoqKj+/furRZqbm8+dO5f6r9Y9utf0lmYH7O3t6UNmYSzfRRo2bEjfqczM
TOGtFy9ehIeHC4nKkm9AKaDHZtWqVaw2l4WFxaRJk06dOnXz5s0LFy6MGzfO
yOj1Ej1nZ2d6pLUdgR4hetr51BkzduzY48ePU0Cx113S5dPtoKu2tLSUuL/0
2VJM06ZNpZ9nQk8yf5ywsDB2IUuXLqWfpq5du76RYFElzOxgIzSoYOfzk5aJ
WwU5lz5r+jpFo1Ca9F+aoN/iXREREewyL1++LKfJ6dOnhYWBdAeFB69x48YS
G4P+01BX2bJrR0dHPz+/HTt2bN++/fPPP69fv76i8J8PT09P6e0/AAAAAAAA
9GXJkiXCxJjKlSuPHj3a19dXWBdWtWpVPmHCSh7VqVOHxi8uLi705zVr1rzF
npfQ3r17O3TowC++UxTWrdq8eTMftn//fhqj8aXCFYU1dihM17k6cXFxQ4YM
oY/O39+/GBXab9++Tb2dMmVKkZG9e/euV69eMbIr2dnZGzdubNasmVpqgp6N
ESNGHD16VLRUOL1Iz0zzotCTptn20qVL1NbY2FinxNeMGTOE5unp6S1atJA+
L1uj16ZNG+lIzZLgdPft7Oz4FA09/CydJQgMDKQPPCQkhP7QpUsX+qwojMb7
9CwJWQt3d/fQ0FDp8vK6SktLmz17toODg9onQ08I9eHQoUMS2SofH58ibxah
+6JWOF2m58+fd+rUydXVtWPHjh9//PEADn2V6JWePXt269aN+unm5tajRw85
heyOHTtWu3Zt4RpNTEyGDRtGV0EPOf21X79+anMIn19Z2MRMqJVn2Hr0dy+1
HDMrflVr88I0vnHTZZf0X0uKfj+nT5+uOQFPAn0U9LtE33FqePz4cf0+M2Uj
Ojra29u7UaNG7BttaGjo5OQ0ZswYbQlYAAAAAACAUpKenr506dKWLVtaW1vT
oJLGoVu2bNHcKf7mzZvTpk2jIXa1atXef//9Uir1U8ays7PPnj27b9++Xbt2
Xbt2TVtYZmYmjbgpjEajMTExJS+uXjzUAVYmXUJ8fPzJkydLcqJHjx7RcDsi
IuLgwYNRUVH0KZXkaBLWrVtXqVIlugVZWVmxsbGHDh1atWrVvHnzAgICvvji
C19f39GjR48YMcLDw8PFxYWt6KxatWqZFbvOzc2lW08fxYkTJ16+FMmdqFQq
/nmgPyclJVGTb7/99vDhwzqlO4ohLS1N6B49G9HR0XqZQvbPRE9+aGiot7d3
w4YNa9SoIRR8owdGI1B1dVlPYS2jwqCa/17x5bSvXuX/tmWw+V/Fu0bqt3gX
kGfPnv1WCHXpAQAAAAAA4N8jJydn2LBhCoViw4YNMpuoVKrDhw8L1ZyOHDlS
qt2Dcit712ihKpfCwMR9xx3xXUTfKN7luVW/xbsAAAAAAAAA4N9p6NChCoWi
Xbt2ujaMjIykhhEREaXRKyj/Xqzvby9M76pU3/fyS/FM1uviXU5/Fe8asPzW
37O78h/ePHc+7jEmewEAAAAAAACArmbOnCmsTIyKitK1bXx8PDUsF5vWwduQ
HT7qr/ldNu0XJOeJ57uybq5sZW5QWLyr+YrLfy1TLciLnfJu9fp9NhWnbBkA
AAAAAAAA/IvFxsay+uopKSm6Ng8JCbG1tRUtpQXw6pXq8jfdhPpddTuvfKgS
zXfl/rTwI5PCGIu6oy9m/RWTdWO5s7l5v8VxmN8FAAAAAAAAADr56quvWL5r
z549OrW9ceOGhYXF1q1bS6lv8H/A8+tLWhRuvFi50cRr2Zr5rtzYPZ83qGBY
+AAq7Xus/7t4V95P87uaWnTYkVSeav5HR0dv27Zta6nZvn17QkLC275KAAAA
AAAAgH86X19flu+ysrKKjY2V0yo/Pz88PNzOzq59+/b059LuJJRj+Q9DRzQz
VCqURg2CIt/cnzH/SdTqobamJrXsbc1ez+9S2nVfl1GY71Jl/m+Yo2WzQTvT
VW+l08Vx4cIFRekzMTFJTU1929cKAAAAAAAA8I926NAhfjRtZGTk7e39yy+/
5OaKbKVHL165cmXDhg1Nmzal4F69er148aLs+wzlS276mUnv1TZQKCvU6bTo
QExGXkFBTtrP368Z/UF9Y8PKHT7dlph6ekyzKkqFwrhKx01XM16k/rJkoJOp
VYet18vTOtk7d+7Y2tqWdr7L2dkZXzoAAAAAAACAIo0fP150GkmrVq28vLw+
+eSTQYMGeXh4tGnTxtTUVHi3QoUKCxcuxMwukCn/aezGiT3rVXw9z8vQpIKF
iYHSoMI7HUes/m9CdmHAs98O+3VtYKxUGBiZmhorTaq0nrE/qTw+XpmZmRml
5ulTFO8HAAAAAAAAkCU3N3fRokWWlpZyppeYmpqOHz/+wYMHb7vXUP4UZKcn
XD6xZ+umnfsjf0l8qLFUMScl5viOkLWbwn6ISxWZXggAAAAAAAAAoJO0tLRp
06a5uLgYGhpqprksLS179+4dGhqakZHxtnsKAAAAAAAAAACgg6dPn0ZGRoaF
hW3evDk0NPTo0aPJyclvu1MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/RP8PfBTQGQ==
       "], {{0, 139.79999999999998`}, {969.5999999999999, 0}}, {0, 255},
       ColorFunction->RGBColor,
       ImageResolution->{120., 120.},
       RasterInterpolation->"High"],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{310.19999999999976`, Automatic},
     ImageSizeRaw->{969.5999999999999, 139.79999999999998`},
     PlotRange->{{0, 969.5999999999999}, {0, 139.79999999999998`}}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Tableaux", " ", "Y"}], " ", "->", " ", 
     RowBox[{"rank", " ", "of", " ", "flavour", " ", 
      RowBox[{"sym", ".", " ", 
       RowBox[{"(", 
        StyleBox[
         RowBox[{"supports", " ", "all", " ", "tableaux"}],
         FontSlant->"Italic"], ")"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"rkFSym", "[", "Y_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Ycomp", ",", "k", ",", "sum", ",", "rank"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Ycomp", "=", 
         RowBox[{"Split", "[", "Y", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"k", " ", "=", " ", 
         RowBox[{"Length", "[", "Ycomp", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"sum", "=", " ", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Ycomp", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "k"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rank", " ", "=", " ", 
         RowBox[{"sum", " ", "-", " ", "k"}]}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Flavour", " ", "fugacities", " ", 
     RowBox[{"{", 
      SubscriptBox["a", 
       RowBox[{"i", ",", "j"}]], "}"}], " ", "labelled", " ", "by", " ", 
     "puncture", " ", "i", " ", "and", " ", "index", " ", "j"}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"flavFug", "[", 
     RowBox[{"Y_", ",", "punct_"}], "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"a", ",", 
        RowBox[{"ToString", "[", "punct", "]"}], ",", "i"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"rkFSym", "[", "Y", "]"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"List", " ", "of", " ", "irreps", " ", 
     SubscriptBox["R", "d"], " ", "of", " ", "a", " ", "tableaux", " ", "Y", 
     " ", "up", " ", "to", " ", "some", " ", "dimension", " ", "limit", " ", 
     RowBox[{"(", 
      StyleBox[
       RowBox[{
       "currently", " ", "only", " ", "supports", " ", "full", " ", 
        "tableaux"}],
       FontSlant->"Italic"], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"output", " ", "of", " ", "the", " ", "form", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "dims", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"LieART", " ", "irreps"}], "}"}]}], "}"}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"irrepList", "[", 
      RowBox[{"Y_", ",", "dlim_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "rank", ",", "alg", ",", "dynkinList", ",", "dimList", ",", "list", 
         ",", "n", ",", "toRemove"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"rank", " ", "=", " ", 
         RowBox[{"rkFSym", "[", "Y", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"alg", "=", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"\"\<A\>\"", "<>", 
           RowBox[{"ToString", "[", "rank", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dynkinList", " ", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"dimList", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"n", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Until", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Max", "[", "dimList", "]"}], ">", "dlim"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"dynkinList", " ", "=", " ", 
            RowBox[{"Tuples", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", "n"}], "]"}], ",", "rank"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"dimList", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"WeylDimensionFormula", "[", "alg", "]"}], "@@", 
               RowBox[{"dynkinList", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", "dynkinList", "]"}]}], "}"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"list", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Irrep", "[", "A", "]"}], "@@", 
               RowBox[{"dynkinList", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", "dynkinList", "]"}]}], "}"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"n", "++"}], ";", "\[IndentingNewLine]", 
           RowBox[{"n", "++"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"toRemove", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", "#", "}"}], " ", "&"}], ",", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"Length", "[", "dimList", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"dimList", "[", 
                RowBox[{"[", "#", "]"}], "]"}], ">", "dlim"}], "&"}]}], 
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"dimList", " ", "=", " ", 
         RowBox[{"Delete", "[", 
          RowBox[{"dimList", ",", "toRemove"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"list", " ", "=", " ", 
         RowBox[{"Delete", "[", 
          RowBox[{"list", ",", "toRemove"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Sort", "[", "dimList", "]"}], ",", 
          RowBox[{"list", "[", 
           RowBox[{"[", 
            RowBox[{"Ordering", "[", "dimList", "]"}], "]"}], "]"}]}], 
         "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Fix", " ", 
     RowBox[{"LieART", "'"}], "s", " ", "handling", " ", "of", " ", 
     "weights"}], " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"weightToList", "[", "weight_", "]"}], ":=", 
    RowBox[{"ToExpression", "[", 
     RowBox[{"StringReplace", "[", 
      RowBox[{
       RowBox[{"StringDrop", "[", 
        RowBox[{
         RowBox[{"StringReplace", "[", 
          RowBox[{
           RowBox[{"ToString", "[", "weight", "]"}], ",", 
           RowBox[{
            RowBox[{
            "RegularExpression", "[", "\"\<[^\\\\[\\\\],0-9]\>\"", "]"}], 
            "->", "\"\<\>\""}]}], "]"}], ",", "2"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<[\>\"", "->", "\"\<{\>\""}], ",", 
         RowBox[{"\"\<]\>\"", "->", "\"\<}\>\""}]}], "}"}]}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Final", " ", "function"}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"KY", "[", 
      RowBox[{"Y_", ",", "punct_", ",", "qlim_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "fug", ",", "repList", ",", "dims", ",", "irreps", ",", "ndList", ",",
          "prodList", ",", "elems"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"fug", " ", "=", " ", 
         RowBox[{"flavFug", "[", 
          RowBox[{"Y", ",", "punct"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"repList", " ", "=", " ", 
         RowBox[{"irrepList", "[", 
          RowBox[{"Y", ",", 
           RowBox[{
            RowBox[{"2", "qlim"}], "-", "1"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dims", " ", "=", " ", 
         RowBox[{"repList", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"irreps", "=", 
         RowBox[{"GroupBy", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"dims", ",", 
              RowBox[{"repList", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], ",", 
           RowBox[{"First", "->", "Last"}], ",", "Identity"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"allowed", " ", 
          RowBox[{"{", 
           RowBox[{"n", ",", "d"}], "}"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"ndList", "=", " ", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"n", ",", "d"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"n", ",", "0", ",", "qlim"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"d", ",", "0", ",", 
                    RowBox[{
                    RowBox[{"2", "*", 
                    RowBox[{"(", 
                    RowBox[{"qlim", "-", "n"}], ")"}]}], "-", "1"}]}], 
                    "}"}]}], "]"}], ",", "1"}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ")"}], "/", 
                   "2"}]}], "<=", "qlim"}], "&"}]}], "]"}], ",", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{"dims", ",", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}]}], "]"}], ",",
            "Last"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"list", " ", "with", " ", "elements", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"d", "+", "1"}], ")"}], "/", "2"}]}], ",", " ", 
            RowBox[{"{", "weights", "}"}]}], "}"}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"prodList", " ", "=", " ", 
         RowBox[{"ndList", " ", "/.", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"n_", ",", "d_"}], "}"}], " ", ":>", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"n", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"d", "+", "1"}], ")"}], "/", "2"}]}], ",", 
             RowBox[{"Map", "[", 
              RowBox[{"weightToList", ",", 
               RowBox[{"Flatten", "[", 
                RowBox[{"WeightSystem", " ", "/@", 
                 RowBox[{"irreps", "[", "d", "]"}]}], "]"}]}], "]"}]}], 
            "}"}]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"1", "/", 
         RowBox[{"Product", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              RowBox[{"q", "^", 
               RowBox[{
                RowBox[{"prodList", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "k", "]"}], "]"}]}], 
              RowBox[{"Total", "[", 
               RowBox[{"MapThread", "[", 
                RowBox[{"Power", ",", 
                 RowBox[{"{", 
                  RowBox[{"fug", ",", "w"}], "}"}]}], "]"}], "]"}]}]}], ")"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", 
             RowBox[{"Length", "[", "prodList", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"w", ",", 
             RowBox[{
              RowBox[{"prodList", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], "}"}]}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.933304351799139*^9, 3.933304354646389*^9}, {
   3.933304435866844*^9, 3.9333044362070065`*^9}, {3.933304661017294*^9, 
   3.933304670498892*^9}, {3.933304964266136*^9, 3.933305066817095*^9}, {
   3.9333051322188168`*^9, 3.9333051460387783`*^9}, {3.933305222017197*^9, 
   3.93330522233856*^9}, {3.933306117660694*^9, 3.933306122454286*^9}, {
   3.933306881121491*^9, 3.933306900105823*^9}, {3.933307016830427*^9, 
   3.933307047061655*^9}, {3.933307227263214*^9, 3.9333073098942776`*^9}, {
   3.9333074000432568`*^9, 3.933307471021403*^9}, {3.933307518661408*^9, 
   3.9333077093048687`*^9}, {3.9333077453631516`*^9, 3.933307769759144*^9}, {
   3.933307848251543*^9, 3.933307867762732*^9}, {3.933308109831627*^9, 
   3.933308173741276*^9}, {3.933308269263187*^9, 3.933308372321436*^9}, {
   3.933308424800286*^9, 3.933308575901207*^9}, {3.933308656541504*^9, 
   3.933308685961457*^9}, 3.933308752873385*^9, 3.933308928181311*^9, {
   3.933310374751341*^9, 3.933310376138862*^9}, {3.933310413631529*^9, 
   3.933310444761114*^9}, {3.9333104832312164`*^9, 3.9333104907618923`*^9}, {
   3.933310531914423*^9, 3.933310539081394*^9}, {3.933310576901287*^9, 
   3.9333106801506176`*^9}, {3.933310713971834*^9, 3.933310720008456*^9}, {
   3.933312298792551*^9, 3.933312380598905*^9}, {3.933312781741516*^9, 
   3.933312932614561*^9}, {3.9333129869341583`*^9, 3.9333130966167336`*^9}, {
   3.933313243681587*^9, 3.933313315926588*^9}, {3.9333134295184*^9, 
   3.9333134305999565`*^9}, 3.93331403464106*^9, {3.933314209132361*^9, 
   3.933314245261017*^9}, {3.933314375181238*^9, 3.93331437544018*^9}, {
   3.933314437814297*^9, 3.933314447026478*^9}, 3.933314548142822*^9, {
   3.933318333146564*^9, 3.933318336405863*^9}, {3.933318975993847*^9, 
   3.933318995913944*^9}, {3.933319045332054*^9, 3.933319091103985*^9}, {
   3.933319265314112*^9, 3.933319299621727*^9}, {3.933319578172213*^9, 
   3.933319666671364*^9}, {3.933319696753784*^9, 3.9333198310537357`*^9}, {
   3.933319874974106*^9, 3.933319914711973*^9}, {3.933319967231861*^9, 
   3.933319999223339*^9}, {3.933320141493391*^9, 3.9333201438650265`*^9}, {
   3.933320176753229*^9, 3.9333201978332386`*^9}, {3.933320230573433*^9, 
   3.933320239453413*^9}, {3.9333202974782066`*^9, 3.933320406804905*^9}, {
   3.9333205892732124`*^9, 3.933320671894997*^9}, {3.933320723944916*^9, 
   3.933320766162817*^9}, {3.9333207963763785`*^9, 3.933320813180084*^9}, {
   3.9333208494908714`*^9, 3.933320853205995*^9}, {3.933321051402802*^9, 
   3.933321121409704*^9}, {3.9333211696930313`*^9, 3.93332117640466*^9}, {
   3.933321250037516*^9, 3.933321251647459*^9}, {3.933321334604315*^9, 
   3.933321409774393*^9}, {3.933321449266535*^9, 3.933321552849909*^9}, {
   3.933321588277985*^9, 3.9333216177805614`*^9}, {3.933322151098028*^9, 
   3.933322241463753*^9}, {3.9333222763851604`*^9, 3.93332252120516*^9}, {
   3.933323070119467*^9, 3.933323151860359*^9}, {3.933323191019379*^9, 
   3.933323233480505*^9}, {3.933323380934319*^9, 3.933323381512285*^9}, {
   3.933323439969028*^9, 3.93332346509146*^9}, {3.933323518825985*^9, 
   3.933323521124954*^9}, {3.933323551435831*^9, 3.933323564218798*^9}, {
   3.933323686191859*^9, 3.933323721646214*^9}, {3.933323812010464*^9, 
   3.933323942789604*^9}, {3.9333240282843*^9, 3.933324054563727*^9}, {
   3.93332409185812*^9, 3.9333242044897614`*^9}, {3.933324305109267*^9, 
   3.933324371622937*^9}, {3.933324414031103*^9, 3.933324441151989*^9}, {
   3.933324531299074*^9, 3.933324582178261*^9}, {3.933324650319565*^9, 
   3.933324734072285*^9}, {3.933324778520186*^9, 3.933324802126652*^9}, {
   3.9333248503952045`*^9, 3.933324875893961*^9}, {3.9333249549549656`*^9, 
   3.933325078804091*^9}, {3.9333251214322624`*^9, 3.933325123570499*^9}, {
   3.933325269209999*^9, 3.933325279698789*^9}, {3.9333258120036583`*^9, 
   3.933325839498684*^9}, {3.9333258725423*^9, 3.9333258976751614`*^9}, {
   3.933326031082329*^9, 3.93332603149646*^9}, {3.933326083326933*^9, 
   3.933326102072598*^9}, {3.933326182846112*^9, 3.9333262157202835`*^9}, {
   3.933326452259339*^9, 3.9333264709596176`*^9}, {3.93332654708255*^9, 
   3.933326548954601*^9}, {3.933326583581526*^9, 3.9333266309411736`*^9}, {
   3.933326663784363*^9, 3.933326667425024*^9}, {3.933326960647322*^9, 
   3.933327052491503*^9}, {3.9333270935407867`*^9, 3.9333271108536267`*^9}, {
   3.933327159737767*^9, 3.933327184606095*^9}, {3.933590762910881*^9, 
   3.93359077889614*^9}, {3.933590921258503*^9, 3.933590976846489*^9}, {
   3.9335910286640205`*^9, 3.933591029560732*^9}, {3.9335911344484825`*^9, 
   3.933591253326576*^9}, {3.9341141375752068`*^9, 3.934114244721449*^9}, {
   3.9342542641062775`*^9, 3.934254275166212*^9}, {3.9342545754147778`*^9, 
   3.934254697483171*^9}, {3.9342547605505314`*^9, 3.934254803679394*^9}, {
   3.934254923116811*^9, 3.934254969694076*^9}, {3.934255002996244*^9, 
   3.93425505705879*^9}, {3.934255325256895*^9, 3.9342553390373383`*^9}, {
   3.934255626707245*^9, 3.934255627089399*^9}, {3.934255984251413*^9, 
   3.934255984740341*^9}, {3.934256068262565*^9, 3.934256084559486*^9}, {
   3.934256210436245*^9, 3.93425622281748*^9}, {3.9342562598092937`*^9, 
   3.9342562620294914`*^9}, {3.934256371157954*^9, 3.934256371654802*^9}, {
   3.934256532487821*^9, 3.934256599162428*^9}, {3.934256630945957*^9, 
   3.9342566654469433`*^9}, {3.934256768191847*^9, 3.9342567815999203`*^9}, {
   3.934256977653244*^9, 3.934257019871137*^9}, {3.934257127320101*^9, 
   3.934257152448148*^9}, {3.934257187208832*^9, 3.934257203322611*^9}, {
   3.934257251652586*^9, 3.934257294380623*^9}, {3.934257324964519*^9, 
   3.934257402204836*^9}, {3.93425743271063*^9, 3.9342574379688425`*^9}, {
   3.934257482689863*^9, 3.9342575228193207`*^9}, {3.9342575534965115`*^9, 
   3.934257658234102*^9}, {3.934257690692085*^9, 3.934257691052969*^9}, {
   3.93425773832238*^9, 3.9342577499776516`*^9}, {3.9342578696540184`*^9, 
   3.9342579009522247`*^9}, 3.934258049986868*^9, {3.934258102150194*^9, 
   3.9342581313877287`*^9}, {3.93425848084878*^9, 3.934258561396479*^9}, {
   3.934258728910366*^9, 3.934258774005571*^9}, {3.934258836318752*^9, 
   3.934258861933759*^9}, {3.934258936503252*^9, 3.934258950718351*^9}, {
   3.93425905409062*^9, 3.934259283720697*^9}, {3.9342593517975426`*^9, 
   3.934259510362133*^9}, {3.934259573447159*^9, 3.934259579372688*^9}, {
   3.934259675323404*^9, 3.934259688831421*^9}, {3.93425971900489*^9, 
   3.934259731207443*^9}, {3.934259844957601*^9, 3.934259864041635*^9}, {
   3.934259969006559*^9, 3.934260069257091*^9}, {3.9342601089259624`*^9, 
   3.934260113216711*^9}, {3.934260247583893*^9, 3.934260502916891*^9}, {
   3.9342605341803265`*^9, 3.934260644548528*^9}, {3.934260680925674*^9, 
   3.9342607515434074`*^9}, 3.9342607961436768`*^9, {3.934260837154608*^9, 
   3.9342608488247623`*^9}, {3.934260899314638*^9, 3.934260968025322*^9}, {
   3.934261027928831*^9, 3.934261040043405*^9}, {3.9342610911634083`*^9, 
   3.934261107565439*^9}, {3.934261192674005*^9, 3.934261256155567*^9}, {
   3.9342613002886963`*^9, 3.934261312912697*^9}, {3.934261357587631*^9, 
   3.934261431449779*^9}, {3.934261816525936*^9, 3.934261911136787*^9}, {
   3.9342619421926804`*^9, 3.93426194842972*^9}, {3.934261986987398*^9, 
   3.934262063295345*^9}, {3.934262349692522*^9, 3.934262526948181*^9}, {
   3.934262578988544*^9, 3.934262616743025*^9}, {3.934262648815953*^9, 
   3.934262689181074*^9}, 3.934262721715179*^9, {3.9342678671630993`*^9, 
   3.934267982568657*^9}, {3.934268109263414*^9, 3.934268164379934*^9}, {
   3.934268202429563*^9, 3.934268207915645*^9}, {3.934268240622116*^9, 
   3.934268266107395*^9}, {3.934268304665712*^9, 3.934268317248129*^9}, {
   3.934268408670923*^9, 3.934268439925911*^9}, {3.934268580025875*^9, 
   3.934268746841158*^9}, {3.934268786688106*^9, 3.93426879727816*^9}, {
   3.934268832769846*^9, 3.934268833065399*^9}, {3.9342688834730206`*^9, 
   3.934268884779474*^9}, {3.9342689181861134`*^9, 3.93426895033342*^9}, {
   3.934269026859234*^9, 3.9342690989729595`*^9}, {3.934269210046318*^9, 
   3.934269212781697*^9}, {3.9342694106575317`*^9, 3.9342694300148926`*^9}, {
   3.934356930227701*^9, 3.934356989689789*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"33d03ffd-4d77-c646-93f8-9a70ac3dff59"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Numerator", " ", "of", " ", "eq", " ", "4.18"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztne9LG9ufx+/uPtmH+y/sf+CTxn0SwlKF716hkO8SDEgC/RL9fpeGe1F3
sULxSkEshCARQcFCQBAsCkGhMg8EoRJQUpBYUAIXA8UIQkAY8MFAoJv5cc6c
SWYy50xmzI++X8y9tNVMZubM+ZzP7/Pvf/v9rzP//Msvv8z/a/N/f3298J9z
c68X//vfmn+J/Tb/P3//bTr1X7/97/Tfp+f+42//0vzHheZ/W//0yy/qn38A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAwH9ZOVZDzRr8fut14/HwBA//NQmH0xMtqvR+6y188HAND/yOX9rdWF
pvIz9TLsKlhepTNbG5vdHUuv3cXXWKypjM0srW2cfu/18wEADBYNpXa5tzIV
cpQwvxfqXX/J1bqzBBufyX+5rSs+3AoA4KemcXc45yDKApVjsWxJ9uHyAQBA
pbqXem45NpG/9uHCAQCAUD/8/ZnlWPbKh8sGAAAK5BgAYNCBHAMADDqQYwD8
HDQU+VFWGr2+jECAHOtr6sXsm+S81NvkOvksk4wvHd319CKCp1Evrs8k3h7X
en0hvlO/LOTmaNZoOPWhUH0K9hvlL6uJ5OLh8723kGP9S+1ofuzFyOR6udd5
dkr1Uzr8IpTY6vmVBEbj7vBtePRFNHc5XLfYuDtdiTfHLrV1Vn3UEke/rE6+
GAlPbV8FeqNPt/tzodFIfPOZnufgyzGlnE/HE/+36lpfsH9pl7VWPXH+SDbz
oWerc+2oKTpGwnOFWl8YAsrVenS0L4RqABiJlKHZIdM57e9Llt6qM3EyfxPs
tz+Vc7GR51oaBl+Ofc3aZ9u2HiHbEs5KfqLTp5J7VX+vlg/lMttcNEdj2auA
9X8BGrf7aqHZ0E32oRXRytWWel/hD2ct92VMzFfblR9ycSfbsnxnjsqWs3zb
yawxv3BQFshh19NTI+nDez9uqBODL8caSr1aLp1fNI/ip8Uo813h6ezhlwv9
R6XrO3sP58NNSdpIRZgrjLxM/ZHdPTornZdVVfz5uS/MqtczkfvaZxPLyJoe
KuNL13tHX2VL/bNk+EJlW10KXyT325xUZGKmpbpSu2zOjuOcXgr9l+X984ur
75bBVe7L0nqy+dOx9Oq+dFH6U6wUp/pJ/WzwK/LgyzGWbxtMCfxEvsL3qaeL
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
jFUm6+udKdYq+Sjtamh4t2y/3X1w75gJ27/9W+z5KpgnKcAgy7EKm93Km8Bp
9faLJ2AwcU+1v4GLWaTnZodWXIJYQjU+pnvERnQ3NNFKb9D0FWtfYaaeNk9C
752Y20KDbuqQgiXJTzda6avgAuSC0QCQK1woVB1jehLslJ+n8uYUcy/UItAW
JlOoqichcSWSQefQwrHz4NaLmaj5df53NAoWUxPmMJ1Ezz2Qcky10+9OP7AS
afn0obUyuR3l4WZ/rtXJLFXrIo5u1k3tmmWhZc+6u4CY5EwnrwiDqkrZDlNz
sVaFWCgxRd52Isf0Pc5MO1pdAshqTiSSmJVNYxNCs4lWHr1N+1bDTvrYjHLe
BaP98lTlG1sPt2/ZKV9oQiyaoKKMTE9tazwzfqpaglRVM5xpnQqOnAZX7w5E
j/7fx6EFM1LM8ZILMkhyrMW75XzYuGSrO1HXDy7wNZughcaJXY4XyTHj0QJd
qjp1fzIxSni0hh7H1QdVql8dZd+oLfXCC0d3Px6OSV1zNHder18X1E6SrBHN
NJIi+b0CZac/mIcg0EuqcXeqzsRQKn+jMDG+7lLEdSEWzR1sG8Fody8ffeed
XffWyyaFnOGFnXLtUZYfbos7i2pfu0h886ts9qZoLlh/yrXzDbULKxtJNHOM
ySLYqaLEZnAr0rY2uNHU9ESHl7y/oaVbQbj1BkmOWfpadDhsNkGoG6bTeNSm
H0VMN8Q4M8qo7sSXuc0JtZFdq/N0GnLlaDlhLSwdS2dplrVyvfOG6cI6Gls+
tdcJiUkrphR5eAgt5ZNsjMbrkzTsLD3jhRaOuTvcqGfedZNT+kWljzNj1rUy
8W6nRCZJ7cQyFo49b4n0dlGl7Ad3u/Sg9CJzzCeC3YFikORYf0DjdO4vkvLI
3QnHLDwUSQhvKLXri9K5elTu266G/vTy1rFo0fCQC/oJzVQHztwVpaL1tGTb
a7OVYl72Tze0OzPjhZ7QvQ8ArSkQyr9S6tVL/WmXq+26K/3pteMeBOQK+VZM
c3DL1bp+i0zm2KA5x2h2ipexdgdyTBDqJe78iO5PVqbjiamX4aYixBePowGI
wPZcdv5S0SWyIhAf/OFUPkm7VQjIQwIJZ1jqyukJXbv+mqvGc2o1nuIpLEw0
c+CcY0QH7qJdRicgx8Sgtm2nF6k5TfRtTLWURd42QSLJA/5AYq80l6myO5Pa
dfd3kXeSqxSoruaBj4SnNtqyU/haSbRDHFZtaXsCe4AKpZz5AyknIXcqn36I
Z04F5hmTOTZwzjGycHhpNcMD5JgQXH6h5vumyy7djuDOK6AenmdSEkhyFJn1
qpbCIZqoMsOx2YFWdupYPmlpQsK5dcLTrRFxtjunWaPkGn2gRWr+d/y2h5Rq
ksFVtUeh2ArbEmHQnGNkjfbS+o8LyDERzDTaTi9S7XSnqNqSur4h8MrRafg8
+zoZA0RSAtSIP09qqHGRIVf5rPy5p4ZNHUMMLU1IJtxbhVAh5pTKQk/ovu7T
/BmxQK1XyEQjYrOSj7YmcnSGTeH2P480UMijjixydxsWBXLMHeV7uXR+IR1s
MD2rk0tbe5Lqg711nMz6zstiRiIZjqDUb+uX6cke2lirMmecp9SRGIOkFsAR
vo3bLGnJ7Dn1atC1MyZ7geQ/RJL5a8eHSg1G9xgoSZzz0DHAA0YHEi39VbW1
RVt8MP2OBsw5RvyWqQAvG3LMFfn0ve2NuFhDmh0hnlFg7I/mru34gJFaH56c
ehmOxDc5OqeRJs/RzW8df1nfKSOS3nfttse2cWa2F9FDA5ZOGkZVplvucXXv
jaa38OySqSWsBqonMNyfqFl8kZdqns/4vMRTHd+QSYT0eJMpgkisHetB6iA2
W/cbsk9WbOMqwIuFHAsG3Ymkq1XKjSTZdtu2x5hcr7Iljy25RGgo9Wq5dHlb
57k+Urnp1txD35iDt6WkLrLI6xF+8/FY0pK12qvv65WLqyqHeH+40ab5Td1V
pyV3FF17ltiKnkrhnJjRAls2bn88l3PPO8a6HMxWpCaQY8GgNwHWvM1KcVXM
vUkMqK56AQWAIWDdi+vr0h/zu86mXztypZCZfslKs9SHts1iAsLY0y3oieaF
+vmOtl2X7bG6kIznni3Y6g268Pm/gXgLkGOBoKdnqEZlUzGbzgpr1MYOhqHn
zCXrjBF55DSIvNFQZHV3XdcyWZ8xbi2yWnwGBfgnwqjgYJOfAwNyLBgezzKx
kdQf2aXXMx2c0p2QL3QXU7dtBn2Bz2k/uMhfVVHWbR85wOB57xhPQI4FhqZd
iOzQ3Ybuh4+kJZ+bAAuilDdj3Xaf7n+U6221vnvg6n36Er12fjJz5u6i9AfI
sf6me2E4HNfwPCjurZ8AF0p3HbCFgRwDAAw4lv2dmcOHPEwHCTlwJRUAgP7G
mrrDHl3sYqahfM1G7c8caFovAODnoiYtT3bKsouuSB5FWV1riel85vDCwY1j
RywAAHDCSM5Ru71JB6uzEyFnOWMe4Yl05uBYzffWEnucnL2K9tPadfPM2aXX
YZ4zj44nl7YKRbczAwCAiaWQzdvh1DG4nOv2zOJ7IAIAfkIgxwAAgw4t+uji
6GxXBnFmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIC+4wml
kQCAwUW52oqrWztN7XTdBBsAAHpBZZt0rkbLfQDAYCKfrES0JtWfu+rkDwAA
vaShYLs/AAAAAAAAAABeeMIG8gCAgUUu76b1nd1Cv77bqz71+noAAECIp3Iu
FkptXdQUufheTbqIfrzp9TUBAIAAlXw0/OFMNyhLa1ry2O+Feo8vCgAAuJFP
ll4k979rf27c5F9pG46vl3t8VQAAwI18sjia3Kvqf7nMhlUX2UT+uqfXBAAA
QjQU2fDqK6VMSDUqX22jshIAMJAoZxmtsjLx6bbXlwIAAF6QpXkt74L4ygAA
YMCQpbeIVAIABpnveynNqFyQZO3v8umHeOYUIg0AMDBUP8UtPccejxdezEuP
Pb4qAADgpn74u2ZUkmzYSj4aXS+j1BIAMEBcrWsZF1r6a724OhnLXqHEEgAw
WNyfrMRGRiMvE7Hw6Pi8dN/r6wEAAA80lNr1Ren6DjslAQAAAAAAAAAAAAAA
AAB+8f/NyiFh
       "], {{0, 71.39999999999999}, {244.79999999999998`, 0}}, {0, 255},
       ColorFunction->RGBColor,
       ImageResolution->{120., 120.},
       RasterInterpolation->"High"],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{154.79999999999993`, Automatic},
     ImageSizeRaw->{244.79999999999998`, 71.39999999999999},
     PlotRange->{{0, 244.79999999999998`}, {0, 71.39999999999999}}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"q", "^", 
      StyleBox["\[Rho]",
       FontWeight->"Bold"]}], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     RowBox[{"(", 
      StyleBox[
       RowBox[{
       "currently", " ", "only", " ", "supports", " ", "full", " ", 
        "tableaux"}],
       FontSlant->"Italic"], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"rhoPow", "[", "Y_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "N", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"N", "=", 
         RowBox[{"Total", "[", "Y", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"q", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"N", "-", 
               RowBox[{"2", " ", "i"}], "-", "1"}], ")"}], "/", "2"}], 
            ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{"N", "-", "1"}]}], "}"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Single", " ", "tableau"}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"singleTableau", "[", 
      RowBox[{"Y_", ",", "punct_", ",", "charFunc_", ",", "qlim_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "fug", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"fug", " ", "=", " ", 
         RowBox[{"flavFug", "[", 
          RowBox[{"Y", ",", "punct"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"fug", ",", 
          RowBox[{"Times", " ", "@@", " ", "fug"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"KY", "[", 
          RowBox[{"Y", ",", "punct", ",", "qlim"}], "]"}], 
         RowBox[{"charFunc", " ", "@@", " ", 
          RowBox[{"{", 
           RowBox[{"fug", "*", 
            RowBox[{"rhoPow", "[", "Y", "]"}]}], "}"}]}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Product", " ", "over", " ", "all", " ", "tableaux"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"productTableaux", " ", "[", 
      RowBox[{"YList_", ",", "dynkin_", ",", "qlim_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"rank", ",", "alg", ",", "charFunc"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"rank", " ", "=", " ", 
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"YList", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "1"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"alg", "=", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"\"\<A\>\"", "<>", 
           RowBox[{"ToString", "[", "rank", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"charFunc", " ", "=", " ", 
         RowBox[{"Function", "[", 
          RowBox[{"vars", ",", 
           RowBox[{"\[Chi]", "[", 
            RowBox[{"alg", ",", "dynkin", ",", "vars"}], "]"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Product", "[", 
         RowBox[{
          RowBox[{"singleTableau", "[", 
           RowBox[{
            RowBox[{"YList", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "i", ",", "charFunc", ",", 
            "qlim"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "YList", "]"}]}], "}"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwd0G1IU1EcBvBLFCFcbIihkui1FBMMbPNlVnYzBRtozJU4GMgYWX6I/GC+
ZVnpiNwd6xZ+CBWmpU7nUHxBUwMNhi8texHfClaRW3h1xhIxcUT5/D8cfnD4
n+c858QYSjXFBxiGid9fsNV7PPy0ejOTWwyKhFUJgTiodw5mwBm+SwX9Pzg1
NLratNBZUa6DPv62HspWXeTrP/duwNy0elJZO3ETNn7NK4UXeqUKyEzcb4BD
9usi1FYOkyWm5H7oOZxDigbbCGxflC3TvZL0hfr9sm5A1qbYhS3pt/5R/8K/
5+U4V340EzK1dZdge2WJCoa7zmggp+cLaD/siRsmjRm+QYc0zibjPUsrR2DL
bFQobKz3R8Bsy8VomHtMlgonk1RZcGFz5jL03KkrgOceWguhecUoQofOThoj
epsozz1PVn2SW6EyIb+T8jnTCM2/0b2nvIbgBci+nGNT0NddlAq7dkLOwrVr
Q9VwdzL6MVQLggV+bB4g2VM9L+D3R8864EG50A2VUz974PM1YRC+Wv/9Fprt
V82afSO92yJ8kH2iDTq8iaS23zJMBnyj8OTe3Sn4ru/QNIytUXyA/qdbn2mO
Lwu5gv8p85D/AUrYKJ8=
  "],
 CellLabel->"In[53]:=",ExpressionUUID->"3aee8f23-be18-db45-82c5-f907341a3342"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "K0", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
67CT
       "], {{0, 93.}, {275.4, 0}}, {0, 255},
       ColorFunction->RGBColor,
       ImageResolution->{120., 120.},
       RasterInterpolation->"High"],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{172.04999999999998`, Automatic},
     ImageSizeRaw->{275.4, 93.},
     PlotRange->{{0, 275.4}, {0, 93.}}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"K0", "[", 
     RowBox[{"N_", ",", "qlim_"}], "]"}], ":=", 
    RowBox[{"Product", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"q", "^", 
         RowBox[{"(", 
          RowBox[{"d", "+", "n"}], ")"}]}]}], ")"}], ",", 
      RowBox[{"{", 
       RowBox[{"d", ",", "2", ",", "N"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", 
        RowBox[{"qlim", "-", "d"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Schur", " ", "index"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztne1LW9275w8zb+bl/AvzH/RN47zZhKEKv6lwQ2YQBTHQg3p+g3JuWuem
FYqVgliQIBYPChYCAcGiIC3ckheCUAkYIiNJwRAoBkQLwobCBl9sCHSyH9ba
az9m7Yfs7CTfD+sczrkbdSd7Za9rXet7fa//9q9//q/5//Qv//IvS/+l/b/+
14vX/+PVqxfL//u/tv+fiX9f+j//9u9zs//z3//v3L/Nvfrv//qf2//xoP0/
/6/9euX//g0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAPEgnq5lp2ZiHPvfe/2WB4/Hm8N3Uwu7ZamXF3FzuDi18Kks
tXp5EUlD/nGwkp3fuezpnRkQMMEA6Fsejl8+fTIS49i66vVbHjCk8s50aiS9
+OVnjy9ELK1PPn0y+ubkHmuBinS5PZN+Irw6xgcSCZhgAPQ18q+7RnFvYcwa
Fbz8Kgb5dVc5a4AxNp8v1u9/yVFf+NDzWN2aaH/Cma2rRHy2918XhadYWxXk
q1x7WRyZyNUee30p3USWJCnGN4gJBkDfI51vpLsQacS83X44WclOLbzL7exu
e4+zW4eflq4O3H9kfSNfTVAevHX35VVq5Gnq5de7Xl8KRS59aF/Sk8mP1USE
Pr3i5/HLdOwzP06km1JheZbsTYTxxfxloGeFbzDBAOh7mp+noo80PpzH+Uy4
P57nO8dZ/PJg/2np7K3nT8X7XjyRax8zyiX9mbD93aMWryYq/okXPdH05OXx
YH4C8nVByX9OrB5e3cntuferfqhEvMLrYizBBiYYAH2O+HUx+kjjYzXqy/RE
lu6vy5ULZRQ/ZtkrmfyrULzQ/6nWdE5OSM1q6Wh10nT0k3n9Yfuw2P6p+n1y
4ozLXEa5vOxhs9eXYkM6XRa0WG5Qd/ReyJXNcWXavDhoJioCjAjnU6HrPWU2
ppfPfsVxDcM9wQDoewYh0mAQ/2bfzvIZ58nHT6KSHZvPX6i7tqQhV7f+ULPW
G+XExD4MrZvDF0+0fEs8KfXk0F6I1QgwtXGRxDsTlocT5VTIHt8SYfnKqfS7
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
xWQRSaTxT1vDzbhCa+V8x1F2q/h3JcG/N1Zk7jnZjwS2yR0IqENX760zpIZq
nqMv/cs2O+GoMbz4lLF1yfEjLamWz6r6gdUvjY7X555JJjo0Ek1JpY2ptVOO
hTRIpKHcYmF62+GoXfHvYmpsSaRh+yjiyiQr6azUjJPjgeLflYR2FVHRutFD
zdjdmaTm+f47atqZev5qr9Jx3pFqRIdyEjOuobV8vmEOYhufxjnrDX1HGj9P
Xo+5CJ5V/y5Gg0QmtjV9Sp+K3Q2tFT8BlzSj6t/lp/4dgASTFIcu6aa0m2Vb
4MVQ9WxWMnMENo83h6rRxOT7E77EvmsmmTQLJjlb5QHIJ0rxHWnItd2pUef6
PtU9hn3Gkn2cVQ5KK5K6mklWmuwIzqfqqn9XIpz9IoIcJcTc8kBuFOZHlQl8
oBiytb8C18pBlVLK2mlGEas3hxIq9ve7htbftwVWDqGcyGS4+nj6jTTo2avr
MH199BthFibdH5Pm6d0MramfgOuA/T4YCBJhnfHrpvRp8bm1W3EcKWVdCf/U
JX1q4fZkTRXzrH21nvy64ppJFouvTHKIRj4jcFrx+4w0aCTpOkzPcP1Mx7Sm
S2X66O5iJtlQCrmOAeo2Rbtmc7soR4C+T7fsKbQQovP0Ixoezy2Arm1wOIjU
zcDVFIF6r/m3Nn4iDfUo3HvCWxMF5GPZOGk+SGKzfLg2JUxk9Bige6G14iHs
fZ2DlcQDQ0tPrTPkh5vK1+2VuWfO62AcNhqkyPSpy7ORQSzlZtStny8xD8mZ
OGRL9B2i+hyTLnOT/EWOfiIN+ft2h02TvfKFFF3mr+6kX3eN4t7CWGpyYrzL
mWSlZUanBWKAzqyph0OMnVy0snG7+pQokzvm9KgtvPsrRS2ccE5WaM7Dwnjm
eTo1s+ladmonYNd4t2HfU7Skxtd1rbGaMJ5dKZTFpn6u2sXQmuka7zYWkluR
BAAfNMzg9QAMiKKBaY/beuWiXPpa0KqebRkM6wjac8cPxK5QHXb7CALpACLM
7dV8PnVqnwTX3aJyUtB+sgmTE4K/ACZg13j3RIFdnfJQzuuN1YTJv3LFhqT3
OOtiJpnpGu++Fa0MilSMnJ05VCR1C71+xCFVSCZJ5zKHRl7vleOx/krNqkMF
FuVRbF7V732q4qLpsOYHskcYoOAWgPjpfJTZ2xFHr2RiV+i5TZOqeaWgNTW7
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
+f9B8RzD
       "], {{0, 100.8}, {430.79999999999995`, 0}}, {0, 255},
       ColorFunction->RGBColor,
       ImageResolution->{120., 120.},
       RasterInterpolation->"High"],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{247.79999999999995`, Automatic},
     ImageSizeRaw->{430.79999999999995`, 100.8},
     PlotRange->{{0, 430.79999999999995`}, {0, 100.8}}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"schurIndex", "[", 
      RowBox[{"N_", ",", "genus_", ",", "YList_", ",", "qlim_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "n", ",", "rank", ",", "full", ",", "alg", ",", "dynkinList", ",", 
         "pow", ",", "result"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"n", " ", "=", " ", 
         RowBox[{"Length", "[", "YList", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rank", " ", "=", " ", 
         RowBox[{"N", "-", "1"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"full", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{"1", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "N"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"alg", "=", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"\"\<A\>\"", "<>", 
           RowBox[{"ToString", "[", "rank", "]"}]}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"dynkinList", "=", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Tuples", "[", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", "qlim"}], "]"}], ",", "rank"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Total", "[", "#", "]"}], "<=", "qlim"}], "&"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"pow", " ", "=", " ", 
         RowBox[{"n", "+", 
          RowBox[{"2", "genus"}], "-", "2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"result", " ", "=", " ", 
         RowBox[{
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"productTableaux", "[", 
              RowBox[{"YList", ",", 
               RowBox[{"dynkinList", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "qlim"}], "]"}], "/", 
             RowBox[{
              RowBox[{"\[Chi]", "[", 
               RowBox[{"alg", ",", 
                RowBox[{"dynkinList", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"rhoPow", "[", "full", "]"}]}], "]"}], "^", "pow"}]}],
             ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "dynkinList", "]"}]}], "}"}]}], "]"}], 
          "/", 
          RowBox[{
           RowBox[{"K0", "[", 
            RowBox[{"N", ",", "qlim"}], "]"}], "^", "pow"}]}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.934427345386833*^9, 3.934427437548212*^9}, {
   3.9344276081504974`*^9, 3.9344276480594654`*^9}, {3.9344276781200485`*^9, 
   3.934427764407398*^9}, {3.934427868533909*^9, 3.934427897520149*^9}, 
   3.934427929754875*^9, {3.9344279909112263`*^9, 3.9344280769153023`*^9}, {
   3.9344283571503353`*^9, 3.9344284336964207`*^9}, {3.9344284655497704`*^9, 
   3.934428505868431*^9}, {3.93442854970986*^9, 3.934428555390581*^9}, {
   3.934428754737072*^9, 3.934428755838913*^9}, {3.93442900427606*^9, 
   3.934429004432625*^9}, {3.934429047264633*^9, 3.9344290530623817`*^9}, {
   3.934429092573925*^9, 3.93442910149646*^9}, {3.934429178662552*^9, 
   3.9344292137485886`*^9}, {3.9344292588956985`*^9, 
   3.9344295682843933`*^9}, {3.934429614398531*^9, 3.934429648927948*^9}, {
   3.934429690955208*^9, 3.934429701032215*^9}, {3.934429734922758*^9, 
   3.934429768322172*^9}, {3.9344297999949303`*^9, 3.934430020336111*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"001d2104-1b62-2841-89ed-6c84a179c504"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Example", ":", " ", 
     RowBox[{"SU", 
      RowBox[{"(", "2", ")"}], " ", "genus", " ", "0", " ", "surface", " ", 
      "with", " ", "2", " ", "full", " ", "punctures"}]}], ",", " ", 
    RowBox[{"to", " ", "order", " ", 
     RowBox[{"q", "^", "2"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"temp", " ", "=", " ", 
   RowBox[{"schurIndex", "[", 
    RowBox[{"2", ",", "0", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", "2"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9344302381912556`*^9, 3.9344303121806107`*^9}, 
   3.934430464883091*^9},
 CellLabel->
  "In[197]:=",ExpressionUUID->"da61cc32-3de7-c94f-80c6-abfc0d38e24a"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", " ", "q"}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["q", "2"]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["q", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SubscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["q", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SubscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["q", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
          SubscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["q", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}]]}], ")"}]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["q", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "2"}]]}], ")"}]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["q", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}]], "+", 
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "2"}]]}], ")"}]}]}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"q", " ", 
        SubscriptBox["a", 
         RowBox[{"\<\"1\"\>", ",", "1"}]]}]], "+", 
      RowBox[{"q", " ", 
       SubscriptBox["a", 
        RowBox[{"\<\"1\"\>", ",", "1"}]]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"q", " ", 
        SubscriptBox["a", 
         RowBox[{"\<\"2\"\>", ",", "1"}]]}]], "+", 
      RowBox[{"q", " ", 
       SubscriptBox["a", 
        RowBox[{"\<\"2\"\>", ",", "1"}]]}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", " ", "q"}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["q", "2"]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["q", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SubscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["q", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SubscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["q", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
          SubscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["q", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}]]}], ")"}]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["q", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "2"}]]}], ")"}]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["q", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}]], "+", 
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "2"}]]}], ")"}]}]}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["q", "2"], " ", 
        SubsuperscriptBox["a", 
         RowBox[{"\<\"1\"\>", ",", "1"}], "2"]}]], "+", 
      RowBox[{
       SuperscriptBox["q", "2"], " ", 
       SubsuperscriptBox["a", 
        RowBox[{"\<\"1\"\>", ",", "1"}], "2"]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["q", "2"], " ", 
        SubsuperscriptBox["a", 
         RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}]], "+", 
      RowBox[{
       SuperscriptBox["q", "2"], " ", 
       SubsuperscriptBox["a", 
        RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", " ", "q"}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["q", "2"]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["q", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SubscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["q", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SubscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["q", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
          SubscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["q", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}]]}], ")"}]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["q", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "2"}]]}], ")"}]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["q", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}]], "+", 
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "2"}]]}], ")"}]}]}], ")"}], 
     "2"]}]]}]], "Output",
 CellChangeTimes->{{3.9344303046895256`*^9, 3.9344303124954777`*^9}, 
   3.9344304680058403`*^9},
 CellLabel->
  "Out[197]=",ExpressionUUID->"3cac0490-eeb6-7640-9478-0f00e9c9589a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"series", " ", "expand", " ", 
    RowBox[{"(", 
     RowBox[{"to", " ", "build", " ", "into", " ", "function"}], ")"}]}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Series", "[", 
   RowBox[{"temp", ",", 
    RowBox[{"{", 
     RowBox[{"q", ",", "0", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9344303264727097`*^9, 
  3.9344303745753517`*^9}},ExpressionUUID->"317911da-06e9-a940-9546-\
0dc47fa3be0e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SubsuperscriptBox["a", 
      RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
     SubsuperscriptBox["a", 
      RowBox[{"\<\"2\"\>", ",", "1"}], "2"], " ", 
     SuperscriptBox["q", "4"]}]], "+", 
   FractionBox["4", 
    RowBox[{
     SubsuperscriptBox["a", 
      RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
     SubsuperscriptBox["a", 
      RowBox[{"\<\"2\"\>", ",", "1"}], "2"], " ", 
     SuperscriptBox["q", "3"]}]], "+", 
   FractionBox[
    RowBox[{"24", "+", 
     RowBox[{"4", " ", 
      SubscriptBox["a", 
       RowBox[{"\<\"1\"\>", ",", "1"}]]}], "+", 
     SubsuperscriptBox["a", 
      RowBox[{"\<\"1\"\>", ",", "1"}], "2"], "+", 
     RowBox[{"4", " ", 
      SubscriptBox["a", 
       RowBox[{"\<\"1\"\>", ",", "2"}]]}], "+", 
     RowBox[{"4", " ", 
      SubscriptBox["a", 
       RowBox[{"\<\"2\"\>", ",", "1"}]]}], "+", 
     RowBox[{
      SubscriptBox["a", 
       RowBox[{"\<\"1\"\>", ",", "1"}]], " ", 
      SubscriptBox["a", 
       RowBox[{"\<\"2\"\>", ",", "1"}]]}], "+", 
     SubsuperscriptBox["a", 
      RowBox[{"\<\"2\"\>", ",", "1"}], "2"], "+", 
     RowBox[{"4", " ", 
      SubscriptBox["a", 
       RowBox[{"\<\"2\"\>", ",", "2"}]]}]}], 
    RowBox[{
     SubsuperscriptBox["a", 
      RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
     SubsuperscriptBox["a", 
      RowBox[{"\<\"2\"\>", ",", "1"}], "2"], " ", 
     SuperscriptBox["q", "2"]}]], "+", 
   FractionBox[
    RowBox[{
     FractionBox["4", 
      SubsuperscriptBox["a", 
       RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
     FractionBox[
      RowBox[{"4", "+", 
       FractionBox["48", 
        SubsuperscriptBox["a", 
         RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
       FractionBox[
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SubscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
        SubsuperscriptBox["a", 
         RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
       FractionBox[
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SubscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
        SubsuperscriptBox["a", 
         RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
       FractionBox[
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
           SubscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
        SubsuperscriptBox["a", 
         RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], 
      SubsuperscriptBox["a", 
       RowBox[{"\<\"2\"\>", ",", "1"}], "2"]], "+", 
     FractionBox["4", 
      RowBox[{
       SubscriptBox["a", 
        RowBox[{"\<\"1\"\>", ",", "1"}]], " ", 
       SubscriptBox["a", 
        RowBox[{"\<\"2\"\>", ",", "1"}]]}]], "+", 
     FractionBox[
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SubscriptBox["a", 
          RowBox[{"\<\"2\"\>", ",", "1"}]]}], ")"}]}], 
      RowBox[{
       SubsuperscriptBox["a", 
        RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
       SubsuperscriptBox["a", 
        RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}]], "+", 
     FractionBox[
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SubscriptBox["a", 
          RowBox[{"\<\"2\"\>", ",", "2"}]]}], ")"}]}], 
      RowBox[{
       SubsuperscriptBox["a", 
        RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
       SubsuperscriptBox["a", 
        RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}]], "+", 
     FractionBox[
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"\<\"2\"\>", ",", "1"}]], "+", 
         SubscriptBox["a", 
          RowBox[{"\<\"2\"\>", ",", "2"}]]}], ")"}]}], 
      RowBox[{
       SubsuperscriptBox["a", 
        RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
       SubsuperscriptBox["a", 
        RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}]]}], "q"], "+", 
   RowBox[{"(", 
    RowBox[{"2", "+", 
     FractionBox["16", 
      SubsuperscriptBox["a", 
       RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SubscriptBox["a", 
          RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
      SubsuperscriptBox["a", 
       RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SubscriptBox["a", 
          RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
      SubsuperscriptBox["a", 
       RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
         SubscriptBox["a", 
          RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
      SubsuperscriptBox["a", 
       RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
     RowBox[{
      FractionBox["1", 
       SubsuperscriptBox["a", 
        RowBox[{"\<\"2\"\>", ",", "1"}], "2"]], 
      RowBox[{"(", 
       RowBox[{"16", "+", 
        FractionBox["140", 
         SubsuperscriptBox["a", 
          RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
        FractionBox[
         RowBox[{"3", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "-", 
             SubscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}], "2"]}], 
         SubsuperscriptBox["a", 
          RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
        SubsuperscriptBox["a", 
         RowBox[{"\<\"1\"\>", ",", "1"}], "2"], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox["16", 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SubscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], "+", 
        FractionBox[
         RowBox[{"3", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "-", 
             SubscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}], "2"]}], 
         SubsuperscriptBox["a", 
          RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
        FractionBox[
         RowBox[{"3", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SubscriptBox["a", 
               RowBox[{"\<\"1\"\>", ",", "1"}]]}], "-", 
             SubscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}], "2"]}], 
         SubsuperscriptBox["a", 
          RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox["16", 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SubscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
           SubscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox["16", 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], ")"}]}]}], ")"}]}], 
     "+", 
     FractionBox[
      RowBox[{"3", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}]]}], ")"}], "2"]}], 
      RowBox[{
       SubsuperscriptBox["a", 
        RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
       SubsuperscriptBox["a", 
        RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}]], "+", 
     FractionBox[
      SubsuperscriptBox["a", 
       RowBox[{"\<\"2\"\>", ",", "1"}], "2"], 
      SubsuperscriptBox["a", 
       RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", 
         SubsuperscriptBox["a", 
          RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
        FractionBox[
         RowBox[{"1", "+", 
          FractionBox["16", 
           SubsuperscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SubscriptBox["a", 
               RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
           SubsuperscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SubscriptBox["a", 
               RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
           SubsuperscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["a", 
               RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
              SubscriptBox["a", 
               RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
           SubsuperscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], 
         SubsuperscriptBox["a", 
          RowBox[{"\<\"2\"\>", ",", "1"}], "2"]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SubscriptBox["a", 
         RowBox[{"\<\"2\"\>", ",", "1"}]]}], ")"}]}], "+", 
     FractionBox[
      RowBox[{"3", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "2"}]]}], ")"}], "2"]}], 
      RowBox[{
       SubsuperscriptBox["a", 
        RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
       SubsuperscriptBox["a", 
        RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}]], "+", 
     FractionBox[
      RowBox[{"3", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["a", 
            RowBox[{"\<\"2\"\>", ",", "1"}]]}], "-", 
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "2"}]]}], ")"}], "2"]}], 
      RowBox[{
       SubsuperscriptBox["a", 
        RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
       SubsuperscriptBox["a", 
        RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}]], "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", 
         SubsuperscriptBox["a", 
          RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
        FractionBox[
         RowBox[{"1", "+", 
          FractionBox["16", 
           SubsuperscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SubscriptBox["a", 
               RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
           SubsuperscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SubscriptBox["a", 
               RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
           SubsuperscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["a", 
               RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
              SubscriptBox["a", 
               RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
           SubsuperscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], 
         SubsuperscriptBox["a", 
          RowBox[{"\<\"2\"\>", ",", "1"}], "2"]], "+", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SubscriptBox["a", 
             RowBox[{"\<\"2\"\>", ",", "1"}]]}], ")"}]}], 
         RowBox[{
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SubscriptBox["a", 
         RowBox[{"\<\"2\"\>", ",", "2"}]]}], ")"}]}], "+", 
     FractionBox[
      RowBox[{"24", "+", 
       RowBox[{"4", " ", 
        SubscriptBox["a", 
         RowBox[{"\<\"1\"\>", ",", "1"}]]}], "+", 
       SubsuperscriptBox["a", 
        RowBox[{"\<\"1\"\>", ",", "1"}], "2"], "+", 
       RowBox[{"4", " ", 
        SubscriptBox["a", 
         RowBox[{"\<\"1\"\>", ",", "2"}]]}], "+", 
       RowBox[{"4", " ", 
        SubscriptBox["a", 
         RowBox[{"\<\"2\"\>", ",", "1"}]]}], "+", 
       SubsuperscriptBox["a", 
        RowBox[{"\<\"2\"\>", ",", "1"}], "2"], "+", 
       RowBox[{"4", " ", 
        SubscriptBox["a", 
         RowBox[{"\<\"2\"\>", ",", "2"}]]}]}], 
      RowBox[{
       SubscriptBox["a", 
        RowBox[{"\<\"1\"\>", ",", "1"}]], " ", 
       SubscriptBox["a", 
        RowBox[{"\<\"2\"\>", ",", "1"}]]}]], "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["a", 
         RowBox[{"\<\"2\"\>", ",", "1"}]], "+", 
        SubscriptBox["a", 
         RowBox[{"\<\"2\"\>", ",", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", 
         SubsuperscriptBox["a", 
          RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
        FractionBox[
         RowBox[{"1", "+", 
          FractionBox["16", 
           SubsuperscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SubscriptBox["a", 
               RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
           SubsuperscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SubscriptBox["a", 
               RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
           SubsuperscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["a", 
               RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
              SubscriptBox["a", 
               RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
           SubsuperscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], 
         SubsuperscriptBox["a", 
          RowBox[{"\<\"2\"\>", ",", "1"}], "2"]], "+", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SubscriptBox["a", 
             RowBox[{"\<\"2\"\>", ",", "1"}]]}], ")"}]}], 
         RowBox[{
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}]], "+", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SubscriptBox["a", 
             RowBox[{"\<\"2\"\>", ",", "2"}]]}], ")"}]}], 
         RowBox[{
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}]]}], ")"}]}]}], ")"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"8", "+", 
      FractionBox["48", 
       SubsuperscriptBox["a", 
        RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SubscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
       SubsuperscriptBox["a", 
        RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SubscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
       SubsuperscriptBox["a", 
        RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
          SubscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
       SubsuperscriptBox["a", 
        RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
      RowBox[{
       FractionBox["1", 
        SubsuperscriptBox["a", 
         RowBox[{"\<\"2\"\>", ",", "1"}], "2"]], 
       RowBox[{"(", 
        RowBox[{"48", "+", 
         FractionBox["368", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         FractionBox[
          RowBox[{"12", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "-", 
              SubscriptBox["a", 
               RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}], "2"]}], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         RowBox[{"4", " ", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"4", "+", 
            FractionBox["48", 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SubscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], "+", 
         FractionBox[
          RowBox[{"12", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "-", 
              SubscriptBox["a", 
               RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}], "2"]}], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         FractionBox[
          RowBox[{"12", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}]]}], "-", 
              SubscriptBox["a", 
               RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}], "2"]}], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"4", "+", 
            FractionBox["48", 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
            FractionBox[
             RowBox[{"8", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SubscriptBox["a", 
                 RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SubscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
            SubscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"4", "+", 
            FractionBox["48", 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
            FractionBox[
             RowBox[{"8", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SubscriptBox["a", 
                 RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
            FractionBox[
             RowBox[{"8", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SubscriptBox["a", 
                 RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], ")"}]}]}], ")"}]}], 
      "+", 
      FractionBox[
       RowBox[{"12", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           SubscriptBox["a", 
            RowBox[{"\<\"2\"\>", ",", "1"}]]}], ")"}], "2"]}], 
       RowBox[{
        SubsuperscriptBox["a", 
         RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
        SubsuperscriptBox["a", 
         RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}]], "+", 
      FractionBox[
       RowBox[{"4", " ", 
        SubsuperscriptBox["a", 
         RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}], 
       SubsuperscriptBox["a", 
        RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["4", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         FractionBox[
          RowBox[{"4", "+", 
           FractionBox["48", 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
           FractionBox[
            RowBox[{"8", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
           FractionBox[
            RowBox[{"8", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
           FractionBox[
            RowBox[{"8", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}], "2"]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SubscriptBox["a", 
          RowBox[{"\<\"2\"\>", ",", "1"}]]}], ")"}]}], "+", 
      FractionBox[
       RowBox[{"12", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           SubscriptBox["a", 
            RowBox[{"\<\"2\"\>", ",", "2"}]]}], ")"}], "2"]}], 
       RowBox[{
        SubsuperscriptBox["a", 
         RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
        SubsuperscriptBox["a", 
         RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}]], "+", 
      FractionBox[
       RowBox[{"12", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SubscriptBox["a", 
             RowBox[{"\<\"2\"\>", ",", "1"}]]}], "-", 
           SubscriptBox["a", 
            RowBox[{"\<\"2\"\>", ",", "2"}]]}], ")"}], "2"]}], 
       RowBox[{
        SubsuperscriptBox["a", 
         RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
        SubsuperscriptBox["a", 
         RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}]], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["4", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         FractionBox[
          RowBox[{"4", "+", 
           FractionBox["48", 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
           FractionBox[
            RowBox[{"8", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
           FractionBox[
            RowBox[{"8", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
           FractionBox[
            RowBox[{"8", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}], "2"]], "+", 
         FractionBox[
          RowBox[{"8", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SubscriptBox["a", 
              RowBox[{"\<\"2\"\>", ",", "1"}]]}], ")"}]}], 
          RowBox[{
           SubsuperscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
           SubsuperscriptBox["a", 
            RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SubscriptBox["a", 
          RowBox[{"\<\"2\"\>", ",", "2"}]]}], ")"}]}], "+", 
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{"20", "+", 
          RowBox[{"4", " ", 
           SubscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "1"}]]}], "+", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "2"}]]}], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["a", 
            RowBox[{"\<\"2\"\>", ",", "1"}]]}], "+", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}], "2"], "+", 
          RowBox[{"4", " ", 
           SubscriptBox["a", 
            RowBox[{"\<\"2\"\>", ",", "2"}]]}]}], ")"}]}], 
       RowBox[{
        SubscriptBox["a", 
         RowBox[{"\<\"1\"\>", ",", "1"}]], " ", 
        SubscriptBox["a", 
         RowBox[{"\<\"2\"\>", ",", "1"}]]}]], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"\<\"2\"\>", ",", "1"}]], "+", 
         SubscriptBox["a", 
          RowBox[{"\<\"2\"\>", ",", "2"}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["4", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         FractionBox[
          RowBox[{"4", "+", 
           FractionBox["48", 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
           FractionBox[
            RowBox[{"8", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
           FractionBox[
            RowBox[{"8", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
           FractionBox[
            RowBox[{"8", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}], "2"]], "+", 
         FractionBox[
          RowBox[{"8", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SubscriptBox["a", 
              RowBox[{"\<\"2\"\>", ",", "1"}]]}], ")"}]}], 
          RowBox[{
           SubsuperscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
           SubsuperscriptBox["a", 
            RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}]], "+", 
         FractionBox[
          RowBox[{"8", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SubscriptBox["a", 
              RowBox[{"\<\"2\"\>", ",", "2"}]]}], ")"}]}], 
          RowBox[{
           SubsuperscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
           SubsuperscriptBox["a", 
            RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}]]}], ")"}]}]}], ")"}], " ",
     "q"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"16", "+", 
      FractionBox["140", 
       SubsuperscriptBox["a", 
        RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           SubscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}], "2"]}], 
       SubsuperscriptBox["a", 
        RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
      SubsuperscriptBox["a", 
       RowBox[{"\<\"1\"\>", ",", "1"}], "2"], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox["16", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SubscriptBox["a", 
          RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           SubscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}], "2"]}], 
       SubsuperscriptBox["a", 
        RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SubscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}]]}], "-", 
           SubscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}], "2"]}], 
       SubsuperscriptBox["a", 
        RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox["16", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SubscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SubscriptBox["a", 
          RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
         SubscriptBox["a", 
          RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox["16", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SubscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SubscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], ")"}]}], "+", 
      RowBox[{"3", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         FractionBox[
          RowBox[{"1", "+", 
           FractionBox["16", 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}], "2"]]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}]]}], ")"}], "2"]}], "+", 
      RowBox[{
       FractionBox["1", 
        SubsuperscriptBox["a", 
         RowBox[{"\<\"2\"\>", ",", "1"}], "2"]], 
       RowBox[{"(", 
        RowBox[{"140", "+", 
         RowBox[{"3", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox["16", 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "-", 
             SubscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}], "2"]}], "+", 
         FractionBox["944", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "-", 
         FractionBox[
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "-", 
              SubscriptBox["a", 
               RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}], "3"]}], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         RowBox[{"16", " ", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SubscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"16", "+", 
            FractionBox["140", 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]}], ")"}]}], "+", 
         RowBox[{"3", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox["16", 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
            FractionBox[
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SubscriptBox["a", 
                 RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "-", 
             SubscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}], "2"]}], "-", 
         FractionBox[
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "-", 
              SubscriptBox["a", 
               RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}], "3"]}], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "-", 
         FractionBox[
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}]]}], "-", 
              SubscriptBox["a", 
               RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}], "3"]}], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"16", "+", 
            FractionBox["140", 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
            FractionBox[
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 SubscriptBox["a", 
                  RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}], "2"]}], 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               FractionBox["16", 
                SubsuperscriptBox["a", 
                 RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SubscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SubscriptBox["a", 
               RowBox[{"\<\"1\"\>", ",", "1"}]]}], "-", 
             SubscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox["16", 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
            FractionBox[
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SubscriptBox["a", 
                 RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
            FractionBox[
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SubscriptBox["a", 
                 RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
            SubscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"16", "+", 
            FractionBox["140", 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
            FractionBox[
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 SubscriptBox["a", 
                  RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}], "2"]}], 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               FractionBox["16", 
                SubsuperscriptBox["a", 
                 RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], "+", 
            FractionBox[
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 SubscriptBox["a", 
                  RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}], "2"]}], 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               FractionBox["16", 
                SubsuperscriptBox["a", 
                 RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
               FractionBox[
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   SubscriptBox["a", 
                    RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
                SubsuperscriptBox["a", 
                 RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}]}], ")"}]}]}], 
        ")"}]}], "-", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           SubscriptBox["a", 
            RowBox[{"\<\"2\"\>", ",", "1"}]]}], ")"}], "3"]}], 
       RowBox[{
        SubsuperscriptBox["a", 
         RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
        SubsuperscriptBox["a", 
         RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}]], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox["16", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SubscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SubscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
             SubscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], ")"}], " ", 
       SubsuperscriptBox["a", 
        RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SubscriptBox["a", 
          RowBox[{"\<\"2\"\>", ",", "1"}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox["16", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SubscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SubscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
             SubscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         RowBox[{
          FractionBox["1", 
           SubsuperscriptBox["a", 
            RowBox[{"\<\"2\"\>", ",", "1"}], "2"]], 
          RowBox[{"(", 
           RowBox[{"16", "+", 
            FractionBox["140", 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
            FractionBox[
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 SubscriptBox["a", 
                  RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}], "2"]}], 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               FractionBox["16", 
                SubsuperscriptBox["a", 
                 RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], "+", 
            FractionBox[
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 SubscriptBox["a", 
                  RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}], "2"]}], 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
            FractionBox[
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  SubscriptBox["a", 
                   RowBox[{"\<\"1\"\>", ",", "1"}]]}], "-", 
                 SubscriptBox["a", 
                  RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}], "2"]}], 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               FractionBox["16", 
                SubsuperscriptBox["a", 
                 RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
               FractionBox[
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   SubscriptBox["a", 
                    RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
                SubsuperscriptBox["a", 
                 RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               FractionBox["16", 
                SubsuperscriptBox["a", 
                 RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
               FractionBox[
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   SubscriptBox["a", 
                    RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
                SubsuperscriptBox["a", 
                 RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
               FractionBox[
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   SubscriptBox["a", 
                    RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
                SubsuperscriptBox["a", 
                 RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], ")"}]}]}], ")"}]}],
          "+", 
         FractionBox[
          SubsuperscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}], "2"], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], ")"}]}], "+", 
      RowBox[{"3", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         FractionBox[
          RowBox[{"1", "+", 
           FractionBox["16", 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}], "2"]], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SubscriptBox["a", 
              RowBox[{"\<\"2\"\>", ",", "1"}]]}], ")"}]}], 
          RowBox[{
           SubsuperscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
           SubsuperscriptBox["a", 
            RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}]]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "2"}]]}], ")"}], "2"]}], "-", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           SubscriptBox["a", 
            RowBox[{"\<\"2\"\>", ",", "2"}]]}], ")"}], "3"]}], 
       RowBox[{
        SubsuperscriptBox["a", 
         RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
        SubsuperscriptBox["a", 
         RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}]], "-", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SubscriptBox["a", 
             RowBox[{"\<\"2\"\>", ",", "1"}]]}], "-", 
           SubscriptBox["a", 
            RowBox[{"\<\"2\"\>", ",", "2"}]]}], ")"}], "3"]}], 
       RowBox[{
        SubsuperscriptBox["a", 
         RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
        SubsuperscriptBox["a", 
         RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}]], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox["16", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SubscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SubscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
             SubscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         RowBox[{
          FractionBox["1", 
           SubsuperscriptBox["a", 
            RowBox[{"\<\"2\"\>", ",", "1"}], "2"]], 
          RowBox[{"(", 
           RowBox[{"16", "+", 
            FractionBox["140", 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
            FractionBox[
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 SubscriptBox["a", 
                  RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}], "2"]}], 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               FractionBox["16", 
                SubsuperscriptBox["a", 
                 RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], "+", 
            FractionBox[
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 SubscriptBox["a", 
                  RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}], "2"]}], 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
            FractionBox[
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  SubscriptBox["a", 
                   RowBox[{"\<\"1\"\>", ",", "1"}]]}], "-", 
                 SubscriptBox["a", 
                  RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}], "2"]}], 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               FractionBox["16", 
                SubsuperscriptBox["a", 
                 RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
               FractionBox[
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   SubscriptBox["a", 
                    RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
                SubsuperscriptBox["a", 
                 RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               FractionBox["16", 
                SubsuperscriptBox["a", 
                 RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
               FractionBox[
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   SubscriptBox["a", 
                    RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
                SubsuperscriptBox["a", 
                 RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
               FractionBox[
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   SubscriptBox["a", 
                    RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
                SubsuperscriptBox["a", 
                 RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], ")"}]}]}], ")"}]}],
          "+", 
         FractionBox[
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "-", 
              SubscriptBox["a", 
               RowBox[{"\<\"2\"\>", ",", "1"}]]}], ")"}], "2"]}], 
          RowBox[{
           SubsuperscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
           SubsuperscriptBox["a", 
            RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}]], "+", 
         FractionBox[
          SubsuperscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}], "2"], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["1", 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
            FractionBox[
             RowBox[{"1", "+", 
              FractionBox["16", 
               SubsuperscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
              FractionBox[
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  SubscriptBox["a", 
                   RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
               SubsuperscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
              FractionBox[
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  SubscriptBox["a", 
                   RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
               SubsuperscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
              FractionBox[
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SubscriptBox["a", 
                   RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
                  SubscriptBox["a", 
                   RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
               SubsuperscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"2\"\>", ",", "1"}], "2"]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SubscriptBox["a", 
             RowBox[{"\<\"2\"\>", ",", "1"}]]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SubscriptBox["a", 
          RowBox[{"\<\"2\"\>", ",", "2"}]]}], ")"}]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{"6", "+", 
         SubscriptBox["a", 
          RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
         SubscriptBox["a", 
          RowBox[{"\<\"1\"\>", ",", "2"}]], "+", 
         SubscriptBox["a", 
          RowBox[{"\<\"2\"\>", ",", "1"}]], "+", 
         SubscriptBox["a", 
          RowBox[{"\<\"2\"\>", ",", "2"}]]}], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"\<\"1\"\>", ",", "1"}]], " ", 
         SubscriptBox["a", 
          RowBox[{"\<\"2\"\>", ",", "1"}]]}]], 
       RowBox[{"(", 
        RowBox[{"304", "+", 
         RowBox[{"98", " ", 
          SubscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}]]}], "+", 
         RowBox[{"34", " ", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]}], "+", 
         RowBox[{"4", " ", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "3"]}], "+", 
         RowBox[{"98", " ", 
          SubscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "2"}]]}], "+", 
         RowBox[{"18", " ", 
          SubscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}]], " ", 
          SubscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "2"}]]}], "+", 
         RowBox[{"4", " ", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
          SubscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "2"}]]}], "+", 
         RowBox[{"10", " ", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "2"}], "2"]}], "+", 
         RowBox[{"98", " ", 
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}]]}], "+", 
         RowBox[{"16", " ", 
          SubscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}]], " ", 
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}]]}], "+", 
         RowBox[{"4", " ", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}]]}], "+", 
         RowBox[{"16", " ", 
          SubscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "2"}]], " ", 
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}]]}], "+", 
         RowBox[{"34", " ", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}], "+", 
         RowBox[{"4", " ", 
          SubscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}]], " ", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}], "+", 
         RowBox[{
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}], "+", 
         RowBox[{"4", " ", 
          SubscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "2"}]], " ", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}], "+", 
         RowBox[{"4", " ", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}], "3"]}], "+", 
         RowBox[{"98", " ", 
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "2"}]]}], "+", 
         RowBox[{"16", " ", 
          SubscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}]], " ", 
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "2"}]]}], "+", 
         RowBox[{"4", " ", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "2"}]]}], "+", 
         RowBox[{"16", " ", 
          SubscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "2"}]], " ", 
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "2"}]]}], "+", 
         RowBox[{"18", " ", 
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}]], " ", 
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "2"}]]}], "+", 
         RowBox[{"4", " ", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}], "2"], " ", 
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "2"}]]}], "+", 
         RowBox[{"10", " ", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "2"}], "2"]}]}], ")"}]}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["a", 
            RowBox[{"\<\"2\"\>", ",", "1"}]]}], "-", 
          SubscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "2"}]]}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         FractionBox[
          RowBox[{"1", "+", 
           FractionBox["16", 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}], "2"]], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SubscriptBox["a", 
              RowBox[{"\<\"2\"\>", ",", "1"}]]}], ")"}]}], 
          RowBox[{
           SubsuperscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
           SubsuperscriptBox["a", 
            RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}]], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SubscriptBox["a", 
              RowBox[{"\<\"2\"\>", ",", "2"}]]}], ")"}]}], 
          RowBox[{
           SubsuperscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
           SubsuperscriptBox["a", 
            RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}]]}], ")"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"\<\"2\"\>", ",", "1"}]], "+", 
         SubscriptBox["a", 
          RowBox[{"\<\"2\"\>", ",", "2"}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox["16", 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SubscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SubscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
             SubscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         RowBox[{
          FractionBox["1", 
           SubsuperscriptBox["a", 
            RowBox[{"\<\"2\"\>", ",", "1"}], "2"]], 
          RowBox[{"(", 
           RowBox[{"16", "+", 
            FractionBox["140", 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
            FractionBox[
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 SubscriptBox["a", 
                  RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}], "2"]}], 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
            SubsuperscriptBox["a", 
             RowBox[{"\<\"1\"\>", ",", "1"}], "2"], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               FractionBox["16", 
                SubsuperscriptBox["a", 
                 RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], "+", 
            FractionBox[
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 SubscriptBox["a", 
                  RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}], "2"]}], 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
            FractionBox[
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  SubscriptBox["a", 
                   RowBox[{"\<\"1\"\>", ",", "1"}]]}], "-", 
                 SubscriptBox["a", 
                  RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}], "2"]}], 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               FractionBox["16", 
                SubsuperscriptBox["a", 
                 RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
               FractionBox[
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   SubscriptBox["a", 
                    RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
                SubsuperscriptBox["a", 
                 RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
               SubscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               FractionBox["16", 
                SubsuperscriptBox["a", 
                 RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
               FractionBox[
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   SubscriptBox["a", 
                    RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
                SubsuperscriptBox["a", 
                 RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
               FractionBox[
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   SubscriptBox["a", 
                    RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
                SubsuperscriptBox["a", 
                 RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], ")"}]}]}], ")"}]}],
          "+", 
         FractionBox[
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "-", 
              SubscriptBox["a", 
               RowBox[{"\<\"2\"\>", ",", "1"}]]}], ")"}], "2"]}], 
          RowBox[{
           SubsuperscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
           SubsuperscriptBox["a", 
            RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}]], "+", 
         FractionBox[
          SubsuperscriptBox["a", 
           RowBox[{"\<\"2\"\>", ",", "1"}], "2"], 
          SubsuperscriptBox["a", 
           RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["1", 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
            FractionBox[
             RowBox[{"1", "+", 
              FractionBox["16", 
               SubsuperscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
              FractionBox[
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  SubscriptBox["a", 
                   RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
               SubsuperscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
              FractionBox[
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  SubscriptBox["a", 
                   RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
               SubsuperscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
              FractionBox[
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SubscriptBox["a", 
                   RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
                  SubscriptBox["a", 
                   RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
               SubsuperscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"2\"\>", ",", "1"}], "2"]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SubscriptBox["a", 
             RowBox[{"\<\"2\"\>", ",", "1"}]]}], ")"}]}], "+", 
         FractionBox[
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "-", 
              SubscriptBox["a", 
               RowBox[{"\<\"2\"\>", ",", "2"}]]}], ")"}], "2"]}], 
          RowBox[{
           SubsuperscriptBox["a", 
            RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
           SubsuperscriptBox["a", 
            RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}]], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["1", 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
            FractionBox[
             RowBox[{"1", "+", 
              FractionBox["16", 
               SubsuperscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
              FractionBox[
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  SubscriptBox["a", 
                   RowBox[{"\<\"1\"\>", ",", "1"}]]}], ")"}]}], 
               SubsuperscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
              FractionBox[
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  SubscriptBox["a", 
                   RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
               SubsuperscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}], "2"]], "+", 
              FractionBox[
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SubscriptBox["a", 
                   RowBox[{"\<\"1\"\>", ",", "1"}]], "+", 
                  SubscriptBox["a", 
                   RowBox[{"\<\"1\"\>", ",", "2"}]]}], ")"}]}], 
               SubsuperscriptBox["a", 
                RowBox[{"\<\"1\"\>", ",", "1"}], "2"]]}], 
             SubsuperscriptBox["a", 
              RowBox[{"\<\"2\"\>", ",", "1"}], "2"]], "+", 
            FractionBox[
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SubscriptBox["a", 
                 RowBox[{"\<\"2\"\>", ",", "1"}]]}], ")"}]}], 
             RowBox[{
              SubsuperscriptBox["a", 
               RowBox[{"\<\"1\"\>", ",", "1"}], "2"], " ", 
              SubsuperscriptBox["a", 
               RowBox[{"\<\"2\"\>", ",", "1"}], "2"]}]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SubscriptBox["a", 
             RowBox[{"\<\"2\"\>", ",", "2"}]]}], ")"}]}]}], ")"}]}]}], ")"}], 
    " ", 
    SuperscriptBox["q", "2"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "q", "]"}], "3"],
    SeriesData[$CellContext`q, 0, {}, -4, 3, 1],
    Editable->False]}],
  SeriesData[$CellContext`q, 0, {
   Subscript[$CellContext`a, "1", 1]^(-2) 
    Subscript[$CellContext`a, "2", 1]^(-2), 4 
    Subscript[$CellContext`a, "1", 1]^(-2) 
    Subscript[$CellContext`a, "2", 1]^(-2), 
    Subscript[$CellContext`a, "1", 1]^(-2) 
    Subscript[$CellContext`a, "2", 1]^(-2) (24 + 
     4 Subscript[$CellContext`a, "1", 1] + 
     Subscript[$CellContext`a, "1", 1]^2 + 
     4 Subscript[$CellContext`a, "1", 2] + 
     4 Subscript[$CellContext`a, "2", 1] + 
     Subscript[$CellContext`a, "1", 1] Subscript[$CellContext`a, "2", 1] + 
     Subscript[$CellContext`a, "2", 1]^2 + 
     4 Subscript[$CellContext`a, "2", 2]), 
    4 Subscript[$CellContext`a, "1", 1]^(-2) + (4 + 
      48 Subscript[$CellContext`a, "1", 1]^(-2) + 
      8 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
        Subscript[$CellContext`a, "1", 1]) + 
      8 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
        Subscript[$CellContext`a, "1", 2]) + 
      8 Subscript[$CellContext`a, "1", 1]^(-2) (
        Subscript[$CellContext`a, "1", 1] + 
        Subscript[$CellContext`a, "1", 2])) 
     Subscript[$CellContext`a, "2", 1]^(-2) + 
    4 Subscript[$CellContext`a, "1", 1]^(-1)/
     Subscript[$CellContext`a, "2", 1] + 
    8 Subscript[$CellContext`a, "1", 1]^(-2) 
     Subscript[$CellContext`a, "2", 1]^(-2) (1 + 
      Subscript[$CellContext`a, "2", 1]) + 
    8 Subscript[$CellContext`a, "1", 1]^(-2) 
     Subscript[$CellContext`a, "2", 1]^(-2) (1 + 
      Subscript[$CellContext`a, "2", 2]) + 
    8 Subscript[$CellContext`a, "1", 1]^(-2) 
     Subscript[$CellContext`a, "2", 1]^(-2) (
      Subscript[$CellContext`a, "2", 1] + Subscript[$CellContext`a, "2", 2]), 
    2 + 16 Subscript[$CellContext`a, "1", 1]^(-2) + 
    2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
      Subscript[$CellContext`a, "1", 1]) + 
    2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
      Subscript[$CellContext`a, "1", 2]) + 
    2 Subscript[$CellContext`a, "1", 1]^(-2) (
      Subscript[$CellContext`a, "1", 1] + 
      Subscript[$CellContext`a, "1", 2]) + (16 + 
      140 Subscript[$CellContext`a, "1", 1]^(-2) + 
      3 (-1 - Subscript[$CellContext`a, "1", 1])^2 
       Subscript[$CellContext`a, "1", 1]^(-2) + 
      Subscript[$CellContext`a, "1", 1]^2 + 
      2 (1 + 16 Subscript[$CellContext`a, "1", 1]^(-2)) (1 + 
        Subscript[$CellContext`a, "1", 1]) + 
      3 Subscript[$CellContext`a, "1", 1]^(-2) (-1 - 
         Subscript[$CellContext`a, "1", 2])^2 + 
      3 Subscript[$CellContext`a, "1", 1]^(-2) (-
          Subscript[$CellContext`a, "1", 1] - 
         Subscript[$CellContext`a, "1", 2])^2 + 
      2 (1 + 16 Subscript[$CellContext`a, "1", 1]^(-2) + 
        2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
          Subscript[$CellContext`a, "1", 1])) (1 + 
        Subscript[$CellContext`a, "1", 2]) + 
      2 (Subscript[$CellContext`a, "1", 1] + 
        Subscript[$CellContext`a, "1", 2]) (1 + 
        16 Subscript[$CellContext`a, "1", 1]^(-2) + 
        2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
          Subscript[$CellContext`a, "1", 1]) + 
        2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
          Subscript[$CellContext`a, "1", 2]))) 
     Subscript[$CellContext`a, "2", 1]^(-2) + 
    3 Subscript[$CellContext`a, "1", 1]^(-2) (-1 - 
       Subscript[$CellContext`a, "2", 1])^2 
     Subscript[$CellContext`a, "2", 1]^(-2) + 
    Subscript[$CellContext`a, "1", 1]^(-2) 
     Subscript[$CellContext`a, "2", 1]^2 + 
    2 (Subscript[$CellContext`a, "1", 1]^(-2) + (1 + 
        16 Subscript[$CellContext`a, "1", 1]^(-2) + 
        2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
          Subscript[$CellContext`a, "1", 1]) + 
        2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
          Subscript[$CellContext`a, "1", 2]) + 
        2 Subscript[$CellContext`a, "1", 1]^(-2) (
          Subscript[$CellContext`a, "1", 1] + 
          Subscript[$CellContext`a, "1", 2])) 
       Subscript[$CellContext`a, "2", 1]^(-2)) (1 + 
      Subscript[$CellContext`a, "2", 1]) + 
    3 Subscript[$CellContext`a, "1", 1]^(-2) 
     Subscript[$CellContext`a, "2", 1]^(-2) (-1 - 
       Subscript[$CellContext`a, "2", 2])^2 + 
    3 Subscript[$CellContext`a, "1", 1]^(-2) 
     Subscript[$CellContext`a, "2", 1]^(-2) (-
        Subscript[$CellContext`a, "2", 1] - 
       Subscript[$CellContext`a, "2", 2])^2 + 
    2 (Subscript[$CellContext`a, "1", 1]^(-2) + (1 + 
        16 Subscript[$CellContext`a, "1", 1]^(-2) + 
        2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
          Subscript[$CellContext`a, "1", 1]) + 
        2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
          Subscript[$CellContext`a, "1", 2]) + 
        2 Subscript[$CellContext`a, "1", 1]^(-2) (
          Subscript[$CellContext`a, "1", 1] + 
          Subscript[$CellContext`a, "1", 2])) 
       Subscript[$CellContext`a, "2", 1]^(-2) + 
      2 Subscript[$CellContext`a, "1", 1]^(-2) 
       Subscript[$CellContext`a, "2", 1]^(-2) (1 + 
        Subscript[$CellContext`a, "2", 1])) (1 + 
      Subscript[$CellContext`a, "2", 2]) + 
    Subscript[$CellContext`a, "1", 1]^(-1) 
     Subscript[$CellContext`a, "2", 1]^(-1) (24 + 
      4 Subscript[$CellContext`a, "1", 1] + 
      Subscript[$CellContext`a, "1", 1]^2 + 
      4 Subscript[$CellContext`a, "1", 2] + 
      4 Subscript[$CellContext`a, "2", 1] + 
      Subscript[$CellContext`a, "2", 1]^2 + 
      4 Subscript[$CellContext`a, "2", 2]) + 
    2 (Subscript[$CellContext`a, "2", 1] + 
      Subscript[$CellContext`a, "2", 2]) (
      Subscript[$CellContext`a, "1", 1]^(-2) + (1 + 
        16 Subscript[$CellContext`a, "1", 1]^(-2) + 
        2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
          Subscript[$CellContext`a, "1", 1]) + 
        2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
          Subscript[$CellContext`a, "1", 2]) + 
        2 Subscript[$CellContext`a, "1", 1]^(-2) (
          Subscript[$CellContext`a, "1", 1] + 
          Subscript[$CellContext`a, "1", 2])) 
       Subscript[$CellContext`a, "2", 1]^(-2) + 
      2 Subscript[$CellContext`a, "1", 1]^(-2) 
       Subscript[$CellContext`a, "2", 1]^(-2) (1 + 
        Subscript[$CellContext`a, "2", 1]) + 
      2 Subscript[$CellContext`a, "1", 1]^(-2) 
       Subscript[$CellContext`a, "2", 1]^(-2) (1 + 
        Subscript[$CellContext`a, "2", 2])), 8 + 
    48 Subscript[$CellContext`a, "1", 1]^(-2) + 
    8 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
      Subscript[$CellContext`a, "1", 1]) + 
    8 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
      Subscript[$CellContext`a, "1", 2]) + 
    8 Subscript[$CellContext`a, "1", 1]^(-2) (
      Subscript[$CellContext`a, "1", 1] + 
      Subscript[$CellContext`a, "1", 2]) + (48 + 
      368 Subscript[$CellContext`a, "1", 1]^(-2) + 
      12 (-1 - Subscript[$CellContext`a, "1", 1])^2 
       Subscript[$CellContext`a, "1", 1]^(-2) + 
      4 Subscript[$CellContext`a, "1", 1]^2 + 
      2 (4 + 48 Subscript[$CellContext`a, "1", 1]^(-2)) (1 + 
        Subscript[$CellContext`a, "1", 1]) + 
      12 Subscript[$CellContext`a, "1", 1]^(-2) (-1 - 
         Subscript[$CellContext`a, "1", 2])^2 + 
      12 Subscript[$CellContext`a, "1", 1]^(-2) (-
          Subscript[$CellContext`a, "1", 1] - 
         Subscript[$CellContext`a, "1", 2])^2 + 
      2 (4 + 48 Subscript[$CellContext`a, "1", 1]^(-2) + 
        8 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
          Subscript[$CellContext`a, "1", 1])) (1 + 
        Subscript[$CellContext`a, "1", 2]) + 
      2 (Subscript[$CellContext`a, "1", 1] + 
        Subscript[$CellContext`a, "1", 2]) (4 + 
        48 Subscript[$CellContext`a, "1", 1]^(-2) + 
        8 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
          Subscript[$CellContext`a, "1", 1]) + 
        8 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
          Subscript[$CellContext`a, "1", 2]))) 
     Subscript[$CellContext`a, "2", 1]^(-2) + 
    12 Subscript[$CellContext`a, "1", 1]^(-2) (-1 - 
       Subscript[$CellContext`a, "2", 1])^2 
     Subscript[$CellContext`a, "2", 1]^(-2) + 
    4 Subscript[$CellContext`a, "1", 1]^(-2) 
     Subscript[$CellContext`a, "2", 1]^2 + 
    2 (4 Subscript[$CellContext`a, "1", 1]^(-2) + (4 + 
        48 Subscript[$CellContext`a, "1", 1]^(-2) + 
        8 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
          Subscript[$CellContext`a, "1", 1]) + 
        8 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
          Subscript[$CellContext`a, "1", 2]) + 
        8 Subscript[$CellContext`a, "1", 1]^(-2) (
          Subscript[$CellContext`a, "1", 1] + 
          Subscript[$CellContext`a, "1", 2])) 
       Subscript[$CellContext`a, "2", 1]^(-2)) (1 + 
      Subscript[$CellContext`a, "2", 1]) + 
    12 Subscript[$CellContext`a, "1", 1]^(-2) 
     Subscript[$CellContext`a, "2", 1]^(-2) (-1 - 
       Subscript[$CellContext`a, "2", 2])^2 + 
    12 Subscript[$CellContext`a, "1", 1]^(-2) 
     Subscript[$CellContext`a, "2", 1]^(-2) (-
        Subscript[$CellContext`a, "2", 1] - 
       Subscript[$CellContext`a, "2", 2])^2 + 
    2 (4 Subscript[$CellContext`a, "1", 1]^(-2) + (4 + 
        48 Subscript[$CellContext`a, "1", 1]^(-2) + 
        8 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
          Subscript[$CellContext`a, "1", 1]) + 
        8 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
          Subscript[$CellContext`a, "1", 2]) + 
        8 Subscript[$CellContext`a, "1", 1]^(-2) (
          Subscript[$CellContext`a, "1", 1] + 
          Subscript[$CellContext`a, "1", 2])) 
       Subscript[$CellContext`a, "2", 1]^(-2) + 
      8 Subscript[$CellContext`a, "1", 1]^(-2) 
       Subscript[$CellContext`a, "2", 1]^(-2) (1 + 
        Subscript[$CellContext`a, "2", 1])) (1 + 
      Subscript[$CellContext`a, "2", 2]) + 
    4 Subscript[$CellContext`a, "1", 1]^(-1) 
     Subscript[$CellContext`a, "2", 1]^(-1) (20 + 
      4 Subscript[$CellContext`a, "1", 1] + 
      Subscript[$CellContext`a, "1", 1]^2 + 
      4 Subscript[$CellContext`a, "1", 2] + 
      4 Subscript[$CellContext`a, "2", 1] + 
      Subscript[$CellContext`a, "2", 1]^2 + 
      4 Subscript[$CellContext`a, "2", 2]) + 
    2 (Subscript[$CellContext`a, "2", 1] + 
      Subscript[$CellContext`a, "2", 2]) (
      4 Subscript[$CellContext`a, "1", 1]^(-2) + (4 + 
        48 Subscript[$CellContext`a, "1", 1]^(-2) + 
        8 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
          Subscript[$CellContext`a, "1", 1]) + 
        8 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
          Subscript[$CellContext`a, "1", 2]) + 
        8 Subscript[$CellContext`a, "1", 1]^(-2) (
          Subscript[$CellContext`a, "1", 1] + 
          Subscript[$CellContext`a, "1", 2])) 
       Subscript[$CellContext`a, "2", 1]^(-2) + 
      8 Subscript[$CellContext`a, "1", 1]^(-2) 
       Subscript[$CellContext`a, "2", 1]^(-2) (1 + 
        Subscript[$CellContext`a, "2", 1]) + 
      8 Subscript[$CellContext`a, "1", 1]^(-2) 
       Subscript[$CellContext`a, "2", 1]^(-2) (1 + 
        Subscript[$CellContext`a, "2", 2])), 16 + 
    140 Subscript[$CellContext`a, "1", 1]^(-2) + 
    3 (-1 - Subscript[$CellContext`a, "1", 1])^2 
     Subscript[$CellContext`a, "1", 1]^(-2) + 
    Subscript[$CellContext`a, "1", 1]^2 + 
    2 (1 + 16 Subscript[$CellContext`a, "1", 1]^(-2)) (1 + 
      Subscript[$CellContext`a, "1", 1]) + 
    3 Subscript[$CellContext`a, "1", 1]^(-2) (-1 - 
       Subscript[$CellContext`a, "1", 2])^2 + 
    3 Subscript[$CellContext`a, "1", 1]^(-2) (-
        Subscript[$CellContext`a, "1", 1] - 
       Subscript[$CellContext`a, "1", 2])^2 + 
    2 (1 + 16 Subscript[$CellContext`a, "1", 1]^(-2) + 
      2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
        Subscript[$CellContext`a, "1", 1])) (1 + 
      Subscript[$CellContext`a, "1", 2]) + 
    2 (Subscript[$CellContext`a, "1", 1] + 
      Subscript[$CellContext`a, "1", 2]) (1 + 
      16 Subscript[$CellContext`a, "1", 1]^(-2) + 
      2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
        Subscript[$CellContext`a, "1", 1]) + 
      2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
        Subscript[$CellContext`a, "1", 2])) + 
    3 (Subscript[$CellContext`a, "1", 1]^(-2) + (1 + 
        16 Subscript[$CellContext`a, "1", 1]^(-2) + 
        2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
          Subscript[$CellContext`a, "1", 1]) + 
        2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
          Subscript[$CellContext`a, "1", 2]) + 
        2 Subscript[$CellContext`a, "1", 1]^(-2) (
          Subscript[$CellContext`a, "1", 1] + 
          Subscript[$CellContext`a, "1", 2])) 
       Subscript[$CellContext`a, "2", 1]^(-2)) (-1 - 
       Subscript[$CellContext`a, "2", 1])^2 + (140 + 
      3 (1 + 16 Subscript[$CellContext`a, "1", 1]^(-2)) (-1 - 
         Subscript[$CellContext`a, "1", 1])^2 + 
      944 Subscript[$CellContext`a, "1", 1]^(-2) - 
      4 (-1 - Subscript[$CellContext`a, "1", 1])^3 
      Subscript[$CellContext`a, "1", 1]^(-2) + 
      16 Subscript[$CellContext`a, "1", 1]^2 + 
      2 (1 + Subscript[$CellContext`a, "1", 1]) (16 + 
        140 Subscript[$CellContext`a, "1", 1]^(-2) + 
        Subscript[$CellContext`a, "1", 1]^2) + 
      3 (1 + 16 Subscript[$CellContext`a, "1", 1]^(-2) + 
        2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
          Subscript[$CellContext`a, "1", 1])) (-1 - 
         Subscript[$CellContext`a, "1", 2])^2 - 4 
      Subscript[$CellContext`a, "1", 1]^(-2) (-1 - 
        Subscript[$CellContext`a, "1", 2])^3 - 4 
      Subscript[$CellContext`a, "1", 1]^(-2) (-
         Subscript[$CellContext`a, "1", 1] - 
        Subscript[$CellContext`a, "1", 2])^3 + 
      2 (16 + 140 Subscript[$CellContext`a, "1", 1]^(-2) + 
        3 (-1 - Subscript[$CellContext`a, "1", 1])^2 
         Subscript[$CellContext`a, "1", 1]^(-2) + 
        Subscript[$CellContext`a, "1", 1]^2 + 
        2 (1 + 16 Subscript[$CellContext`a, "1", 1]^(-2)) (1 + 
          Subscript[$CellContext`a, "1", 1])) (1 + 
        Subscript[$CellContext`a, "1", 2]) + 
      3 (-Subscript[$CellContext`a, "1", 1] - 
         Subscript[$CellContext`a, "1", 2])^2 (1 + 
        16 Subscript[$CellContext`a, "1", 1]^(-2) + 
        2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
          Subscript[$CellContext`a, "1", 1]) + 
        2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
          Subscript[$CellContext`a, "1", 2])) + 
      2 (Subscript[$CellContext`a, "1", 1] + 
        Subscript[$CellContext`a, "1", 2]) (16 + 
        140 Subscript[$CellContext`a, "1", 1]^(-2) + 
        3 (-1 - Subscript[$CellContext`a, "1", 1])^2 
         Subscript[$CellContext`a, "1", 1]^(-2) + 
        Subscript[$CellContext`a, "1", 1]^2 + 
        2 (1 + 16 Subscript[$CellContext`a, "1", 1]^(-2)) (1 + 
          Subscript[$CellContext`a, "1", 1]) + 
        3 Subscript[$CellContext`a, "1", 1]^(-2) (-1 - 
           Subscript[$CellContext`a, "1", 2])^2 + 
        2 (1 + 16 Subscript[$CellContext`a, "1", 1]^(-2) + 
          2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
            Subscript[$CellContext`a, "1", 1])) (1 + 
          Subscript[$CellContext`a, "1", 2]))) 
     Subscript[$CellContext`a, "2", 1]^(-2) - 4 
    Subscript[$CellContext`a, "1", 1]^(-2) (-1 - 
      Subscript[$CellContext`a, "2", 1])^3 
    Subscript[$CellContext`a, "2", 1]^(-2) + (1 + 
      16 Subscript[$CellContext`a, "1", 1]^(-2) + 
      2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
        Subscript[$CellContext`a, "1", 1]) + 
      2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
        Subscript[$CellContext`a, "1", 2]) + 
      2 Subscript[$CellContext`a, "1", 1]^(-2) (
        Subscript[$CellContext`a, "1", 1] + 
        Subscript[$CellContext`a, "1", 2])) 
     Subscript[$CellContext`a, "2", 1]^2 + 
    2 (1 + Subscript[$CellContext`a, "2", 1]) (1 + 
      16 Subscript[$CellContext`a, "1", 1]^(-2) + 
      2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
        Subscript[$CellContext`a, "1", 1]) + 
      2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
        Subscript[$CellContext`a, "1", 2]) + 
      2 Subscript[$CellContext`a, "1", 1]^(-2) (
        Subscript[$CellContext`a, "1", 1] + 
        Subscript[$CellContext`a, "1", 2]) + (16 + 
        140 Subscript[$CellContext`a, "1", 1]^(-2) + 
        3 (-1 - Subscript[$CellContext`a, "1", 1])^2 
         Subscript[$CellContext`a, "1", 1]^(-2) + 
        Subscript[$CellContext`a, "1", 1]^2 + 
        2 (1 + 16 Subscript[$CellContext`a, "1", 1]^(-2)) (1 + 
          Subscript[$CellContext`a, "1", 1]) + 
        3 Subscript[$CellContext`a, "1", 1]^(-2) (-1 - 
           Subscript[$CellContext`a, "1", 2])^2 + 
        3 Subscript[$CellContext`a, "1", 1]^(-2) (-
            Subscript[$CellContext`a, "1", 1] - 
           Subscript[$CellContext`a, "1", 2])^2 + 
        2 (1 + 16 Subscript[$CellContext`a, "1", 1]^(-2) + 
          2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
            Subscript[$CellContext`a, "1", 1])) (1 + 
          Subscript[$CellContext`a, "1", 2]) + 
        2 (Subscript[$CellContext`a, "1", 1] + 
          Subscript[$CellContext`a, "1", 2]) (1 + 
          16 Subscript[$CellContext`a, "1", 1]^(-2) + 
          2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
            Subscript[$CellContext`a, "1", 1]) + 
          2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
            Subscript[$CellContext`a, "1", 2]))) 
       Subscript[$CellContext`a, "2", 1]^(-2) + 
      Subscript[$CellContext`a, "1", 1]^(-2) 
       Subscript[$CellContext`a, "2", 1]^2) + 
    3 (Subscript[$CellContext`a, "1", 1]^(-2) + (1 + 
        16 Subscript[$CellContext`a, "1", 1]^(-2) + 
        2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
          Subscript[$CellContext`a, "1", 1]) + 
        2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
          Subscript[$CellContext`a, "1", 2]) + 
        2 Subscript[$CellContext`a, "1", 1]^(-2) (
          Subscript[$CellContext`a, "1", 1] + 
          Subscript[$CellContext`a, "1", 2])) 
       Subscript[$CellContext`a, "2", 1]^(-2) + 
      2 Subscript[$CellContext`a, "1", 1]^(-2) 
       Subscript[$CellContext`a, "2", 1]^(-2) (1 + 
        Subscript[$CellContext`a, "2", 1])) (-1 - 
       Subscript[$CellContext`a, "2", 2])^2 - 4 
    Subscript[$CellContext`a, "1", 1]^(-2) 
    Subscript[$CellContext`a, "2", 1]^(-2) (-1 - 
      Subscript[$CellContext`a, "2", 2])^3 - 4 
    Subscript[$CellContext`a, "1", 1]^(-2) 
    Subscript[$CellContext`a, "2", 1]^(-2) (-
       Subscript[$CellContext`a, "2", 1] - 
      Subscript[$CellContext`a, "2", 2])^3 + 
    2 (1 + 16 Subscript[$CellContext`a, "1", 1]^(-2) + 
      2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
        Subscript[$CellContext`a, "1", 1]) + 
      2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
        Subscript[$CellContext`a, "1", 2]) + 
      2 Subscript[$CellContext`a, "1", 1]^(-2) (
        Subscript[$CellContext`a, "1", 1] + 
        Subscript[$CellContext`a, "1", 2]) + (16 + 
        140 Subscript[$CellContext`a, "1", 1]^(-2) + 
        3 (-1 - Subscript[$CellContext`a, "1", 1])^2 
         Subscript[$CellContext`a, "1", 1]^(-2) + 
        Subscript[$CellContext`a, "1", 1]^2 + 
        2 (1 + 16 Subscript[$CellContext`a, "1", 1]^(-2)) (1 + 
          Subscript[$CellContext`a, "1", 1]) + 
        3 Subscript[$CellContext`a, "1", 1]^(-2) (-1 - 
           Subscript[$CellContext`a, "1", 2])^2 + 
        3 Subscript[$CellContext`a, "1", 1]^(-2) (-
            Subscript[$CellContext`a, "1", 1] - 
           Subscript[$CellContext`a, "1", 2])^2 + 
        2 (1 + 16 Subscript[$CellContext`a, "1", 1]^(-2) + 
          2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
            Subscript[$CellContext`a, "1", 1])) (1 + 
          Subscript[$CellContext`a, "1", 2]) + 
        2 (Subscript[$CellContext`a, "1", 1] + 
          Subscript[$CellContext`a, "1", 2]) (1 + 
          16 Subscript[$CellContext`a, "1", 1]^(-2) + 
          2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
            Subscript[$CellContext`a, "1", 1]) + 
          2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
            Subscript[$CellContext`a, "1", 2]))) 
       Subscript[$CellContext`a, "2", 1]^(-2) + 
      3 Subscript[$CellContext`a, "1", 1]^(-2) (-1 - 
         Subscript[$CellContext`a, "2", 1])^2 
       Subscript[$CellContext`a, "2", 1]^(-2) + 
      Subscript[$CellContext`a, "1", 1]^(-2) 
       Subscript[$CellContext`a, "2", 1]^2 + 
      2 (Subscript[$CellContext`a, "1", 1]^(-2) + (1 + 
          16 Subscript[$CellContext`a, "1", 1]^(-2) + 
          2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
            Subscript[$CellContext`a, "1", 1]) + 
          2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
            Subscript[$CellContext`a, "1", 2]) + 
          2 Subscript[$CellContext`a, "1", 1]^(-2) (
            Subscript[$CellContext`a, "1", 1] + 
            Subscript[$CellContext`a, "1", 2])) 
         Subscript[$CellContext`a, "2", 1]^(-2)) (1 + 
        Subscript[$CellContext`a, "2", 1])) (1 + 
      Subscript[$CellContext`a, "2", 2]) + 
    4 (6 + Subscript[$CellContext`a, "1", 1] + 
      Subscript[$CellContext`a, "1", 2] + Subscript[$CellContext`a, "2", 1] + 
      Subscript[$CellContext`a, "2", 2]) + 
    Subscript[$CellContext`a, "1", 1]^(-1) 
     Subscript[$CellContext`a, "2", 1]^(-1) (304 + 
      98 Subscript[$CellContext`a, "1", 1] + 
      34 Subscript[$CellContext`a, "1", 1]^2 + 
      4 Subscript[$CellContext`a, "1", 1]^3 + 
      98 Subscript[$CellContext`a, "1", 2] + 
      18 Subscript[$CellContext`a, "1", 1] Subscript[$CellContext`a, "1", 2] + 
      4 Subscript[$CellContext`a, "1", 1]^2 Subscript[$CellContext`a, "1", 2] + 
      10 Subscript[$CellContext`a, "1", 2]^2 + 
      98 Subscript[$CellContext`a, "2", 1] + 
      16 Subscript[$CellContext`a, "1", 1] Subscript[$CellContext`a, "2", 1] + 
      4 Subscript[$CellContext`a, "1", 1]^2 Subscript[$CellContext`a, "2", 1] + 
      16 Subscript[$CellContext`a, "1", 2] Subscript[$CellContext`a, "2", 1] + 
      34 Subscript[$CellContext`a, "2", 1]^2 + 
      4 Subscript[$CellContext`a, "1", 1] Subscript[$CellContext`a, "2", 1]^2 + 
      Subscript[$CellContext`a, "1", 1]^2 Subscript[$CellContext`a, "2", 1]^2 + 
      4 Subscript[$CellContext`a, "1", 2] Subscript[$CellContext`a, "2", 1]^2 + 
      4 Subscript[$CellContext`a, "2", 1]^3 + 
      98 Subscript[$CellContext`a, "2", 2] + 
      16 Subscript[$CellContext`a, "1", 1] Subscript[$CellContext`a, "2", 2] + 
      4 Subscript[$CellContext`a, "1", 1]^2 Subscript[$CellContext`a, "2", 2] + 
      16 Subscript[$CellContext`a, "1", 2] Subscript[$CellContext`a, "2", 2] + 
      18 Subscript[$CellContext`a, "2", 1] Subscript[$CellContext`a, "2", 2] + 
      4 Subscript[$CellContext`a, "2", 1]^2 Subscript[$CellContext`a, "2", 2] + 
      10 Subscript[$CellContext`a, "2", 2]^2) + 
    3 (-Subscript[$CellContext`a, "2", 1] - 
       Subscript[$CellContext`a, "2", 2])^2 (
      Subscript[$CellContext`a, "1", 1]^(-2) + (1 + 
        16 Subscript[$CellContext`a, "1", 1]^(-2) + 
        2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
          Subscript[$CellContext`a, "1", 1]) + 
        2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
          Subscript[$CellContext`a, "1", 2]) + 
        2 Subscript[$CellContext`a, "1", 1]^(-2) (
          Subscript[$CellContext`a, "1", 1] + 
          Subscript[$CellContext`a, "1", 2])) 
       Subscript[$CellContext`a, "2", 1]^(-2) + 
      2 Subscript[$CellContext`a, "1", 1]^(-2) 
       Subscript[$CellContext`a, "2", 1]^(-2) (1 + 
        Subscript[$CellContext`a, "2", 1]) + 
      2 Subscript[$CellContext`a, "1", 1]^(-2) 
       Subscript[$CellContext`a, "2", 1]^(-2) (1 + 
        Subscript[$CellContext`a, "2", 2])) + 
    2 (Subscript[$CellContext`a, "2", 1] + 
      Subscript[$CellContext`a, "2", 2]) (1 + 
      16 Subscript[$CellContext`a, "1", 1]^(-2) + 
      2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
        Subscript[$CellContext`a, "1", 1]) + 
      2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
        Subscript[$CellContext`a, "1", 2]) + 
      2 Subscript[$CellContext`a, "1", 1]^(-2) (
        Subscript[$CellContext`a, "1", 1] + 
        Subscript[$CellContext`a, "1", 2]) + (16 + 
        140 Subscript[$CellContext`a, "1", 1]^(-2) + 
        3 (-1 - Subscript[$CellContext`a, "1", 1])^2 
         Subscript[$CellContext`a, "1", 1]^(-2) + 
        Subscript[$CellContext`a, "1", 1]^2 + 
        2 (1 + 16 Subscript[$CellContext`a, "1", 1]^(-2)) (1 + 
          Subscript[$CellContext`a, "1", 1]) + 
        3 Subscript[$CellContext`a, "1", 1]^(-2) (-1 - 
           Subscript[$CellContext`a, "1", 2])^2 + 
        3 Subscript[$CellContext`a, "1", 1]^(-2) (-
            Subscript[$CellContext`a, "1", 1] - 
           Subscript[$CellContext`a, "1", 2])^2 + 
        2 (1 + 16 Subscript[$CellContext`a, "1", 1]^(-2) + 
          2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
            Subscript[$CellContext`a, "1", 1])) (1 + 
          Subscript[$CellContext`a, "1", 2]) + 
        2 (Subscript[$CellContext`a, "1", 1] + 
          Subscript[$CellContext`a, "1", 2]) (1 + 
          16 Subscript[$CellContext`a, "1", 1]^(-2) + 
          2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
            Subscript[$CellContext`a, "1", 1]) + 
          2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
            Subscript[$CellContext`a, "1", 2]))) 
       Subscript[$CellContext`a, "2", 1]^(-2) + 
      3 Subscript[$CellContext`a, "1", 1]^(-2) (-1 - 
         Subscript[$CellContext`a, "2", 1])^2 
       Subscript[$CellContext`a, "2", 1]^(-2) + 
      Subscript[$CellContext`a, "1", 1]^(-2) 
       Subscript[$CellContext`a, "2", 1]^2 + 
      2 (Subscript[$CellContext`a, "1", 1]^(-2) + (1 + 
          16 Subscript[$CellContext`a, "1", 1]^(-2) + 
          2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
            Subscript[$CellContext`a, "1", 1]) + 
          2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
            Subscript[$CellContext`a, "1", 2]) + 
          2 Subscript[$CellContext`a, "1", 1]^(-2) (
            Subscript[$CellContext`a, "1", 1] + 
            Subscript[$CellContext`a, "1", 2])) 
         Subscript[$CellContext`a, "2", 1]^(-2)) (1 + 
        Subscript[$CellContext`a, "2", 1]) + 
      3 Subscript[$CellContext`a, "1", 1]^(-2) 
       Subscript[$CellContext`a, "2", 1]^(-2) (-1 - 
         Subscript[$CellContext`a, "2", 2])^2 + 
      2 (Subscript[$CellContext`a, "1", 1]^(-2) + (1 + 
          16 Subscript[$CellContext`a, "1", 1]^(-2) + 
          2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
            Subscript[$CellContext`a, "1", 1]) + 
          2 Subscript[$CellContext`a, "1", 1]^(-2) (1 + 
            Subscript[$CellContext`a, "1", 2]) + 
          2 Subscript[$CellContext`a, "1", 1]^(-2) (
            Subscript[$CellContext`a, "1", 1] + 
            Subscript[$CellContext`a, "1", 2])) 
         Subscript[$CellContext`a, "2", 1]^(-2) + 
        2 Subscript[$CellContext`a, "1", 1]^(-2) 
         Subscript[$CellContext`a, "2", 1]^(-2) (1 + 
          Subscript[$CellContext`a, "2", 1])) (1 + 
        Subscript[$CellContext`a, "2", 2]))}, -4, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.9344303635337257`*^9},
 CellLabel->
  "Out[196]=",ExpressionUUID->"77d7b9f4-ad24-d74a-a0f2-1503c7af68d1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"clearly", " ", "lots", " ", "of", " ", "errors", " ", "here"}], 
   " ", "..."}], "*)"}]], "Input",
 CellChangeTimes->{{3.9344303813154984`*^9, 
  3.934430385409628*^9}},ExpressionUUID->"7c2dd21c-b6a2-4847-aa52-\
9436d3048fa1"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152, 579.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
CommonDefaultFormatTypes->{"Output"->StandardForm},
FrontEndVersion->"14.0 for Microsoft Windows (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"5479c82c-28bc-7947-88bf-e821b298975a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 163, 3, 67, "Section",ExpressionUUID->"01051dae-a0a2-6344-87fd-9f7a84cfa9a8"],
Cell[CellGroupData[{
Cell[768, 29, 25647, 640, 3208, "Input",ExpressionUUID->"2b7bfcb1-691e-1b40-bc5f-21bb3be2259c"],
Cell[26418, 671, 335, 5, 70, "Output",ExpressionUUID->"6dd5af62-b6d1-3845-84b0-e2bbff5f22c7"],
Cell[CellGroupData[{
Cell[26778, 680, 352, 6, 70, "Print",ExpressionUUID->"a1ee6ec0-02e4-7a45-a123-0f900d7c6214"],
Cell[27133, 688, 369, 6, 70, "Print",ExpressionUUID->"37e76887-8d76-3644-87b7-250851eb21da"]
}, Open  ]],
Cell[27517, 697, 331, 4, 70, "Output",ExpressionUUID->"7720c58c-ca2d-5943-a73f-c52acf160bed"],
Cell[27851, 703, 345, 4, 70, "Output",ExpressionUUID->"27d29e32-b3bf-3b48-ac21-3d8104048626"],
Cell[28199, 709, 335, 4, 70, "Output",ExpressionUUID->"16d19134-fa7d-444c-8f32-35c52f17a347"],
Cell[28537, 715, 697, 14, 70, "Message",ExpressionUUID->"45216612-467e-a044-a9f2-b6e8dbc3f08c"],
Cell[29237, 731, 346, 4, 70, "Output",ExpressionUUID->"b7d0839f-8feb-8c49-aadf-845e7aa185ae"],
Cell[29586, 737, 346, 4, 70, "Output",ExpressionUUID->"dc5de31a-9f13-af42-bc00-41976f323038"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[29981, 747, 374, 6, 53, "Section",ExpressionUUID->"77fb14dc-b10b-e549-98d4-37c89900252a"],
Cell[CellGroupData[{
Cell[30380, 757, 204, 4, 45, "Subsubsection",ExpressionUUID->"20949e6d-7820-b54d-ba10-4dfecc17ac11"],
Cell[30587, 763, 335, 7, 58, "Text",ExpressionUUID->"84b56719-a2d7-ad45-b05e-ac1a99e9db02"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30959, 775, 199, 4, 45, "Subsubsection",ExpressionUUID->"588f61b7-9aee-e548-9e93-0d5926806285"],
Cell[31161, 781, 146789, 2412, 166, "Input",ExpressionUUID->"e3a86057-3cf2-504e-a265-36f6983bd964"],
Cell[177953, 3195, 65538, 1167, 1113, "Input",ExpressionUUID->"33d03ffd-4d77-c646-93f8-9a70ac3dff59"],
Cell[243494, 4364, 13480, 271, 523, "Input",ExpressionUUID->"3aee8f23-be18-db45-82c5-f907341a3342"],
Cell[256977, 4637, 32864, 579, 421, "Input",ExpressionUUID->"001d2104-1b62-2841-89ed-6c84a179c504"],
Cell[CellGroupData[{
Cell[289866, 5220, 873, 23, 48, "Input",ExpressionUUID->"da61cc32-3de7-c94f-80c6-abfc0d38e24a"],
Cell[290742, 5245, 7772, 255, 183, "Output",ExpressionUUID->"3cac0490-eeb6-7640-9478-0f00e9c9589a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298551, 5505, 487, 13, 48, "Input",ExpressionUUID->"317911da-06e9-a940-9546-0dc47fa3be0e"],
Cell[299041, 5520, 105413, 2672, 1940, "Output",ExpressionUUID->"77d7b9f4-ad24-d74a-a0f2-1503c7af68d1"]
}, Open  ]],
Cell[404469, 8195, 285, 7, 28, "Input",ExpressionUUID->"7c2dd21c-b6a2-4847-aa52-9436d3048fa1"]
}, Open  ]]
}, Open  ]]
}
]
*)

